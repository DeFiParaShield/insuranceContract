import { Transaction } from '@solana/web3.js';
import WebSocket from 'isomorphic-ws';
import { ServerMessageToApp } from '../types/ServerMessage';
import { SolanaAppInfo } from '../types/AppInfo';
export declare class AppSolana {
    ws: WebSocket;
    events: {
        [key: string]: (data: any) => void | undefined;
    };
    sessionId: string;
    timeout: number;
    constructor(ws: WebSocket, timeout: number);
    static build: ({ appMetadata, url, onUserConnect, timeout }: SolanaAppInfo) => Promise<AppSolana>;
    send: (message: object) => Promise<ServerMessageToApp>;
    signTransaction: (transaction: Transaction) => Promise<Transaction>;
    signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;
    signMessage: (message: string) => Promise<Uint8Array>;
}
