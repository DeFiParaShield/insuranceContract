import { NETWORK } from '../../../../../common/types';
export declare enum AppMessageTypes {
    Init = "Init",
    SignTransaction = "SignTransaction",
    SignAllTransactions = "SignAllTransactions",
    SignMessage = "SignMessage"
}
export declare enum Version {
    V1 = "V1"
}
export interface InitMessage {
    type: AppMessageTypes.Init;
    application: string;
    description: string;
    additionalInfo: string;
    network: NETWORK;
    icon: string;
    version: Version;
    id: string;
}
export interface SignTransactionMessage {
    type: AppMessageTypes.SignTransaction;
    transaction: string;
    network: NETWORK;
}
export interface SignAllTransactionsMessage {
    type: AppMessageTypes.SignAllTransactions;
    transactions: string[];
    network: NETWORK;
}
export interface SignMessageMessage {
    type: AppMessageTypes.SignMessage;
    message: string;
    network: NETWORK;
}
export declare type AppMessages = SignTransactionMessage | InitMessage;
interface Info {
    application: string;
    description: string;
    additionalInfo: string;
    icon: string;
    network: NETWORK;
}
export declare const createInitAction: ({ additionalInfo, application, description, network, icon }: Info) => InitMessage;
export {};
