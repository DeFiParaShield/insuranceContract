import WebSocket from 'isomorphic-ws';
import { transactions } from 'near-api-js';
import { Transaction } from 'near-api-js/lib/transaction';
import { NearAppInfo } from '../types/AppInfo';
import { ServerMessageToApp } from '../types/ServerMessage';
export declare class AppNear {
    ws: WebSocket;
    events: {
        [key: string]: (data: any, metadata?: string) => void | undefined;
    };
    sessionId: string;
    timeout: number;
    constructor(ws: WebSocket, timeout: number);
    static build: ({ appMetadata, url, onUserConnect, timeout }: NearAppInfo) => Promise<AppNear>;
    send: (message: object) => Promise<ServerMessageToApp>;
    signTransaction: (transaction: Transaction) => Promise<transactions.SignedTransaction>;
    signAllTransactions: (txs: Transaction[]) => Promise<transactions.SignedTransaction[]>;
    signMessage: (message: string) => Promise<Uint8Array>;
}
