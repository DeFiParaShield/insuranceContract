"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NightlyConnectModal = void 0;
const qr_code_1 = require("@nightlylabs/qr-code");
const style_1 = require("./style");
const assets = __importStar(require("./assets"));
class NightlyConnectModal {
    openModal(sessionId, network) {
        var _a, _b;
        if (!this._styleElement) {
            const style = document.createElement('style');
            style.textContent = style_1.modalStyle;
            this._styleElement = style;
            const head = (_a = document.head) !== null && _a !== void 0 ? _a : document.getElementsByTagName('head')[0];
            head.appendChild(this._styleElement);
        }
        if (!this._anchorElement) {
            const anchor = document.createElement('div');
            anchor.style.position = 'relative';
            document.body.appendChild(anchor);
            this._anchorElement = anchor;
        }
        if (sessionId !== this._lastSessionId || network !== this._network || !this._modalElement) {
            this._lastSessionId = sessionId;
            this._network = network;
            const topRow = document.createElement('div');
            topRow.classList.add('nightlyConnect_topRow');
            const logo = document.createElement('img');
            logo.classList.add('nightlyConnect_logo');
            logo.setAttribute('src', assets.logo);
            topRow.appendChild(logo);
            const close = document.createElement('img');
            close.classList.add('nightlyConnect_close');
            close.setAttribute('src', assets.close);
            close.addEventListener('click', () => {
                this.closeModal();
            });
            topRow.appendChild(close);
            const qrWrapper = document.createElement('div');
            qrWrapper.classList.add('nightlyConnect_qrWrapper');
            const qrCode = (0, qr_code_1.generateNightlyQRCodeXML)('nightlyconnect:' + sessionId + '?network=' + network, { width: 440, height: 440 });
            const base64 = btoa(qrCode);
            const qrImg = document.createElement('img');
            qrImg.classList.add('nightlyConnect_qrImg');
            qrImg.setAttribute('src', 'data:image/svg+xml;base64,' + base64);
            qrWrapper.appendChild(qrImg);
            const bottomRow = document.createElement('div');
            bottomRow.classList.add('nightlyConnect_bottomRow');
            const desc = document.createElement('span');
            desc.classList.add('nightlyConnect_desc');
            desc.textContent = 'Scan the QR code with Nightly Wallet and approve the action.';
            bottomRow.appendChild(desc);
            const copyButton = document.createElement('button');
            copyButton.classList.add('nightlyConnect_copyButton');
            copyButton.textContent = 'Copy QR';
            copyButton.addEventListener('click', () => {
                this.copySessionId();
            });
            bottomRow.appendChild(copyButton);
            const wrapper = document.createElement('div');
            wrapper.classList.add('nightlyConnect_wrapper');
            wrapper.appendChild(topRow);
            wrapper.appendChild(qrWrapper);
            wrapper.appendChild(bottomRow);
            const overlay = document.createElement('div');
            overlay.classList.add('nightlyConnect_overlay');
            overlay.appendChild(wrapper);
            this._anchorElement.replaceChildren(overlay);
            this._modalElement = overlay;
        }
        this._modalElement.style.display = '';
        (_b = this.onOpen) === null || _b === void 0 ? void 0 : _b.call(this);
    }
    closeModal() {
        var _a;
        if (this._modalElement) {
            this._modalElement.style.display = 'none';
            (_a = this.onClose) === null || _a === void 0 ? void 0 : _a.call(this);
        }
    }
    copySessionId() {
        if (this._lastSessionId) {
            navigator.clipboard.writeText('nightlyconnect:' + this._lastSessionId + '?network=' + this._network);
        }
    }
}
exports.NightlyConnectModal = NightlyConnectModal;
