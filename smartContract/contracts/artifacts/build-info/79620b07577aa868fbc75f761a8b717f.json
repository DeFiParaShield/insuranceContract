{
	"id": "79620b07577aa868fbc75f761a8b717f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/insurance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\npragma abicoder v2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@aave/core-v3/contracts/interfaces/IPool.sol\";\nimport \"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ninterface IClaims {\n    function computePremium(uint256 quantity) external view returns (uint256);\n    function addCoverage( uint256 amount, address account ) external;\n    function reduceCoverage( uint256 amount, address account ) external;\n}\n\ncontract insurance is Ownable {\n    using SafeMath for uint256;\n    address aaveAddress;\n    IPool poolAave;\n    IPoolAddressesProvider private immutable poolAddressProvider;\n    uint256 totalSharesLoansPerAsset = 0;\n    address _addressClaimContract;\n\n    address _USDC = 0xF14f9596430931E177469715c591513308244e8F;  //Fake USDC but this token works in AAVE\n    mapping(address => uint256) private assets;\n    mapping(address => uint256) private sharesLoans;\n\n    constructor() {\n        poolAddressProvider = IPoolAddressesProvider(0xeb7A892BB04A8f836bDEeBbf60897A7Af1Bf5d7F);\n        aaveAddress = poolAddressProvider.getPool();\n        poolAave = IPool(aaveAddress);\n    }\n\n    function depositAsset(uint256 amount) public {\n        IERC20(_USDC).transferFrom(msg.sender, address(this), amount );\n        uint256 discount = IClaims(_addressClaimContract).computePremium( amount );\n        amount -= discount;\n        IERC20(_USDC).approve(_addressClaimContract, discount);\n        IClaims(_addressClaimContract).addCoverage( amount, msg.sender );\n        assets[msg.sender] += amount;\n        supplyLendToken( msg.sender, amount );\n    }\n\n    function withdrawAsset(uint256 percentage) public {\n        uint256 finalAmount = withdrawLendToken( msg.sender, percentage );\n        IClaims(_addressClaimContract).reduceCoverage( finalAmount, msg.sender );\n        assets[msg.sender] -= finalAmount;\n        IERC20(_USDC).transfer( msg.sender, finalAmount );\n    }\n\n    function supplyLendToken(address account, uint256 amount) private {\n        require( IERC20(_USDC).approve(aaveAddress, amount), \"This contract has not enough tokens\" );\n        poolAave.supply(_USDC, amount, address(this), 0);\n\n        if ( totalSharesLoansPerAsset == 0 ) {\n            sharesLoans[account] += amount;\n            totalSharesLoansPerAsset += amount;\n        } else {\n            address aTokenAddress = (poolAave.getReserveData(_USDC)).aTokenAddress;\n            uint256 currentBalance = IERC20(aTokenAddress).balanceOf( address(this) );\n            uint256 amountShares = Math.mulDiv( amount, totalSharesLoansPerAsset, currentBalance );\n            sharesLoans[account] += amountShares;\n            totalSharesLoansPerAsset += amountShares;\n        }\n\n    }\n\n    function withdrawLendToken(address account, uint256 percentage) private returns (uint256){\n        require(sharesLoans[account] > 0, \"User has not provided this token for lending\");\n\n        uint256 amountSharesUser = sharesLoans[account];\n        address aTokenAddress = (poolAave.getReserveData(_USDC)).aTokenAddress;\n        uint256 currentBalance = IERC20(aTokenAddress).balanceOf(address(this));\n\n        uint256 amountAsset = Math.mulDiv( amountSharesUser * percentage, currentBalance, totalSharesLoansPerAsset * 1000);\n        uint256 amountShares = Math.mulDiv( amountSharesUser, percentage, 1000);\n\n        poolAave.withdraw(_USDC, amountAsset, address(this));\n        sharesLoans[account] -= amountShares;\n        totalSharesLoansPerAsset -= amountShares;\n\n        return amountAsset;\n    }\n\n    function assetsOf(address account) public view returns (uint256) {\n        return assets[account];\n    }\n\n    function sharesLoansOf(address account) public view returns (uint256) {\n        return sharesLoans[account];\n    }\n\n    function getATokenAddress() public view returns (address) {\n        return poolAave.getReserveData(_USDC).aTokenAddress;\n    }\n\n    //This will be change by a DAO in the future.\n    function changeAddressClaimContract(address newAddress) public onlyOwner {\n        _addressClaimContract = newAddress;\n    }\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n */\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   */\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   */\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   */\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   */\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   */\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   */\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   */\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   */\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n */\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   */\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   */\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   */\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   */\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   */\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   */\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   */\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   */\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   */\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   */\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   */\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   * @return The backed amount\n   */\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   */\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   */\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   */\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   */\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   */\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   */\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   */\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   */\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   */\n  function getUserAccountData(\n    address user\n  )\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   */\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   */\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   */\n  function setReserveInterestRateStrategyAddress(\n    address asset,\n    address rateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   */\n  function setConfiguration(\n    address asset,\n    DataTypes.ReserveConfigurationMap calldata configuration\n  ) external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   */\n  function getConfiguration(\n    address asset\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   */\n  function getUserConfiguration(\n    address user\n  ) external view returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\n   * combination with variable debt supply/balances.\n   * If using this function externally, consider that is possible to have an increasing normalized\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\n   * (e.g. only updates with non-zero variable debt supply)\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   */\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the underlying assets of all the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the underlying assets of the initialized reserves\n   */\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n   * @return The address of the reserve associated with id\n   */\n  function getReserveAddressById(uint16 id) external view returns (address);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   */\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(address token, address to, uint256 amount) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62-63: reserved\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "backer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "BackUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDebt",
									"type": "uint256"
								}
							],
							"name": "IsolationModeTotalDebtUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "MintUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountMinted",
									"type": "uint256"
								}
							],
							"name": "MintedToTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useATokens",
									"type": "bool"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Supply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								}
							],
							"name": "SwapBorrowRateMode",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "UserEModeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BRIDGE_PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TOTAL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_NUMBER_RESERVES",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "backUnbacked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "config",
									"type": "tuple"
								}
							],
							"name": "configureEModeCategory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "dropReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "interestRateModes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoanSimple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								}
							],
							"name": "getEModeCategoryData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "id",
									"type": "uint16"
								}
							],
							"name": "getReserveAddressById",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "uint16",
											"name": "id",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "accruedToTreasury",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "unbacked",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "isolationModeTotalDebt",
											"type": "uint128"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserEMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "mintUnbacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "repayWithATokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "repayWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "resetIsolationModeTotalDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "configuration",
									"type": "tuple"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "setUserEMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "supplyWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bridgeProtocolFee",
									"type": "uint256"
								}
							],
							"name": "updateBridgeProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumToProtocol",
									"type": "uint128"
								}
							],
							"name": "updateFlashloanPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"BackUnbacked(address,address,uint256,uint256)": {
								"details": "Emitted on backUnbacked()",
								"params": {
									"amount": "The amount added as backing",
									"backer": "The address paying for the backing",
									"fee": "The amount paid in fees",
									"reserve": "The address of the underlying asset of the reserve"
								}
							},
							"Borrow(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed, expressed in ray",
									"interestRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"interestRateMode": "The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"IsolationModeTotalDebtUpdated(address,uint256)": {
								"details": "Emitted on borrow(), repay() and liquidationCall() when using isolated assets",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"totalDebt": "The total isolation mode debt for the reserve"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"MintUnbacked(address,address,address,uint256,uint16)": {
								"details": "Emitted on mintUnbacked()",
								"params": {
									"amount": "The amount of supplied assets",
									"onBehalfOf": "The beneficiary of the supplied assets, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"MintedToTreasury(address,uint256)": {
								"details": "Emitted when the protocol treasury receives minted aTokens from the accrued interest.",
								"params": {
									"amountMinted": "The amount minted to the treasury",
									"reserve": "The address of the reserve"
								}
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed"
								}
							},
							"Repay(address,address,address,uint256,bool)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"useATokens": "True if the repayment is done using aTokens, `false` if done with underlying asset directly",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated.",
								"params": {
									"liquidityIndex": "The next liquidity index",
									"liquidityRate": "The next liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The next stable borrow rate",
									"variableBorrowIndex": "The next variable borrow index",
									"variableBorrowRate": "The next variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"Supply(address,address,address,uint256,uint16)": {
								"details": "Emitted on supply()",
								"params": {
									"amount": "The amount supplied",
									"onBehalfOf": "The beneficiary of the supply, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"SwapBorrowRateMode(address,address,uint8)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"UserEModeSet(address,uint8)": {
								"details": "Emitted when the user selects a certain asset category for eMode",
								"params": {
									"categoryId": "The category id",
									"user": "The address of the user"
								}
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn",
									"reserve": "The address of the underlying asset being withdrawn",
									"to": "The address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"returns": {
									"_0": "The address of the PoolAddressesProvider"
								}
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"returns": {
									"_0": "The bridge fee sent to the protocol treasury"
								}
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"returns": {
									"_0": "The total fee on flashloans"
								}
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"returns": {
									"_0": "The flashloan fee sent to the protocol treasury"
								}
							},
							"MAX_NUMBER_RESERVES()": {
								"returns": {
									"_0": "The maximum number of reserves supported"
								}
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"returns": {
									"_0": "The percentage of available liquidity to borrow, expressed in bps"
								}
							},
							"backUnbacked(address,uint256,uint256)": {
								"params": {
									"amount": "The amount to back",
									"asset": "The address of the underlying asset to back",
									"fee": "The amount paid in fees"
								},
								"returns": {
									"_0": "The backed amount"
								}
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"details": "In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets",
								"params": {
									"config": "The configuration of the category",
									"id": "The id of the category"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deprecated: Use the `supply` function instead",
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"dropReserve(address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								}
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"details": "Only callable by the overlying aToken of the `asset`",
								"params": {
									"amount": "The amount being transferred/withdrawn",
									"asset": "The address of the underlying asset of the aToken",
									"balanceFromBefore": "The aToken balance of the `from` user before the transfer",
									"balanceToBefore": "The aToken balance of the `to` user before the transfer",
									"from": "The user from which the aTokens are transferred",
									"to": "The user receiving the aTokens"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amounts": "The amounts of the assets being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"interestRateModes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amount": "The amount of the asset being flash-borrowed",
									"asset": "The address of the asset being flash-borrowed",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"getConfiguration(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve"
								}
							},
							"getEModeCategoryData(uint8)": {
								"params": {
									"id": "The id of the category"
								},
								"returns": {
									"_0": "The configuration data of the category"
								}
							},
							"getReserveAddressById(uint16)": {
								"params": {
									"id": "The id of the reserve as stored in the DataTypes.ReserveData struct"
								},
								"returns": {
									"_0": "The address of the reserve associated with id"
								}
							},
							"getReserveData(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state and configuration data of the reserve"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getReservesList()": {
								"details": "It does not include dropped reserves",
								"returns": {
									"_0": "The addresses of the underlying assets of the initialized reserves"
								}
							},
							"getUserAccountData(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsBase": "The borrowing power left of the user in the base currency used by the price feed",
									"currentLiquidationThreshold": "The liquidation threshold of the user",
									"healthFactor": "The current health factor of the user",
									"ltv": "The loan to value of The user",
									"totalCollateralBase": "The total collateral of the user in the base currency used by the price feed",
									"totalDebtBase": "The total debt of the user in the base currency used by the price feed"
								}
							},
							"getUserConfiguration(address)": {
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user"
								}
							},
							"getUserEMode(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The eMode id"
								}
							},
							"initReserve(address,address,address,address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"aTokenAddress": "The address of the aToken that will be assigned to the reserve",
									"asset": "The address of the underlying asset of the reserve",
									"interestRateStrategyAddress": "The address of the interest rate strategy contract",
									"stableDebtAddress": "The address of the StableDebtToken that will be assigned to the reserve",
									"variableDebtAddress": "The address of the VariableDebtToken that will be assigned to the reserve"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"mintToTreasury(address[])": {
								"params": {
									"assets": "The list of reserves for which the minting needs to be executed"
								}
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to mint",
									"asset": "The address of the underlying asset to mint",
									"onBehalfOf": "The address that will receive the aTokens",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithATokens(address,uint256,uint256)": {
								"details": "Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt",
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"deadline": "The deadline timestamp that the permit is valid",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"rescueTokens(address,address,uint256)": {
								"params": {
									"amount": "The amount of token to transfer",
									"to": "The address of the recipient",
									"token": "The address of the token"
								}
							},
							"resetIsolationModeTotalDebt(address)": {
								"details": "It requires the given asset has zero debt ceiling",
								"params": {
									"asset": "The address of the underlying asset to reset the isolationModeTotalDebt"
								}
							},
							"setConfiguration(address,(uint256))": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"configuration": "The new configuration bitmap"
								}
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"rateStrategyAddress": "The address of the interest rate strategy contract"
								}
							},
							"setUserEMode(uint8)": {
								"params": {
									"categoryId": "The id of the category"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"params": {
									"asset": "The address of the underlying asset supplied",
									"useAsCollateral": "True if the user wants to use the supply as collateral, false otherwise"
								}
							},
							"supply(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"deadline": "The deadline timestamp that the permit is valid",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
								}
							},
							"updateBridgeProtocolFee(uint256)": {
								"params": {
									"bridgeProtocolFee": "The part of the premium sent to the protocol treasury"
								}
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"details": "The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract",
								"params": {
									"flashLoanPremiumToProtocol": "The part of the premium sent to the protocol treasury, expressed in bps",
									"flashLoanPremiumTotal": "The total premium, expressed in bps"
								}
							},
							"withdraw(address,uint256,address)": {
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn"
								}
							}
						},
						"title": "IPool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"BRIDGE_PROTOCOL_FEE()": "272d9072",
							"FLASHLOAN_PREMIUM_TOTAL()": "074b2e43",
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": "6a99c036",
							"MAX_NUMBER_RESERVES()": "f8119d51",
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": "e82fec2f",
							"backUnbacked(address,uint256,uint256)": "d65dc7a1",
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": "d579ea7d",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"dropReserve(address)": "63c9b860",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"flashLoanSimple(address,address,uint256,bytes,uint16)": "42b0b77c",
							"getConfiguration(address)": "c44b11f7",
							"getEModeCategoryData(uint8)": "6c6f6ae1",
							"getReserveAddressById(uint16)": "52751797",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"getUserEMode(address)": "eddf1b79",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"mintToTreasury(address[])": "9cd19996",
							"mintUnbacked(address,uint256,address,uint16)": "69a933a5",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"repayWithATokens(address,uint256,uint256)": "2dad97d4",
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": "ee3e210b",
							"rescueTokens(address,address,uint256)": "cea9d26f",
							"resetIsolationModeTotalDebt(address)": "e43e88a1",
							"setConfiguration(address,(uint256))": "f51e435b",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserEMode(uint8)": "28530a47",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"supply(address,uint256,address,uint16)": "617ba037",
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": "02c205f0",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"updateBridgeProtocolFee(uint256)": "3036b439",
							"updateFlashloanPremiums(uint128,uint128)": "bcb6e522",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"notice": "Returns the PoolAddressesProvider connected to this contract"
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"notice": "Returns the part of the bridge fees sent to protocol"
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"notice": "Returns the total fee on flash loans"
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"notice": "Returns the part of the flashloan fees sent to protocol"
							},
							"MAX_NUMBER_RESERVES()": {
								"notice": "Returns the maximum number of reserves supported to be listed in this Pool"
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"notice": "Returns the percentage of available liquidity that can be borrowed at once at stable rate"
							},
							"backUnbacked(address,uint256,uint256)": {
								"notice": "Back the current unbacked underlying with `amount` and pay `fee`."
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"notice": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"notice": "Configures a new category for the eMode."
							},
							"deposit(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"dropReserve(address)": {
								"notice": "Drop a reserve"
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"notice": "Validates and finalizes an aToken transfer"
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"getConfiguration(address)": {
								"notice": "Returns the configuration of the reserve"
							},
							"getEModeCategoryData(uint8)": {
								"notice": "Returns the data of an eMode category"
							},
							"getReserveAddressById(uint16)": {
								"notice": "Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"
							},
							"getReserveData(address)": {
								"notice": "Returns the state and configuration of the reserve"
							},
							"getReserveNormalizedIncome(address)": {
								"notice": "Returns the normalized income of the reserve"
							},
							"getReserveNormalizedVariableDebt(address)": {
								"notice": "Returns the normalized variable debt per unit of asset"
							},
							"getReservesList()": {
								"notice": "Returns the list of the underlying assets of all the initialized reserves"
							},
							"getUserAccountData(address)": {
								"notice": "Returns the user account data across all the reserves"
							},
							"getUserConfiguration(address)": {
								"notice": "Returns the configuration of the user across all the reserves"
							},
							"getUserEMode(address)": {
								"notice": "Returns the eMode the user is using"
							},
							"initReserve(address,address,address,address,address)": {
								"notice": "Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"notice": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"
							},
							"mintToTreasury(address[])": {
								"notice": "Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"notice": "Mints an `amount` of aTokens to the `onBehalfOf`"
							},
							"rebalanceStableBorrowRate(address,address)": {
								"notice": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"
							},
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							},
							"repayWithATokens(address,uint256,uint256)": {
								"notice": "Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"notice": "Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"rescueTokens(address,address,uint256)": {
								"notice": "Rescue and transfer tokens locked in this contract"
							},
							"resetIsolationModeTotalDebt(address)": {
								"notice": "Resets the isolation mode total debt of the given asset to zero"
							},
							"setConfiguration(address,(uint256))": {
								"notice": "Sets the configuration bitmap of the reserve as a whole"
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"notice": "Updates the address of the interest rate strategy contract"
							},
							"setUserEMode(uint8)": {
								"notice": "Allows a user to use the protocol in eMode"
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"notice": "Allows suppliers to enable/disable a specific supplied asset as collateral"
							},
							"supply(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"notice": "Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"swapBorrowRateMode(address,uint256)": {
								"notice": "Allows a borrower to swap his debt between stable and variable mode, or vice versa"
							},
							"updateBridgeProtocolFee(uint256)": {
								"notice": "Updates the protocol fee on the bridging"
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"notice": "Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"
							},
							"withdraw(address,uint256,address)": {
								"notice": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"
							}
						},
						"notice": "Defines the basic interface for an Aave Pool.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"IPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldImplementationAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "AddressSetAsProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldMarketId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolDataProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleSentinelUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementationAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getACLAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getACLManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolDataProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracleSentinel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclAdmin",
									"type": "address"
								}
							],
							"name": "setACLAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclManager",
									"type": "address"
								}
							],
							"name": "setACLManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolConfiguratorImpl",
									"type": "address"
								}
							],
							"name": "setPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDataProvider",
									"type": "address"
								}
							],
							"name": "setPoolDataProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolImpl",
									"type": "address"
								}
							],
							"name": "setPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracleSentinel",
									"type": "address"
								}
							],
							"name": "setPriceOracleSentinel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"ACLAdminUpdated(address,address)": {
								"details": "Emitted when the ACL admin is updated.",
								"params": {
									"newAddress": "The new address of the ACLAdmin",
									"oldAddress": "The old address of the ACLAdmin"
								}
							},
							"ACLManagerUpdated(address,address)": {
								"details": "Emitted when the ACL manager is updated.",
								"params": {
									"newAddress": "The new address of the ACLManager",
									"oldAddress": "The old address of the ACLManager"
								}
							},
							"AddressSet(bytes32,address,address)": {
								"details": "Emitted when a new non-proxied contract address is registered.",
								"params": {
									"id": "The identifier of the contract",
									"newAddress": "The address of the new contract",
									"oldAddress": "The address of the old contract"
								}
							},
							"AddressSetAsProxy(bytes32,address,address,address)": {
								"details": "Emitted when the implementation of the proxy registered with id is updated",
								"params": {
									"id": "The identifier of the contract",
									"newImplementationAddress": "The address of the new implementation contract",
									"oldImplementationAddress": "The address of the old implementation contract",
									"proxyAddress": "The address of the proxy contract"
								}
							},
							"MarketIdSet(string,string)": {
								"details": "Emitted when the market identifier is updated.",
								"params": {
									"newMarketId": "The new id of the market",
									"oldMarketId": "The old id of the market"
								}
							},
							"PoolConfiguratorUpdated(address,address)": {
								"details": "Emitted when the pool configurator is updated.",
								"params": {
									"newAddress": "The new address of the PoolConfigurator",
									"oldAddress": "The old address of the PoolConfigurator"
								}
							},
							"PoolDataProviderUpdated(address,address)": {
								"details": "Emitted when the pool data provider is updated.",
								"params": {
									"newAddress": "The new address of the PoolDataProvider",
									"oldAddress": "The old address of the PoolDataProvider"
								}
							},
							"PoolUpdated(address,address)": {
								"details": "Emitted when the pool is updated.",
								"params": {
									"newAddress": "The new address of the Pool",
									"oldAddress": "The old address of the Pool"
								}
							},
							"PriceOracleSentinelUpdated(address,address)": {
								"details": "Emitted when the price oracle sentinel is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracleSentinel",
									"oldAddress": "The old address of the PriceOracleSentinel"
								}
							},
							"PriceOracleUpdated(address,address)": {
								"details": "Emitted when the price oracle is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracle",
									"oldAddress": "The old address of the PriceOracle"
								}
							},
							"ProxyCreated(bytes32,address,address)": {
								"details": "Emitted when a new proxy is created.",
								"params": {
									"id": "The identifier of the proxy",
									"implementationAddress": "The address of the implementation contract",
									"proxyAddress": "The address of the created proxy contract"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getACLAdmin()": {
								"returns": {
									"_0": "The address of the ACL admin"
								}
							},
							"getACLManager()": {
								"returns": {
									"_0": "The address of the ACLManager"
								}
							},
							"getAddress(bytes32)": {
								"details": "The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id",
								"params": {
									"id": "The id"
								},
								"returns": {
									"_0": "The address of the registered for the specified id"
								}
							},
							"getMarketId()": {
								"returns": {
									"_0": "The market id"
								}
							},
							"getPool()": {
								"returns": {
									"_0": "The Pool proxy address"
								}
							},
							"getPoolConfigurator()": {
								"returns": {
									"_0": "The PoolConfigurator proxy address"
								}
							},
							"getPoolDataProvider()": {
								"returns": {
									"_0": "The address of the DataProvider"
								}
							},
							"getPriceOracle()": {
								"returns": {
									"_0": "The address of the PriceOracle"
								}
							},
							"getPriceOracleSentinel()": {
								"returns": {
									"_0": "The address of the PriceOracleSentinel"
								}
							},
							"setACLAdmin(address)": {
								"params": {
									"newAclAdmin": "The address of the new ACL admin"
								}
							},
							"setACLManager(address)": {
								"params": {
									"newAclManager": "The address of the new ACLManager"
								}
							},
							"setAddress(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, as it will do a hard replacement",
								"params": {
									"id": "The id",
									"newAddress": "The address to set"
								}
							},
							"setAddressAsProxy(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences",
								"params": {
									"id": "The id",
									"newImplementationAddress": "The address of the new implementation"
								}
							},
							"setMarketId(string)": {
								"details": "This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.",
								"params": {
									"newMarketId": "The market id"
								}
							},
							"setPoolConfiguratorImpl(address)": {
								"params": {
									"newPoolConfiguratorImpl": "The new PoolConfigurator implementation"
								}
							},
							"setPoolDataProvider(address)": {
								"params": {
									"newDataProvider": "The address of the new DataProvider"
								}
							},
							"setPoolImpl(address)": {
								"params": {
									"newPoolImpl": "The new Pool implementation"
								}
							},
							"setPriceOracle(address)": {
								"params": {
									"newPriceOracle": "The address of the new PriceOracle"
								}
							},
							"setPriceOracleSentinel(address)": {
								"params": {
									"newPriceOracleSentinel": "The address of the new PriceOracleSentinel"
								}
							}
						},
						"title": "IPoolAddressesProvider",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getACLAdmin()": "0e67178c",
							"getACLManager()": "707cd716",
							"getAddress(bytes32)": "21f8a721",
							"getMarketId()": "568ef470",
							"getPool()": "026b1d5f",
							"getPoolConfigurator()": "631adfca",
							"getPoolDataProvider()": "e860accb",
							"getPriceOracle()": "fca513a8",
							"getPriceOracleSentinel()": "5eb88d3d",
							"setACLAdmin(address)": "76d84ffc",
							"setACLManager(address)": "ed301ca9",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setMarketId(string)": "f67b1847",
							"setPoolConfiguratorImpl(address)": "e4ca28b7",
							"setPoolDataProvider(address)": "e44e9ed1",
							"setPoolImpl(address)": "a1564406",
							"setPriceOracle(address)": "530e784f",
							"setPriceOracleSentinel(address)": "74944cec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getACLAdmin()": {
								"notice": "Returns the address of the ACL admin."
							},
							"getACLManager()": {
								"notice": "Returns the address of the ACL manager."
							},
							"getAddress(bytes32)": {
								"notice": "Returns an address by its identifier."
							},
							"getMarketId()": {
								"notice": "Returns the id of the Aave market to which this contract points to."
							},
							"getPool()": {
								"notice": "Returns the address of the Pool proxy."
							},
							"getPoolConfigurator()": {
								"notice": "Returns the address of the PoolConfigurator proxy."
							},
							"getPoolDataProvider()": {
								"notice": "Returns the address of the data provider."
							},
							"getPriceOracle()": {
								"notice": "Returns the address of the price oracle."
							},
							"getPriceOracleSentinel()": {
								"notice": "Returns the address of the price oracle sentinel."
							},
							"setACLAdmin(address)": {
								"notice": "Updates the address of the ACL admin."
							},
							"setACLManager(address)": {
								"notice": "Updates the address of the ACL manager."
							},
							"setAddress(bytes32,address)": {
								"notice": "Sets an address for an id replacing the address saved in the addresses map."
							},
							"setAddressAsProxy(bytes32,address)": {
								"notice": "General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."
							},
							"setMarketId(string)": {
								"notice": "Associates an id with a specific PoolAddressesProvider."
							},
							"setPoolConfiguratorImpl(address)": {
								"notice": "Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."
							},
							"setPoolDataProvider(address)": {
								"notice": "Updates the address of the data provider."
							},
							"setPoolImpl(address)": {
								"notice": "Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."
							},
							"setPriceOracle(address)": {
								"notice": "Updates the address of the price oracle."
							},
							"setPriceOracleSentinel(address)": {
								"notice": "Updates the address of the price oracle sentinel."
							}
						},
						"notice": "Defines the basic interface for a Pool Addresses Provider.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7320  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7320  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db0f8338152e13017c4c05862901db75b2b8412a13e3eeba86270c6bba8a689a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db0f8338152e13017c4c05862901db75b2b8412a13e3eeba86270c6bba8a689a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xF DUP4 CODESIZE ISZERO 0x2E SGT ADD PUSH29 0x4C05862901DB75B2B8412A13E3EEBA86270C6BBA8A689A64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62:7258:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:7258:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db0f8338152e13017c4c05862901db75b2b8412a13e3eeba86270c6bba8a689a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xF DUP4 CODESIZE ISZERO 0x2E SGT ADD PUSH29 0x4C05862901DB75B2B8412A13E3EEBA86270C6BBA8A689A64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "62:7258:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 62,
									"end": 7320,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db0f8338152e13017c4c05862901db75b2b8412a13e3eeba86270c6bba8a689a64736f6c63430008120033",
									".code": [
										{
											"begin": 62,
											"end": 7320,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 7320,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/insurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1207,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH31 0x6F093317EB262BEF746ACF1BC4B738CB2FAEFB2B0378951461CB8198D76473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "202:12582:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f0207e6f093317eb262bef746acf1bc4b738cb2faefb2b0378951461cb8198d764736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/insurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH17 0x356EA41F630B0C74EDA7F60962B0243D82 MOD SLOAD 0xED MSTORE 0xD0 SWAP11 AND 0xB1 BASEFEE LOG0 0xF7 0xF9 PUSH22 0x64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB PUSH17 0x356EA41F630B0C74EDA7F60962B0243D82 MOD SLOAD 0xED MSTORE 0xD0 SWAP11 AND 0xB1 BASEFEE LOG0 0xF7 0xF9 PUSH22 0x64736F6C634300081200330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb70356ea41f630b0c74eda7f60962b0243d820654ed52d09a16b148a0f7f97564736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/insurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/insurance.sol": {
				"IClaims": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addCoverage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "computePremium",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "reduceCoverage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCoverage(uint256,address)": "f75f6029",
							"computePremium(uint256)": "86b82254",
							"reduceCoverage(uint256,address)": "a3df437b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCoverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"computePremium\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"reduceCoverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/insurance.sol\":\"IClaims\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/insurance.sol\":{\"keccak256\":\"0xc15431d51e0f9922adeebacb61af429664891f7802beef67d2bebc6acbae64d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73fa7ab8f7e429235a1ba152ea4ba7dcfc103c0f6b54ee7945c01b7b33fef722\",\"dweb:/ipfs/QmY939StbLjzdJRNDxqZi2CDCYfdHzdh933KPKb4HwGrAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"insurance": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "assetsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "changeAddressClaimContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getATokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "sharesLoansOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "withdrawAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/insurance.sol\":672:4302  contract insurance is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/insurance.sol\":886:887  0 */\n  0x00\n    /* \"contracts/insurance.sol\":851:887  uint256 totalSharesLoansPerAsset = 0 */\n  0x03\n  sstore\n    /* \"contracts/insurance.sol\":929:987  address _USDC = 0xF14f9596430931E177469715c591513308244e8F */\n  0x05\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/insurance.sol\":945:987  0xF14f9596430931E177469715c591513308244e8F */\n  0xf14f9596430931e177469715c591513308244e8f\n    /* \"contracts/insurance.sol\":929:987  address _USDC = 0xF14f9596430931E177469715c591513308244e8F */\n  or\n  swap1\n  sstore\n    /* \"contracts/insurance.sol\":1137:1348  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/insurance.sol\":1206:1248  0xeb7A892BB04A8f836bDEeBbf60897A7Af1Bf5d7F */\n  0xeb7a892bb04a8f836bdeebbf60897a7af1bf5d7f\n    /* \"contracts/insurance.sol\":1161:1249  poolAddressProvider = IPoolAddressesProvider(0xeb7A892BB04A8f836bDEeBbf60897A7Af1Bf5d7F) */\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/insurance.sol\":1273:1302  poolAddressProvider.getPool() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x026b1d5f)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/insurance.sol\":1273:1300  poolAddressProvider.getPool */\n  0x026b1d5f\n  swap2\n    /* \"contracts/insurance.sol\":1273:1302  poolAddressProvider.getPool() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/insurance.sol\":1206:1248  0xeb7A892BB04A8f836bDEeBbf60897A7Af1Bf5d7F */\n  dup7\n    /* \"contracts/insurance.sol\":1273:1302  poolAddressProvider.getPool() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/insurance.sol\":1259:1270  aaveAddress */\n  0x01\n    /* \"contracts/insurance.sol\":1259:1302  aaveAddress = poolAddressProvider.getPool() */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/insurance.sol\":1312:1320  poolAave */\n  0x02\n    /* \"contracts/insurance.sol\":1312:1341  poolAave = IPool(aaveAddress) */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/insurance.sol\":672:4302  contract insurance is Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_13:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/insurance.sol\":672:4302  contract insurance is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x81a38106a3559b8bc66b11db71a8e6c2e2e852c71ce3c3a27a7c602a20e8508d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/insurance.sol\":672:4302  contract insurance is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc0c24ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd414c820\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfa2df414\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x2c62fa10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x82899756\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8d92fdf3\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/insurance.sol\":3729:3833  function assetsOf(address account) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3811:3826  assets[account] */\n      and\n        /* \"contracts/insurance.sol\":3785:3792  uint256 */\n      0x00\n        /* \"contracts/insurance.sol\":3811:3826  assets[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3811:3817  assets */\n      0x06\n        /* \"contracts/insurance.sol\":3811:3826  assets[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/insurance.sol\":3729:3833  function assetsOf(address account) public view returns (uint256) {... */\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":548:573   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"contracts/insurance.sol\":3729:3833  function assetsOf(address account) public view returns (uint256) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/insurance.sol\":3959:4085  function getATokenAddress() public view returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":748:780   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":730:781   */\n      dup2\n      mstore\n        /* \"#utility.yul\":718:720   */\n      0x20\n        /* \"#utility.yul\":703:721   */\n      add\n        /* \"contracts/insurance.sol\":3959:4085  function getATokenAddress() public view returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":584:787   */\n      jump\n        /* \"contracts/insurance.sol\":1819:2135  function withdrawAsset(uint256 percentage) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_23\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_26)\n        /* \"contracts/insurance.sol\":4141:4265  function changeAddressClaimContract(address newAddress) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_23\n      tag_41\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"contracts/insurance.sol\":3839:3953  function sharesLoansOf(address account) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_16\n      tag_45\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3926:3946  sharesLoans[account] */\n      and\n        /* \"contracts/insurance.sol\":3900:3907  uint256 */\n      0x00\n        /* \"contracts/insurance.sol\":3926:3946  sharesLoans[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3926:3937  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":3926:3946  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/insurance.sol\":3839:3953  function sharesLoansOf(address account) public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_23\n      tag_50\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/insurance.sol\":1354:1813  function depositAsset(uint256 amount) public {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_23\n      tag_54\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/insurance.sol\":3959:4085  function getATokenAddress() public view returns (address) {... */\n    tag_27:\n        /* \"contracts/insurance.sol\":4034:4042  poolAave */\n      sload(0x02)\n        /* \"contracts/insurance.sol\":4058:4063  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":4034:4064  poolAave.getReserveData(_USDC) */\n      mload(0x40)\n      shl(0xe0, 0x35ea6a75)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":4058:4063  _USDC */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":4034:4064  poolAave.getReserveData(_USDC) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"contracts/insurance.sol\":4008:4015  address */\n      0x00\n      swap3\n        /* \"contracts/insurance.sol\":4034:4042  poolAave */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":4034:4057  poolAave.getReserveData */\n      0x35ea6a75\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":4034:4064  poolAave.getReserveData(_USDC) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/insurance.sol\":4034:4078  poolAave.getReserveData(_USDC).aTokenAddress */\n      0x0100\n      add\n      mload\n        /* \"contracts/insurance.sol\":4027:4078  return poolAave.getReserveData(_USDC).aTokenAddress */\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":3959:4085  function getATokenAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/insurance.sol\":1819:2135  function withdrawAsset(uint256 percentage) public {... */\n    tag_34:\n        /* \"contracts/insurance.sol\":1879:1898  uint256 finalAmount */\n      0x00\n        /* \"contracts/insurance.sol\":1901:1944  withdrawLendToken( msg.sender, percentage ) */\n      tag_70\n        /* \"contracts/insurance.sol\":1920:1930  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":1932:1942  percentage */\n      dup4\n        /* \"contracts/insurance.sol\":1901:1918  withdrawLendToken */\n      tag_71\n        /* \"contracts/insurance.sol\":1901:1944  withdrawLendToken( msg.sender, percentage ) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/insurance.sol\":1962:1983  _addressClaimContract */\n      0x04\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":1954:2026  IClaims(_addressClaimContract).reduceCoverage( finalAmount, msg.sender ) */\n      mload(0x40)\n      shl(0xe0, 0xa3df437b)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":4360:4385   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":2014:2024  msg.sender */\n      caller\n        /* \"#utility.yul\":4401:4419   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4394:4454   */\n      mstore\n        /* \"contracts/insurance.sol\":1879:1944  uint256 finalAmount = withdrawLendToken( msg.sender, percentage ) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":1962:1983  _addressClaimContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":1954:1999  IClaims(_addressClaimContract).reduceCoverage */\n      0xa3df437b\n      swap1\n        /* \"#utility.yul\":4333:4351   */\n      0x44\n      add\n        /* \"contracts/insurance.sol\":1954:2026  IClaims(_addressClaimContract).reduceCoverage( finalAmount, msg.sender ) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n        /* \"contracts/insurance.sol\":2043:2053  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":2036:2054  assets[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":2036:2042  assets */\n      0x06\n        /* \"contracts/insurance.sol\":2036:2054  assets[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/insurance.sol\":2036:2069  assets[msg.sender] -= finalAmount */\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":2058:2069  finalAmount */\n      dup6\n      swap5\n      pop\n        /* \"contracts/insurance.sol\":2036:2054  assets[msg.sender] */\n      swap1\n      swap3\n      pop\n        /* \"contracts/insurance.sol\":2036:2069  assets[msg.sender] -= finalAmount */\n      tag_77\n      swap1\n        /* \"contracts/insurance.sol\":2058:2069  finalAmount */\n      dup5\n      swap1\n        /* \"contracts/insurance.sol\":2036:2069  assets[msg.sender] -= finalAmount */\n      tag_78\n      jump\t// in\n    tag_77:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/insurance.sol\":2086:2091  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":2079:2128  IERC20(_USDC).transfer( msg.sender, finalAmount ) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":2103:2113  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":2079:2128  IERC20(_USDC).transfer( msg.sender, finalAmount ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4904:4955   */\n      mstore\n        /* \"#utility.yul\":4971:4989   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4964:4998   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2086:2091  _USDC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":2079:2101  IERC20(_USDC).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4877:4895   */\n      0x44\n      add\n        /* \"contracts/insurance.sol\":2079:2128  IERC20(_USDC).transfer( msg.sender, finalAmount ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/insurance.sol\":1869:2135  {... */\n      pop\n        /* \"contracts/insurance.sol\":1819:2135  function withdrawAsset(uint256 percentage) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/insurance.sol\":4141:4265  function changeAddressClaimContract(address newAddress) public onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/insurance.sol\":4224:4245  _addressClaimContract */\n      0x04\n        /* \"contracts/insurance.sol\":4224:4258  _addressClaimContract = newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/insurance.sol\":4141:4265  function changeAddressClaimContract(address newAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5493:5495   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5475:5496   */\n      mstore\n        /* \"#utility.yul\":5532:5534   */\n      0x26\n        /* \"#utility.yul\":5512:5530   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5505:5535   */\n      mstore\n        /* \"#utility.yul\":5571:5605   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5551:5569   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5544:5606   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5622:5640   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5615:5651   */\n      mstore\n        /* \"#utility.yul\":5668:5687   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/insurance.sol\":1354:1813  function depositAsset(uint256 amount) public {... */\n    tag_55:\n        /* \"contracts/insurance.sol\":1416:1421  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":1409:1471  IERC20(_USDC).transferFrom(msg.sender, address(this), amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":1436:1446  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":1409:1471  IERC20(_USDC).transferFrom(msg.sender, address(this), amount ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5938:5972   */\n      mstore\n        /* \"contracts/insurance.sol\":1456:1460  this */\n      address\n        /* \"#utility.yul\":5988:6006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5981:6024   */\n      mstore\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6033:6067   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":1416:1421  _USDC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":1409:1435  IERC20(_USDC).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5873:5891   */\n      0x64\n      add\n        /* \"contracts/insurance.sol\":1409:1471  IERC20(_USDC).transferFrom(msg.sender, address(this), amount ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/insurance.sol\":1508:1529  _addressClaimContract */\n      0x04\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":1500:1555  IClaims(_addressClaimContract).computePremium( amount ) */\n      mload(0x40)\n      shl(0xe2, 0x21ae0895)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":548:573   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":1481:1497  uint256 discount */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":1508:1529  _addressClaimContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":1500:1545  IClaims(_addressClaimContract).computePremium */\n      0x86b82254\n      swap1\n        /* \"#utility.yul\":521:539   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":1500:1555  IClaims(_addressClaimContract).computePremium( amount ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/insurance.sol\":1481:1555  uint256 discount = IClaims(_addressClaimContract).computePremium( amount ) */\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":1565:1583  amount -= discount */\n      tag_108\n        /* \"contracts/insurance.sol\":1481:1555  uint256 discount = IClaims(_addressClaimContract).computePremium( amount ) */\n      dup2\n        /* \"contracts/insurance.sol\":1565:1583  amount -= discount */\n      dup4\n      tag_78\n      jump\t// in\n    tag_108:\n        /* \"contracts/insurance.sol\":1600:1605  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":1615:1636  _addressClaimContract */\n      0x04\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":1593:1647  IERC20(_USDC).approve(_addressClaimContract, discount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":1615:1636  _addressClaimContract */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":1593:1647  IERC20(_USDC).approve(_addressClaimContract, discount) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":4904:4955   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4971:4989   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4964:4998   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":1565:1583  amount -= discount */\n      swap3\n      swap5\n      pop\n        /* \"contracts/insurance.sol\":1600:1605  _USDC */\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":1593:1614  IERC20(_USDC).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4877:4895   */\n      0x44\n      add\n        /* \"contracts/insurance.sol\":1593:1647  IERC20(_USDC).approve(_addressClaimContract, discount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/insurance.sol\":1665:1686  _addressClaimContract */\n      0x04\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":1657:1721  IClaims(_addressClaimContract).addCoverage( amount, msg.sender ) */\n      mload(0x40)\n      shl(0xe0, 0xf75f6029)\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":4360:4385   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":1709:1719  msg.sender */\n      caller\n        /* \"#utility.yul\":4401:4419   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4394:4454   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":1665:1686  _addressClaimContract */\n      and\n      swap1\n        /* \"contracts/insurance.sol\":1657:1699  IClaims(_addressClaimContract).addCoverage */\n      0xf75f6029\n      swap1\n        /* \"#utility.yul\":4333:4351   */\n      0x44\n      add\n        /* \"contracts/insurance.sol\":1657:1721  IClaims(_addressClaimContract).addCoverage( amount, msg.sender ) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n        /* \"contracts/insurance.sol\":1738:1748  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":1731:1749  assets[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":1731:1737  assets */\n      0x06\n        /* \"contracts/insurance.sol\":1731:1749  assets[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/insurance.sol\":1731:1759  assets[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":1753:1759  amount */\n      dup7\n      swap5\n      pop\n        /* \"contracts/insurance.sol\":1731:1749  assets[msg.sender] */\n      swap1\n      swap3\n      pop\n        /* \"contracts/insurance.sol\":1731:1759  assets[msg.sender] += amount */\n      tag_117\n      swap1\n        /* \"contracts/insurance.sol\":1753:1759  amount */\n      dup5\n      swap1\n        /* \"contracts/insurance.sol\":1731:1759  assets[msg.sender] += amount */\n      tag_118\n      jump\t// in\n    tag_117:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":1769:1806  supplyLendToken( msg.sender, amount ) */\n      tag_119\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":1786:1796  msg.sender */\n      caller\n        /* \"contracts/insurance.sol\":1798:1804  amount */\n      dup4\n        /* \"contracts/insurance.sol\":1769:1784  supplyLendToken */\n      tag_120\n        /* \"contracts/insurance.sol\":1769:1806  supplyLendToken( msg.sender, amount ) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/insurance.sol\":1399:1813  {... */\n      pop\n        /* \"contracts/insurance.sol\":1354:1813  function depositAsset(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6599:6601   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6581:6602   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6618:6636   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6611:6641   */\n      mstore\n        /* \"#utility.yul\":6677:6711   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6657:6675   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6650:6712   */\n      mstore\n        /* \"#utility.yul\":6729:6747   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_94\n        /* \"#utility.yul\":6397:6753   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/insurance.sol\":2923:3723  function withdrawLendToken(address account, uint256 percentage) private returns (uint256){... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3030:3050  sharesLoans[account] */\n      dup3\n      and\n        /* \"contracts/insurance.sol\":3004:3011  uint256 */\n      0x00\n        /* \"contracts/insurance.sol\":3030:3050  sharesLoans[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3030:3041  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":3030:3050  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/insurance.sol\":3022:3103  require(sharesLoans[account] > 0, \"User has not provided this token for lending\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6960:6962   */\n      0x20\n        /* \"contracts/insurance.sol\":3022:3103  require(sharesLoans[account] > 0, \"User has not provided this token for lending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6942:6963   */\n      mstore\n        /* \"#utility.yul\":6999:7001   */\n      0x2c\n        /* \"#utility.yul\":6979:6997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6972:7002   */\n      mstore\n        /* \"#utility.yul\":7038:7072   */\n      0x5573657220686173206e6f742070726f7669646564207468697320746f6b656e\n        /* \"#utility.yul\":7018:7036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7011:7073   */\n      mstore\n      shl(0xa0, 0x20666f72206c656e64696e67)\n        /* \"#utility.yul\":7089:7107   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7082:7124   */\n      mstore\n        /* \"#utility.yul\":7141:7160   */\n      0x84\n      add\n        /* \"contracts/insurance.sol\":3022:3103  require(sharesLoans[account] > 0, \"User has not provided this token for lending\") */\n      tag_94\n        /* \"#utility.yul\":6758:7166   */\n      jump\n        /* \"contracts/insurance.sol\":3022:3103  require(sharesLoans[account] > 0, \"User has not provided this token for lending\") */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3141:3161  sharesLoans[account] */\n      dup4\n      dup2\n      and\n        /* \"contracts/insurance.sol\":3114:3138  uint256 amountSharesUser */\n      0x00\n        /* \"contracts/insurance.sol\":3141:3161  sharesLoans[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3141:3152  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":3141:3161  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/insurance.sol\":3196:3204  poolAave */\n      sload(0x02)\n        /* \"contracts/insurance.sol\":3220:3225  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":3196:3226  poolAave.getReserveData(_USDC) */\n      swap3\n      mload\n      shl(0xe0, 0x35ea6a75)\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3220:3225  _USDC */\n      swap3\n      dup6\n      and\n        /* \"contracts/insurance.sol\":3196:3226  poolAave.getReserveData(_USDC) */\n      0x04\n      dup5\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"contracts/insurance.sol\":3141:3161  sharesLoans[account] */\n      swap1\n      swap4\n        /* \"contracts/insurance.sol\":3196:3204  poolAave */\n      and\n      swap1\n        /* \"contracts/insurance.sol\":3196:3219  poolAave.getReserveData */\n      0x35ea6a75\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":3196:3226  poolAave.getReserveData(_USDC) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_136:\n        /* \"contracts/insurance.sol\":3195:3241  (poolAave.getReserveData(_USDC)).aTokenAddress */\n      0x0100\n      add\n      mload\n        /* \"contracts/insurance.sol\":3276:3322  IERC20(aTokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3316:3320  this */\n      address\n        /* \"contracts/insurance.sol\":3276:3322  IERC20(aTokenAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"contracts/insurance.sol\":3195:3241  (poolAave.getReserveData(_USDC)).aTokenAddress */\n      swap1\n      swap2\n      pop\n        /* \"contracts/insurance.sol\":3251:3273  uint256 currentBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3276:3307  IERC20(aTokenAddress).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":3276:3322  IERC20(aTokenAddress).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_140:\n        /* \"contracts/insurance.sol\":3251:3322  uint256 currentBalance = IERC20(aTokenAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":3333:3352  uint256 amountAsset */\n      0x00\n        /* \"contracts/insurance.sol\":3355:3447  Math.mulDiv( amountSharesUser * percentage, currentBalance, totalSharesLoansPerAsset * 1000) */\n      tag_141\n        /* \"contracts/insurance.sol\":3368:3397  amountSharesUser * percentage */\n      tag_142\n        /* \"contracts/insurance.sol\":3387:3397  percentage */\n      dup8\n        /* \"contracts/insurance.sol\":3368:3384  amountSharesUser */\n      dup7\n        /* \"contracts/insurance.sol\":3368:3397  amountSharesUser * percentage */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/insurance.sol\":3399:3413  currentBalance */\n      dup4\n        /* \"contracts/insurance.sol\":3415:3439  totalSharesLoansPerAsset */\n      sload(0x03)\n        /* \"contracts/insurance.sol\":3442:3446  1000 */\n      0x03e8\n        /* \"contracts/insurance.sol\":3415:3446  totalSharesLoansPerAsset * 1000 */\n      tag_144\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_144:\n        /* \"contracts/insurance.sol\":3355:3366  Math.mulDiv */\n      tag_145\n        /* \"contracts/insurance.sol\":3355:3447  Math.mulDiv( amountSharesUser * percentage, currentBalance, totalSharesLoansPerAsset * 1000) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/insurance.sol\":3333:3447  uint256 amountAsset = Math.mulDiv( amountSharesUser * percentage, currentBalance, totalSharesLoansPerAsset * 1000) */\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":3457:3477  uint256 amountShares */\n      0x00\n        /* \"contracts/insurance.sol\":3480:3528  Math.mulDiv( amountSharesUser, percentage, 1000) */\n      tag_146\n        /* \"contracts/insurance.sol\":3493:3509  amountSharesUser */\n      dup6\n        /* \"contracts/insurance.sol\":3511:3521  percentage */\n      dup9\n        /* \"contracts/insurance.sol\":3523:3527  1000 */\n      0x03e8\n        /* \"contracts/insurance.sol\":3480:3491  Math.mulDiv */\n      tag_145\n        /* \"contracts/insurance.sol\":3480:3528  Math.mulDiv( amountSharesUser, percentage, 1000) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/insurance.sol\":3539:3547  poolAave */\n      sload(0x02)\n        /* \"contracts/insurance.sol\":3557:3562  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":3539:3591  poolAave.withdraw(_USDC, amountAsset, address(this)) */\n      mload(0x40)\n      shl(0xe2, 0x1a4ca37b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3557:3562  _USDC */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":3539:3591  poolAave.withdraw(_USDC, amountAsset, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7584:7618   */\n      mstore\n        /* \"#utility.yul\":7634:7652   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7627:7661   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":3585:3589  this */\n      address\n        /* \"#utility.yul\":7677:7695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7670:7713   */\n      mstore\n        /* \"contracts/insurance.sol\":3457:3528  uint256 amountShares = Math.mulDiv( amountSharesUser, percentage, 1000) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/insurance.sol\":3539:3547  poolAave */\n      and\n      swap1\n        /* \"contracts/insurance.sol\":3539:3556  poolAave.withdraw */\n      0x69328dec\n      swap1\n        /* \"#utility.yul\":7519:7537   */\n      0x64\n      add\n        /* \"contracts/insurance.sol\":3539:3591  poolAave.withdraw(_USDC, amountAsset, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_151:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":3601:3621  sharesLoans[account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":3601:3612  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":3601:3621  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/insurance.sol\":3601:3637  sharesLoans[account] -= amountShares */\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":3625:3637  amountShares */\n      dup4\n      swap3\n        /* \"contracts/insurance.sol\":3601:3621  sharesLoans[account] */\n      swap1\n        /* \"contracts/insurance.sol\":3601:3637  sharesLoans[account] -= amountShares */\n      tag_152\n      swap1\n        /* \"contracts/insurance.sol\":3625:3637  amountShares */\n      dup5\n      swap1\n        /* \"contracts/insurance.sol\":3601:3637  sharesLoans[account] -= amountShares */\n      tag_78\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":3675:3687  amountShares */\n      dup1\n        /* \"contracts/insurance.sol\":3647:3671  totalSharesLoansPerAsset */\n      0x03\n      0x00\n        /* \"contracts/insurance.sol\":3647:3687  totalSharesLoansPerAsset -= amountShares */\n      dup3\n      dup3\n      sload\n      tag_153\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_153:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":3705:3716  amountAsset */\n      swap2\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/insurance.sol\":2923:3723  function withdrawLendToken(address account, uint256 percentage) private returns (uint256){... */\n    tag_129:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/insurance.sol\":2141:2917  function supplyLendToken(address account, uint256 amount) private {... */\n    tag_120:\n        /* \"contracts/insurance.sol\":2233:2238  _USDC */\n      sload(0x05)\n      0x01\n        /* \"contracts/insurance.sol\":2248:2259  aaveAddress */\n      sload\n        /* \"contracts/insurance.sol\":2226:2268  IERC20(_USDC).approve(aaveAddress, amount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2248:2259  aaveAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":2226:2268  IERC20(_USDC).approve(aaveAddress, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4904:4955   */\n      mstore\n        /* \"#utility.yul\":4971:4989   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4964:4998   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":2233:2238  _USDC */\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":2226:2247  IERC20(_USDC).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":4877:4895   */\n      0x44\n      add\n        /* \"contracts/insurance.sol\":2226:2268  IERC20(_USDC).approve(aaveAddress, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_158:\n        /* \"contracts/insurance.sol\":2217:2309  require( IERC20(_USDC).approve(aaveAddress, amount), \"This contract has not enough tokens\" ) */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7926:7928   */\n      0x20\n        /* \"contracts/insurance.sol\":2217:2309  require( IERC20(_USDC).approve(aaveAddress, amount), \"This contract has not enough tokens\" ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7908:7929   */\n      mstore\n        /* \"#utility.yul\":7965:7967   */\n      0x23\n        /* \"#utility.yul\":7945:7963   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7938:7968   */\n      mstore\n        /* \"#utility.yul\":8004:8038   */\n      0x5468697320636f6e747261637420686173206e6f7420656e6f75676820746f6b\n        /* \"#utility.yul\":7984:8002   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7977:8039   */\n      mstore\n      shl(0xe8, 0x656e73)\n        /* \"#utility.yul\":8055:8073   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8048:8081   */\n      mstore\n        /* \"#utility.yul\":8098:8117   */\n      0x84\n      add\n        /* \"contracts/insurance.sol\":2217:2309  require( IERC20(_USDC).approve(aaveAddress, amount), \"This contract has not enough tokens\" ) */\n      tag_94\n        /* \"#utility.yul\":7724:8123   */\n      jump\n        /* \"contracts/insurance.sol\":2217:2309  require( IERC20(_USDC).approve(aaveAddress, amount), \"This contract has not enough tokens\" ) */\n    tag_159:\n        /* \"contracts/insurance.sol\":2319:2327  poolAave */\n      sload(0x02)\n        /* \"contracts/insurance.sol\":2335:2340  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":2319:2367  poolAave.supply(_USDC, amount, address(this), 0) */\n      mload(0x40)\n      shl(0xe0, 0x617ba037)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2335:2340  _USDC */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":2319:2367  poolAave.supply(_USDC, amount, address(this), 0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8404:8438   */\n      mstore\n        /* \"#utility.yul\":8454:8472   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8447:8481   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/insurance.sol\":2358:2362  this */\n      address\n        /* \"#utility.yul\":8497:8515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8490:8533   */\n      mstore\n        /* \"contracts/insurance.sol\":2319:2327  poolAave */\n      0x00\n        /* \"#utility.yul\":8549:8567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8542:8589   */\n      mstore\n        /* \"contracts/insurance.sol\":2319:2327  poolAave */\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":2319:2334  poolAave.supply */\n      0x617ba037\n      swap1\n        /* \"#utility.yul\":8338:8357   */\n      0x84\n      add\n        /* \"contracts/insurance.sol\":2319:2367  poolAave.supply(_USDC, amount, address(this), 0) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/insurance.sol\":2383:2407  totalSharesLoansPerAsset */\n      sload(0x03)\n        /* \"contracts/insurance.sol\":2411:2412  0 */\n      0x00\n        /* \"contracts/insurance.sol\":2383:2412  totalSharesLoansPerAsset == 0 */\n      sub\n        /* \"contracts/insurance.sol\":2378:2910  if ( totalSharesLoansPerAsset == 0 ) {... */\n      tag_167\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2429:2449  sharesLoans[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":2429:2440  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":2429:2449  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/insurance.sol\":2429:2459  sharesLoans[account] += amount */\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":2453:2459  amount */\n      dup4\n      swap3\n        /* \"contracts/insurance.sol\":2429:2449  sharesLoans[account] */\n      swap1\n        /* \"contracts/insurance.sol\":2429:2459  sharesLoans[account] += amount */\n      tag_168\n      swap1\n        /* \"contracts/insurance.sol\":2453:2459  amount */\n      dup5\n      swap1\n        /* \"contracts/insurance.sol\":2429:2459  sharesLoans[account] += amount */\n      tag_118\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":2501:2507  amount */\n      dup1\n        /* \"contracts/insurance.sol\":2473:2497  totalSharesLoansPerAsset */\n      0x03\n      0x00\n        /* \"contracts/insurance.sol\":2473:2507  totalSharesLoansPerAsset += amount */\n      dup3\n      dup3\n      sload\n      tag_169\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_169:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":2378:2910  if ( totalSharesLoansPerAsset == 0 ) {... */\n      tag_119\n      swap1\n      pop\n      jump\n    tag_167:\n        /* \"contracts/insurance.sol\":2563:2571  poolAave */\n      sload(0x02)\n        /* \"contracts/insurance.sol\":2587:2592  _USDC */\n      sload(0x05)\n        /* \"contracts/insurance.sol\":2563:2593  poolAave.getReserveData(_USDC) */\n      mload(0x40)\n      shl(0xe0, 0x35ea6a75)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2587:2592  _USDC */\n      swap2\n      dup3\n      and\n        /* \"contracts/insurance.sol\":2563:2593  poolAave.getReserveData(_USDC) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"contracts/insurance.sol\":2538:2559  address aTokenAddress */\n      0x00\n      swap3\n        /* \"contracts/insurance.sol\":2563:2571  poolAave */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/insurance.sol\":2563:2586  poolAave.getReserveData */\n      0x35ea6a75\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":2563:2593  poolAave.getReserveData(_USDC) */\n      0x01e0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_174:\n        /* \"contracts/insurance.sol\":2562:2608  (poolAave.getReserveData(_USDC)).aTokenAddress */\n      0x0100\n      add\n      mload\n        /* \"contracts/insurance.sol\":2647:2695  IERC20(aTokenAddress).balanceOf( address(this) ) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":2688:2692  this */\n      address\n        /* \"contracts/insurance.sol\":2647:2695  IERC20(aTokenAddress).balanceOf( address(this) ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":730:781   */\n      mstore\n        /* \"contracts/insurance.sol\":2562:2608  (poolAave.getReserveData(_USDC)).aTokenAddress */\n      swap1\n      swap2\n      pop\n        /* \"contracts/insurance.sol\":2622:2644  uint256 currentBalance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2647:2678  IERC20(aTokenAddress).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":703:721   */\n      0x24\n      add\n        /* \"contracts/insurance.sol\":2647:2695  IERC20(aTokenAddress).balanceOf( address(this) ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_178:\n        /* \"contracts/insurance.sol\":2622:2695  uint256 currentBalance = IERC20(aTokenAddress).balanceOf( address(this) ) */\n      swap1\n      pop\n        /* \"contracts/insurance.sol\":2709:2729  uint256 amountShares */\n      0x00\n        /* \"contracts/insurance.sol\":2732:2795  Math.mulDiv( amount, totalSharesLoansPerAsset, currentBalance ) */\n      tag_179\n        /* \"contracts/insurance.sol\":2745:2751  amount */\n      dup5\n        /* \"contracts/insurance.sol\":2753:2777  totalSharesLoansPerAsset */\n      sload(0x03)\n        /* \"contracts/insurance.sol\":2779:2793  currentBalance */\n      dup5\n        /* \"contracts/insurance.sol\":2732:2743  Math.mulDiv */\n      tag_145\n        /* \"contracts/insurance.sol\":2732:2795  Math.mulDiv( amount, totalSharesLoansPerAsset, currentBalance ) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/insurance.sol\":2809:2829  sharesLoans[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/insurance.sol\":2809:2820  sharesLoans */\n      0x07\n        /* \"contracts/insurance.sol\":2809:2829  sharesLoans[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/insurance.sol\":2809:2845  sharesLoans[account] += amountShares */\n      dup1\n      sload\n        /* \"contracts/insurance.sol\":2709:2795  uint256 amountShares = Math.mulDiv( amount, totalSharesLoansPerAsset, currentBalance ) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/insurance.sol\":2809:2829  sharesLoans[account] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/insurance.sol\":2809:2845  sharesLoans[account] += amountShares */\n      tag_180\n      swap1\n        /* \"contracts/insurance.sol\":2709:2795  uint256 amountShares = Math.mulDiv( amount, totalSharesLoansPerAsset, currentBalance ) */\n      dup5\n      swap1\n        /* \"contracts/insurance.sol\":2809:2845  sharesLoans[account] += amountShares */\n      tag_118\n      jump\t// in\n    tag_180:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/insurance.sol\":2887:2899  amountShares */\n      dup1\n        /* \"contracts/insurance.sol\":2859:2883  totalSharesLoansPerAsset */\n      0x03\n      0x00\n        /* \"contracts/insurance.sol\":2859:2899  totalSharesLoansPerAsset += amountShares */\n      dup3\n      dup3\n      sload\n      tag_181\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_181:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/insurance.sol\":2141:2917  function supplyLendToken(address account, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1667:5880  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1749:1763  uint256 result */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2286:2287  y */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2283:2284  x */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2276:2296  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2329:2330  y */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2326:2327  x */\n      dup8\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2322:2331  mul(x, y) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2313:2331  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2384:2389  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2380:2382  mm */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2377:2390  lt(mm, prod0) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2369:2374  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2365:2367  mm */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2361:2375  sub(mm, prod0) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2357:2391  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2348:2391  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2486:2491  prod1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2495:2496  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2486:2496  prod1 == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2482:2850  if (prod1 == 0) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2824:2835  denominator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2816:2821  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2816:2835  prod0 / denominator */\n      dup2\n      tag_186\n      jumpi\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2809:2835  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_183)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2482:2850  if (prod1 == 0) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2974:2979  prod1 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2960:2971  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2960:2979  denominator > prod1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2952:3005  require(denominator > prod1, \"Math: mulDiv overflow\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8934:8936   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2952:3005  require(denominator > prod1, \"Math: mulDiv overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8916:8937   */\n      mstore\n        /* \"#utility.yul\":8973:8975   */\n      0x15\n        /* \"#utility.yul\":8953:8971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8946:8976   */\n      mstore\n      shl(0x58, 0x4d6174683a206d756c446976206f766572666c6f77)\n        /* \"#utility.yul\":8992:9010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8985:9036   */\n      mstore\n        /* \"#utility.yul\":9053:9071   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2952:3005  require(denominator > prod1, \"Math: mulDiv overflow\") */\n      tag_94\n        /* \"#utility.yul\":8732:9077   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2952:3005  require(denominator > prod1, \"Math: mulDiv overflow\") */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3261:3278  uint256 remainder */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3396:3407  denominator */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3393:3394  y */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3390:3391  x */\n      dup9\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3383:3408  mulmod(x, y, denominator) */\n      mulmod\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3929:3941  ~denominator */\n      dup6\n      not\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3944:3945  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3929:3945  ~denominator + 1 */\n      swap1\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3914:3946  denominator & (~denominator + 1) */\n      dup8\n      and\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4049:4071  div(denominator, twos) */\n      swap7\n      dup8\n      swap1\n      div\n      swap7\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3557:3578  sub(prod0, remainder) */\n      dup3\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4147:4163  div(prod0, twos) */\n      dup2\n      swap1\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3510:3530  gt(remainder, prod0) */\n      swap6\n      swap1\n      swap3\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3499:3531  sub(prod1, gt(remainder, prod0)) */\n      swap1\n      swap4\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3899:3911  uint256 twos */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4294:4306  sub(0, twos) */\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4290:4313  div(sub(0, twos), twos) */\n      swap2\n      swap1\n      swap2\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4286:4317  add(div(sub(0, twos), twos), 1) */\n      swap1\n      swap3\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4406:4418  prod1 * twos */\n      swap2\n      swap1\n      swap2\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4397:4418  prod0 |= prod1 * twos */\n      swap2\n      swap1\n      swap2\n      or\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4755:4756  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4755:4770  3 * denominator */\n      dup5\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4774:4775  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4754:4775  (3 * denominator) ^ 2 */\n      swap1\n      dup2\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5007:5028  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5003:5028  2 - denominator * inverse */\n      dup3\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":4992:5028  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5076:5097  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5072:5097  2 - denominator * inverse */\n      dup3\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5061:5097  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5146:5167  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5142:5167  2 - denominator * inverse */\n      dup3\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5131:5167  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5216:5237  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5212:5237  2 - denominator * inverse */\n      dup3\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5201:5237  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5286:5307  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5282:5307  2 - denominator * inverse */\n      dup3\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5271:5307  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5357:5378  denominator * inverse */\n      dup1\n      dup7\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5353:5378  2 - denominator * inverse */\n      swap1\n      swap2\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5342:5378  inverse *= 2 - denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5821:5836  prod0 * inverse */\n      mul\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":1667:5880  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_183:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_18:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_203:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_183\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_191\n      jump\t// in\n        /* \"#utility.yul\":792:972   */\n    tag_33:\n        /* \"#utility.yul\":851:857   */\n      0x00\n        /* \"#utility.yul\":904:906   */\n      0x20\n        /* \"#utility.yul\":892:901   */\n      dup3\n        /* \"#utility.yul\":883:890   */\n      dup5\n        /* \"#utility.yul\":879:902   */\n      sub\n        /* \"#utility.yul\":875:907   */\n      slt\n        /* \"#utility.yul\":872:924   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":920:921   */\n      0x00\n        /* \"#utility.yul\":917:918   */\n      dup1\n        /* \"#utility.yul\":910:922   */\n      revert\n        /* \"#utility.yul\":872:924   */\n    tag_208:\n      pop\n        /* \"#utility.yul\":943:966   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":792:972   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":977:1321   */\n    tag_192:\n        /* \"#utility.yul\":1044:1046   */\n      0x40\n        /* \"#utility.yul\":1038:1047   */\n      mload\n        /* \"#utility.yul\":1086:1089   */\n      0x01e0\n        /* \"#utility.yul\":1074:1090   */\n      dup2\n      add\n        /* \"#utility.yul\":1120:1138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1105:1139   */\n      dup2\n      gt\n        /* \"#utility.yul\":1141:1163   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1102:1164   */\n      or\n        /* \"#utility.yul\":1099:1284   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1206:1216   */\n      0x4e487b71\n        /* \"#utility.yul\":1201:1204   */\n      0xe0\n        /* \"#utility.yul\":1197:1217   */\n      shl\n        /* \"#utility.yul\":1194:1195   */\n      0x00\n        /* \"#utility.yul\":1187:1218   */\n      mstore\n        /* \"#utility.yul\":1241:1245   */\n      0x41\n        /* \"#utility.yul\":1238:1239   */\n      0x04\n        /* \"#utility.yul\":1231:1246   */\n      mstore\n        /* \"#utility.yul\":1269:1273   */\n      0x24\n        /* \"#utility.yul\":1266:1267   */\n      0x00\n        /* \"#utility.yul\":1259:1274   */\n      revert\n        /* \"#utility.yul\":1099:1284   */\n    tag_210:\n        /* \"#utility.yul\":1300:1302   */\n      0x40\n        /* \"#utility.yul\":1293:1315   */\n      mstore\n        /* \"#utility.yul\":977:1321   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1326:1849   */\n    tag_193:\n        /* \"#utility.yul\":1407:1412   */\n      0x00\n        /* \"#utility.yul\":1455:1459   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1438:1441   */\n      dup5\n        /* \"#utility.yul\":1434:1453   */\n      sub\n        /* \"#utility.yul\":1430:1460   */\n      slt\n        /* \"#utility.yul\":1427:1477   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1473:1474   */\n      0x00\n        /* \"#utility.yul\":1470:1471   */\n      dup1\n        /* \"#utility.yul\":1463:1475   */\n      revert\n        /* \"#utility.yul\":1427:1477   */\n    tag_212:\n        /* \"#utility.yul\":1506:1508   */\n      0x40\n        /* \"#utility.yul\":1500:1509   */\n      mload\n        /* \"#utility.yul\":1548:1552   */\n      0x20\n        /* \"#utility.yul\":1540:1546   */\n      dup2\n        /* \"#utility.yul\":1536:1553   */\n      add\n        /* \"#utility.yul\":1619:1625   */\n      dup2\n        /* \"#utility.yul\":1607:1617   */\n      dup2\n        /* \"#utility.yul\":1604:1626   */\n      lt\n        /* \"#utility.yul\":1583:1601   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1571:1581   */\n      dup3\n        /* \"#utility.yul\":1568:1602   */\n      gt\n        /* \"#utility.yul\":1565:1627   */\n      or\n        /* \"#utility.yul\":1562:1747   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1669:1679   */\n      0x4e487b71\n        /* \"#utility.yul\":1664:1667   */\n      0xe0\n        /* \"#utility.yul\":1660:1680   */\n      shl\n        /* \"#utility.yul\":1657:1658   */\n      0x00\n        /* \"#utility.yul\":1650:1681   */\n      mstore\n        /* \"#utility.yul\":1704:1708   */\n      0x41\n        /* \"#utility.yul\":1701:1702   */\n      0x04\n        /* \"#utility.yul\":1694:1709   */\n      mstore\n        /* \"#utility.yul\":1732:1736   */\n      0x24\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1722:1737   */\n      revert\n        /* \"#utility.yul\":1562:1747   */\n    tag_213:\n        /* \"#utility.yul\":1763:1765   */\n      0x40\n        /* \"#utility.yul\":1756:1778   */\n      mstore\n        /* \"#utility.yul\":1826:1842   */\n      swap2\n      mload\n        /* \"#utility.yul\":1811:1843   */\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":1796:1802   */\n      swap2\n        /* \"#utility.yul\":1326:1849   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1854:2046   */\n    tag_194:\n        /* \"#utility.yul\":1933:1946   */\n      dup1\n      mload\n        /* \"#utility.yul\":1986:2020   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1975:2021   */\n      dup2\n      and\n        /* \"#utility.yul\":1965:2022   */\n      dup2\n      eq\n        /* \"#utility.yul\":1955:2040   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2033:2034   */\n      dup1\n        /* \"#utility.yul\":2026:2038   */\n      revert\n        /* \"#utility.yul\":1955:2040   */\n    tag_215:\n        /* \"#utility.yul\":1854:2046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2220   */\n    tag_195:\n        /* \"#utility.yul\":2129:2142   */\n      dup1\n      mload\n        /* \"#utility.yul\":2182:2194   */\n      0xffffffffff\n        /* \"#utility.yul\":2171:2195   */\n      dup2\n      and\n        /* \"#utility.yul\":2161:2196   */\n      dup2\n      eq\n        /* \"#utility.yul\":2151:2214   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2207:2208   */\n      dup1\n        /* \"#utility.yul\":2200:2212   */\n      revert\n        /* \"#utility.yul\":2225:2388   */\n    tag_196:\n        /* \"#utility.yul\":2303:2316   */\n      dup1\n      mload\n        /* \"#utility.yul\":2356:2362   */\n      0xffff\n        /* \"#utility.yul\":2345:2363   */\n      dup2\n      and\n        /* \"#utility.yul\":2335:2364   */\n      dup2\n      eq\n        /* \"#utility.yul\":2325:2382   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2393:2531   */\n    tag_197:\n        /* \"#utility.yul\":2472:2485   */\n      dup1\n      mload\n        /* \"#utility.yul\":2494:2525   */\n      tag_215\n        /* \"#utility.yul\":2472:2485   */\n      dup2\n        /* \"#utility.yul\":2494:2525   */\n      tag_191\n      jump\t// in\n        /* \"#utility.yul\":2536:4181   */\n    tag_68:\n        /* \"#utility.yul\":2634:2640   */\n      0x00\n        /* \"#utility.yul\":2687:2690   */\n      0x01e0\n        /* \"#utility.yul\":2675:2684   */\n      dup3\n        /* \"#utility.yul\":2666:2673   */\n      dup5\n        /* \"#utility.yul\":2662:2685   */\n      sub\n        /* \"#utility.yul\":2658:2691   */\n      slt\n        /* \"#utility.yul\":2655:2708   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2704:2705   */\n      0x00\n        /* \"#utility.yul\":2701:2702   */\n      dup1\n        /* \"#utility.yul\":2694:2706   */\n      revert\n        /* \"#utility.yul\":2655:2708   */\n    tag_223:\n        /* \"#utility.yul\":2730:2747   */\n      tag_224\n      tag_192\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2770:2842   */\n      tag_225\n        /* \"#utility.yul\":2834:2841   */\n      dup5\n        /* \"#utility.yul\":2823:2832   */\n      dup5\n        /* \"#utility.yul\":2770:2842   */\n      tag_193\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2763:2768   */\n      dup2\n        /* \"#utility.yul\":2756:2843   */\n      mstore\n        /* \"#utility.yul\":2875:2924   */\n      tag_226\n        /* \"#utility.yul\":2920:2922   */\n      0x20\n        /* \"#utility.yul\":2909:2918   */\n      dup5\n        /* \"#utility.yul\":2905:2923   */\n      add\n        /* \"#utility.yul\":2875:2924   */\n      tag_194\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2870:2872   */\n      0x20\n        /* \"#utility.yul\":2863:2868   */\n      dup3\n        /* \"#utility.yul\":2859:2873   */\n      add\n        /* \"#utility.yul\":2852:2925   */\n      mstore\n        /* \"#utility.yul\":2957:3006   */\n      tag_227\n        /* \"#utility.yul\":3002:3004   */\n      0x40\n        /* \"#utility.yul\":2991:3000   */\n      dup5\n        /* \"#utility.yul\":2987:3005   */\n      add\n        /* \"#utility.yul\":2957:3006   */\n      tag_194\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2952:2954   */\n      0x40\n        /* \"#utility.yul\":2945:2950   */\n      dup3\n        /* \"#utility.yul\":2941:2955   */\n      add\n        /* \"#utility.yul\":2934:3007   */\n      mstore\n        /* \"#utility.yul\":3039:3088   */\n      tag_228\n        /* \"#utility.yul\":3084:3086   */\n      0x60\n        /* \"#utility.yul\":3073:3082   */\n      dup5\n        /* \"#utility.yul\":3069:3087   */\n      add\n        /* \"#utility.yul\":3039:3088   */\n      tag_194\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3034:3036   */\n      0x60\n        /* \"#utility.yul\":3027:3032   */\n      dup3\n        /* \"#utility.yul\":3023:3037   */\n      add\n        /* \"#utility.yul\":3016:3089   */\n      mstore\n        /* \"#utility.yul\":3122:3172   */\n      tag_229\n        /* \"#utility.yul\":3167:3170   */\n      0x80\n        /* \"#utility.yul\":3156:3165   */\n      dup5\n        /* \"#utility.yul\":3152:3171   */\n      add\n        /* \"#utility.yul\":3122:3172   */\n      tag_194\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3116:3119   */\n      0x80\n        /* \"#utility.yul\":3109:3114   */\n      dup3\n        /* \"#utility.yul\":3105:3120   */\n      add\n        /* \"#utility.yul\":3098:3173   */\n      mstore\n        /* \"#utility.yul\":3206:3256   */\n      tag_230\n        /* \"#utility.yul\":3251:3254   */\n      0xa0\n        /* \"#utility.yul\":3240:3249   */\n      dup5\n        /* \"#utility.yul\":3236:3255   */\n      add\n        /* \"#utility.yul\":3206:3256   */\n      tag_194\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3200:3203   */\n      0xa0\n        /* \"#utility.yul\":3193:3198   */\n      dup3\n        /* \"#utility.yul\":3189:3204   */\n      add\n        /* \"#utility.yul\":3182:3257   */\n      mstore\n        /* \"#utility.yul\":3290:3339   */\n      tag_231\n        /* \"#utility.yul\":3334:3337   */\n      0xc0\n        /* \"#utility.yul\":3323:3332   */\n      dup5\n        /* \"#utility.yul\":3319:3338   */\n      add\n        /* \"#utility.yul\":3290:3339   */\n      tag_195\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3284:3287   */\n      0xc0\n        /* \"#utility.yul\":3277:3282   */\n      dup3\n        /* \"#utility.yul\":3273:3288   */\n      add\n        /* \"#utility.yul\":3266:3340   */\n      mstore\n        /* \"#utility.yul\":3373:3422   */\n      tag_232\n        /* \"#utility.yul\":3417:3420   */\n      0xe0\n        /* \"#utility.yul\":3406:3415   */\n      dup5\n        /* \"#utility.yul\":3402:3421   */\n      add\n        /* \"#utility.yul\":3373:3422   */\n      tag_196\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3367:3370   */\n      0xe0\n        /* \"#utility.yul\":3360:3365   */\n      dup3\n        /* \"#utility.yul\":3356:3371   */\n      add\n        /* \"#utility.yul\":3349:3423   */\n      mstore\n        /* \"#utility.yul\":3442:3445   */\n      0x0100\n        /* \"#utility.yul\":3477:3526   */\n      tag_233\n        /* \"#utility.yul\":3522:3524   */\n      dup2\n        /* \"#utility.yul\":3511:3520   */\n      dup6\n        /* \"#utility.yul\":3507:3525   */\n      add\n        /* \"#utility.yul\":3477:3526   */\n      tag_197\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3461:3475   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3454:3527   */\n      mstore\n        /* \"#utility.yul\":3546:3549   */\n      0x0120\n        /* \"#utility.yul\":3581:3630   */\n      tag_234\n        /* \"#utility.yul\":3611:3629   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3581:3630   */\n      tag_197\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3565:3579   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3558:3631   */\n      mstore\n        /* \"#utility.yul\":3650:3653   */\n      0x0140\n        /* \"#utility.yul\":3685:3734   */\n      tag_235\n        /* \"#utility.yul\":3715:3733   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3685:3734   */\n      tag_197\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3669:3683   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3662:3735   */\n      mstore\n        /* \"#utility.yul\":3754:3757   */\n      0x0160\n        /* \"#utility.yul\":3789:3838   */\n      tag_236\n        /* \"#utility.yul\":3819:3837   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3789:3838   */\n      tag_197\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3773:3787   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3766:3839   */\n      mstore\n        /* \"#utility.yul\":3858:3861   */\n      0x0180\n        /* \"#utility.yul\":3893:3942   */\n      tag_237\n        /* \"#utility.yul\":3923:3941   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3893:3942   */\n      tag_194\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3877:3891   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3870:3943   */\n      mstore\n        /* \"#utility.yul\":3962:3965   */\n      0x01a0\n        /* \"#utility.yul\":3997:4046   */\n      tag_238\n        /* \"#utility.yul\":4027:4045   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":3997:4046   */\n      tag_194\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3981:3995   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3974:4047   */\n      mstore\n        /* \"#utility.yul\":4066:4069   */\n      0x01c0\n        /* \"#utility.yul\":4101:4150   */\n      tag_239\n        /* \"#utility.yul\":4131:4149   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":4101:4150   */\n      tag_194\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4085:4099   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4078:4151   */\n      mstore\n        /* \"#utility.yul\":4089:4094   */\n      swap4\n        /* \"#utility.yul\":2536:4181   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4465:4592   */\n    tag_198:\n        /* \"#utility.yul\":4526:4536   */\n      0x4e487b71\n        /* \"#utility.yul\":4521:4524   */\n      0xe0\n        /* \"#utility.yul\":4517:4537   */\n      shl\n        /* \"#utility.yul\":4514:4515   */\n      0x00\n        /* \"#utility.yul\":4507:4538   */\n      mstore\n        /* \"#utility.yul\":4557:4561   */\n      0x11\n        /* \"#utility.yul\":4554:4555   */\n      0x04\n        /* \"#utility.yul\":4547:4562   */\n      mstore\n        /* \"#utility.yul\":4581:4585   */\n      0x24\n        /* \"#utility.yul\":4578:4579   */\n      0x00\n        /* \"#utility.yul\":4571:4586   */\n      revert\n        /* \"#utility.yul\":4597:4725   */\n    tag_78:\n        /* \"#utility.yul\":4664:4673   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4685:4696   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4682:4719   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":4699:4717   */\n      tag_129\n      tag_198\n      jump\t// in\n        /* \"#utility.yul\":5009:5286   */\n    tag_84:\n        /* \"#utility.yul\":5076:5082   */\n      0x00\n        /* \"#utility.yul\":5129:5131   */\n      0x20\n        /* \"#utility.yul\":5117:5126   */\n      dup3\n        /* \"#utility.yul\":5108:5115   */\n      dup5\n        /* \"#utility.yul\":5104:5127   */\n      sub\n        /* \"#utility.yul\":5100:5132   */\n      slt\n        /* \"#utility.yul\":5097:5149   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":5145:5146   */\n      0x00\n        /* \"#utility.yul\":5142:5143   */\n      dup1\n        /* \"#utility.yul\":5135:5147   */\n      revert\n        /* \"#utility.yul\":5097:5149   */\n    tag_247:\n        /* \"#utility.yul\":5177:5186   */\n      dup2\n        /* \"#utility.yul\":5171:5187   */\n      mload\n        /* \"#utility.yul\":5230:5235   */\n      dup1\n        /* \"#utility.yul\":5223:5236   */\n      iszero\n        /* \"#utility.yul\":5216:5237   */\n      iszero\n        /* \"#utility.yul\":5209:5214   */\n      dup2\n        /* \"#utility.yul\":5206:5238   */\n      eq\n        /* \"#utility.yul\":5196:5256   */\n      tag_183\n      jumpi\n        /* \"#utility.yul\":5252:5253   */\n      0x00\n        /* \"#utility.yul\":5249:5250   */\n      dup1\n        /* \"#utility.yul\":5242:5254   */\n      revert\n        /* \"#utility.yul\":6078:6262   */\n    tag_107:\n        /* \"#utility.yul\":6148:6154   */\n      0x00\n        /* \"#utility.yul\":6201:6203   */\n      0x20\n        /* \"#utility.yul\":6189:6198   */\n      dup3\n        /* \"#utility.yul\":6180:6187   */\n      dup5\n        /* \"#utility.yul\":6176:6199   */\n      sub\n        /* \"#utility.yul\":6172:6204   */\n      slt\n        /* \"#utility.yul\":6169:6221   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":6217:6218   */\n      0x00\n        /* \"#utility.yul\":6214:6215   */\n      dup1\n        /* \"#utility.yul\":6207:6219   */\n      revert\n        /* \"#utility.yul\":6169:6221   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":6240:6256   */\n      mload\n      swap2\n        /* \"#utility.yul\":6078:6262   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6267:6392   */\n    tag_118:\n        /* \"#utility.yul\":6332:6341   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6353:6363   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6350:6386   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":6366:6384   */\n      tag_129\n      tag_198\n      jump\t// in\n        /* \"#utility.yul\":7171:7339   */\n    tag_143:\n        /* \"#utility.yul\":7244:7253   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7275:7284   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7292:7307   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7286:7308   */\n      dup5\n      eq\n        /* \"#utility.yul\":7272:7309   */\n      or\n        /* \"#utility.yul\":7262:7333   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":7313:7331   */\n      tag_129\n      tag_198\n      jump\t// in\n        /* \"#utility.yul\":8600:8727   */\n    tag_187:\n        /* \"#utility.yul\":8661:8671   */\n      0x4e487b71\n        /* \"#utility.yul\":8656:8659   */\n      0xe0\n        /* \"#utility.yul\":8652:8672   */\n      shl\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8642:8673   */\n      mstore\n        /* \"#utility.yul\":8692:8696   */\n      0x12\n        /* \"#utility.yul\":8689:8690   */\n      0x04\n        /* \"#utility.yul\":8682:8697   */\n      mstore\n        /* \"#utility.yul\":8716:8720   */\n      0x24\n        /* \"#utility.yul\":8713:8714   */\n      0x00\n        /* \"#utility.yul\":8706:8721   */\n      revert\n\n    auxdata: 0xa2646970667358221220d5cb83798f3dbfbaf99042ccb0426c73d7389e25100b4166a474842b220840b564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1223": {
									"entryPoint": null,
									"id": 1223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2672": {
									"entryPoint": null,
									"id": 2672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1311": {
									"entryPoint": 238,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526000600355600580546001600160a01b03191673f14f9596430931e177469715c591513308244e8f17905534801561003b57600080fd5b50610045336100ee565b73eb7a892bb04a8f836bdeebbf60897a7af1bf5d7f60808190526040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa15801561009a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100be919061013e565b600180546001600160a01b03929092166001600160a01b031992831681179091556002805490921617905561016e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561015057600080fd5b81516001600160a01b038116811461016757600080fd5b9392505050565b60805161107b6101866000396000505061107b6000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610143578063c0c24ddd14610161578063d414c82014610181578063f2fde38b146101b7578063fa2df414146101d757600080fd5b80632c62fa1014610096578063715018a6146100df57806382899756146100f65780638d92fdf31461012357600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100cc6100b1366004610d69565b6001600160a01b031660009081526006602052604090205490565b6040519081526020015b60405180910390f35b3480156100eb57600080fd5b506100f46101f7565b005b34801561010257600080fd5b5061010b61020b565b6040516001600160a01b0390911681526020016100d6565b34801561012f57600080fd5b506100f461013e366004610d86565b61028b565b34801561014f57600080fd5b506000546001600160a01b031661010b565b34801561016d57600080fd5b506100f461017c366004610d69565b61039d565b34801561018d57600080fd5b506100cc61019c366004610d69565b6001600160a01b031660009081526007602052604090205490565b3480156101c357600080fd5b506100f46101d2366004610d69565b6103c7565b3480156101e357600080fd5b506100f46101f2366004610d86565b610445565b6101ff610653565b61020960006106ad565b565b6002546005546040516335ea6a7560e01b81526001600160a01b03918216600482015260009291909116906335ea6a75906024016101e060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102819190610e7e565b6101000151905090565b600061029733836106fd565b6004805460405163a3df437b60e01b81529182018390523360248301529192506001600160a01b039091169063a3df437b90604401600060405180830381600087803b1580156102e657600080fd5b505af11580156102fa573d6000803e3d6000fd5b5050336000908152600660205260408120805485945090925061031e908490610fb7565b909155505060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610fca565b505050565b6103a5610653565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6103cf610653565b6001600160a01b0381166104395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610442816106ad565b50565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c09190610fca565b50600480546040516321ae089560e21b81529182018390526000916001600160a01b03909116906386b8225490602401602060405180830381865afa15801561050d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105319190610fec565b905061053d8183610fb7565b6005546004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905292945091169063095ea7b3906044016020604051808303816000875af1158015610598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc9190610fca565b506004805460405163f75f602960e01b81529182018490523360248301526001600160a01b03169063f75f602990604401600060405180830381600087803b15801561060757600080fd5b505af115801561061b573d6000803e3d6000fd5b5050336000908152600660205260408120805486945090925061063f908490611005565b9091555061064f9050338361097c565b5050565b6000546001600160a01b031633146102095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610430565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166000908152600760205260408120546107775760405162461bcd60e51b815260206004820152602c60248201527f5573657220686173206e6f742070726f7669646564207468697320746f6b656e60448201526b20666f72206c656e64696e6760a01b6064820152608401610430565b6001600160a01b038381166000908152600760205260408082205460025460055492516335ea6a7560e01b81529285166004840152909316906335ea6a75906024016101e060405180830381865afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb9190610e7e565b61010001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561084a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e9190610fec565b9050600061089561087f8786611018565b836003546103e86108909190611018565b610c64565b905060006108a685886103e8610c64565b600254600554604051631a4ca37b60e21b81526001600160a01b0391821660048201526024810186905230604482015292935016906369328dec906064016020604051808303816000875af1158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190610fec565b506001600160a01b03881660009081526007602052604081208054839290610950908490610fb7565b9250508190555080600360008282546109699190610fb7565b9091555091955050505050505b92915050565b60055460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190610fca565b610a4d5760405162461bcd60e51b815260206004820152602360248201527f5468697320636f6e747261637420686173206e6f7420656e6f75676820746f6b604482015262656e7360e81b6064820152608401610430565b60025460055460405163617ba03760e01b81526001600160a01b039182166004820152602481018490523060448201526000606482015291169063617ba03790608401600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b50505050600354600003610b18576001600160a01b03821660009081526007602052604081208054839290610af4908490611005565b925050819055508060036000828254610b0d9190611005565b9091555061064f9050565b6002546005546040516335ea6a7560e01b81526001600160a01b03918216600482015260009291909116906335ea6a75906024016101e060405180830381865afa158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190610e7e565b61010001516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190610fec565b90506000610c128460035484610c64565b6001600160a01b038616600090815260076020526040812080549293508392909190610c3f908490611005565b925050819055508060036000828254610c589190611005565b90915550505050505050565b6000808060001985870985870292508281108382030391505080600003610c9e57838281610c9457610c9461102f565b0492505050610d4d565b808411610ce55760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401610430565b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6001600160a01b038116811461044257600080fd5b600060208284031215610d7b57600080fd5b8135610d4d81610d54565b600060208284031215610d9857600080fd5b5035919050565b6040516101e0810167ffffffffffffffff81118282101715610dd157634e487b7160e01b600052604160045260246000fd5b60405290565b600060208284031215610de957600080fd5b6040516020810181811067ffffffffffffffff82111715610e1a57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff81168114610e4757600080fd5b919050565b805164ffffffffff81168114610e4757600080fd5b805161ffff81168114610e4757600080fd5b8051610e4781610d54565b60006101e08284031215610e9157600080fd5b610e99610d9f565b610ea38484610dd7565b8152610eb160208401610e27565b6020820152610ec260408401610e27565b6040820152610ed360608401610e27565b6060820152610ee460808401610e27565b6080820152610ef560a08401610e27565b60a0820152610f0660c08401610e4c565b60c0820152610f1760e08401610e61565b60e0820152610100610f2a818501610e73565b90820152610120610f3c848201610e73565b90820152610140610f4e848201610e73565b90820152610160610f60848201610e73565b90820152610180610f72848201610e27565b908201526101a0610f84848201610e27565b908201526101c0610f96848201610e27565b908201529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561097657610976610fa1565b600060208284031215610fdc57600080fd5b81518015158114610d4d57600080fd5b600060208284031215610ffe57600080fd5b5051919050565b8082018082111561097657610976610fa1565b808202811582820484141761097657610976610fa1565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220d5cb83798f3dbfbaf99042ccb0426c73d7389e25100b4166a474842b220840b564736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xF14F9596430931E177469715C591513308244E8F OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45 CALLER PUSH2 0xEE JUMP JUMPDEST PUSH20 0xEB7A892BB04A8F836BDEEBBF60897A7AF1BF5D7F PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x26B1D5F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x26B1D5F SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x16E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x107B PUSH2 0x186 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH2 0x107B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xC0C24DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD414C820 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xFA2DF414 EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C62FA10 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x82899756 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8D92FDF3 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x653 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 CALLER DUP4 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3DF437B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA3DF437B SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x31E SWAP1 DUP5 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A5 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x442 DUP2 PUSH2 0x6AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21AE0895 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x86B82254 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP2 DUP4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 SWAP5 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF75F6029 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF75F6029 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x63F SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x64F SWAP1 POP CALLER DUP4 PUSH2 0x97C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F742070726F7669646564207468697320746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x20666F72206C656E64696E67 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD SWAP3 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP6 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP1 SWAP4 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x895 PUSH2 0x87F DUP8 DUP7 PUSH2 0x1018 JUMP JUMPDEST DUP4 PUSH1 0x3 SLOAD PUSH2 0x3E8 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A6 DUP6 DUP9 PUSH2 0x3E8 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x950 SWAP1 DUP5 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320636F6E747261637420686173206E6F7420656E6F75676820746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656E73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x617BA037 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x617BA037 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xB18 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAF4 SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x64F SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC12 DUP5 PUSH1 0x3 SLOAD DUP5 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC3F SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0xC9E JUMPI DUP4 DUP3 DUP2 PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x102F JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xD4D JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6174683A206D756C446976206F766572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP6 NOT PUSH1 0x1 SWAP1 DUP2 ADD DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 DUP3 DUP7 SUB DUP2 SWAP1 DIV SWAP6 SWAP1 SWAP3 GT SWAP1 SWAP4 SUB PUSH1 0x0 DUP3 SWAP1 SUB SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x3 DUP5 MUL PUSH1 0x2 SWAP1 DUP2 XOR DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL SWAP1 SWAP2 SUB MUL MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD4D DUP2 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xE47 DUP2 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE99 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xEA3 DUP5 DUP5 PUSH2 0xDD7 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xEB1 PUSH1 0x20 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEC2 PUSH1 0x40 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xED3 PUSH1 0x60 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xEE4 PUSH1 0x80 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xEF5 PUSH1 0xA0 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xF06 PUSH1 0xC0 DUP5 ADD PUSH2 0xE4C JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xF17 PUSH1 0xE0 DUP5 ADD PUSH2 0xE61 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xF2A DUP2 DUP6 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0xF3C DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0xF4E DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0xF60 DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0xF72 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0xF84 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0xF96 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xCB DUP4 PUSH26 0x8F3DBFBAF99042CCB0426C73D7389E25100B4166A474842B2208 BLOCKHASH 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "672:3630:8:-:0;;;886:1;851:36;;929:58;;;-1:-1:-1;;;;;;929:58:8;945:42;929:58;;;1137:211;;;;;;;;;-1:-1:-1;936:32:3;719:10:5;936:18:3;:32::i;:::-;1206:42:8;1161:88;;;;1273:29;;;-1:-1:-1;;;1273:29:8;;;;:27;;:29;;;;;;;;;;;;;;;1206:42;1273:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1259:11;:43;;-1:-1:-1;;;;;1259:43:8;;;;-1:-1:-1;;;;;;1259:43:8;;;;;;;;1312:8;:29;;;;;;;;672:3630;;2426:187:3;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:3;;;-1:-1:-1;;;;;;2534:17:3;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;672:3630:8;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_3003": {
									"entryPoint": null,
									"id": 3003,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_1254": {
									"entryPoint": 1619,
									"id": 1254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1402": {
									"entryPoint": null,
									"id": 1402,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1311": {
									"entryPoint": 1709,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@assetsOf_2963": {
									"entryPoint": null,
									"id": 2963,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeAddressClaimContract_2999": {
									"entryPoint": 925,
									"id": 2999,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositAsset_2734": {
									"entryPoint": 1093,
									"id": 2734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getATokenAddress_2987": {
									"entryPoint": 523,
									"id": 2987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mulDiv_1626": {
									"entryPoint": 3172,
									"id": 1626,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_1240": {
									"entryPoint": null,
									"id": 1240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1268": {
									"entryPoint": 503,
									"id": 1268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sharesLoansOf_2975": {
									"entryPoint": null,
									"id": 2975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supplyLendToken_2860": {
									"entryPoint": 2428,
									"id": 2860,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_1291": {
									"entryPoint": 967,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawAsset_2773": {
									"entryPoint": 651,
									"id": 2773,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawLendToken_2951": {
									"entryPoint": 1789,
									"id": 2951,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_struct_ReserveConfigurationMap_fromMemory": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_ReserveData_$881_memory_ptr_fromMemory": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint40_fromMemory": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f009470db02257ff02c01bdb413b692757316aefb0675a644795add53648c46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecf4a17f5db0088abc07cd49507b83388aed02a6cafb857599abb9d71405b158__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9079:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:9"
															},
															"nodeType": "YulIf",
															"src": "69:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:9",
														"type": ""
													}
												],
												"src": "14:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:9"
															},
															"nodeType": "YulIf",
															"src": "230:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:9",
														"type": ""
													}
												],
												"src": "150:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "513:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "566:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "472:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "483:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "494:4:9",
														"type": ""
													}
												],
												"src": "402:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "685:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "695:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "707:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "695:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "737:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "773:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "764:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "764:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "777:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "760:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "760:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "730:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "654:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "665:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "676:4:9",
														"type": ""
													}
												],
												"src": "584:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "862:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "908:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "917:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "920:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "910:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "910:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "910:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "883:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "892:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "879:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "904:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:32:9"
															},
															"nodeType": "YulIf",
															"src": "872:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "933:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "956:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "828:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "839:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "851:6:9",
														"type": ""
													}
												],
												"src": "792:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:303:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1028:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1044:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1038:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1056:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1086:3:9",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:16:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1060:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1173:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1194:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1201:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1206:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1197:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1197:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1187:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1187:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1238:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1241:4:9",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1231:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1231:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1231:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1266:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1259:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1259:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1259:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1108:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1120:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1105:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1144:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1156:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1141:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1102:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:62:9"
															},
															"nodeType": "YulIf",
															"src": "1099:185:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1300:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1304:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1007:6:9",
														"type": ""
													}
												],
												"src": "977:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1417:432:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1461:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1463:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1438:3:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:19:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1430:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:30:9"
															},
															"nodeType": "YulIf",
															"src": "1427:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1486:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1500:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1490:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1518:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1540:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:17:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1522:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1636:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1657:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1664:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1669:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1660:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1650:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1650:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1650:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1701:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1704:4:9",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1694:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1694:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1694:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1732:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1722:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1722:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1571:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1583:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1568:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1568:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1607:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1619:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1604:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1565:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:62:9"
															},
															"nodeType": "YulIf",
															"src": "1562:185:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1767:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1756:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1756:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1787:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1796:6:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1787:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1818:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1826:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:16:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1811:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1811:32:9"
														}
													]
												},
												"name": "abi_decode_struct_ReserveConfigurationMap_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1388:9:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1399:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1407:5:9",
														"type": ""
													}
												],
												"src": "1326:523:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:132:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1924:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1939:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1933:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1924:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1968:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1979:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1986:34:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1975:46:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1965:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:57:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:65:9"
															},
															"nodeType": "YulIf",
															"src": "1955:85:9"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1893:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1904:5:9",
														"type": ""
													}
												],
												"src": "1854:192:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2110:110:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2120:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2135:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2129:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2120:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2198:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2207:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2200:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2200:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2200:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2164:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2175:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2182:12:9",
																						"type": "",
																						"value": "0xffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2171:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2171:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2161:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2154:43:9"
															},
															"nodeType": "YulIf",
															"src": "2151:63:9"
														}
													]
												},
												"name": "abi_decode_uint40_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2089:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2100:5:9",
														"type": ""
													}
												],
												"src": "2051:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:104:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2294:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2303:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2294:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2338:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2349:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2356:6:9",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2345:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2345:18:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2335:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2335:29:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:37:9"
															},
															"nodeType": "YulIf",
															"src": "2325:57:9"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2263:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2274:5:9",
														"type": ""
													}
												],
												"src": "2225:163:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2453:78:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2463:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2472:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2463:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2519:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2494:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:31:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2432:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2443:5:9",
														"type": ""
													}
												],
												"src": "2393:138:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:1536:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2692:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2694:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2694:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2666:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2687:3:9",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:33:9"
															},
															"nodeType": "YulIf",
															"src": "2655:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2717:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2730:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:17:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2721:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2763:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_struct_ReserveConfigurationMap_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2770:52:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:72:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2756:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:87:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2756:87:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2909:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2920:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2905:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2905:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2875:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2945:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2952:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2991:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3002:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2987:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2987:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2957:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2934:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3027:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3073:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3084:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3069:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3069:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3039:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3039:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3109:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3167:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:19:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3122:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:50:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:75:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3098:75:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3193:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3200:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3240:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3251:3:9",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3236:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3236:19:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3206:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:50:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:75:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:75:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3277:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3284:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3323:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3334:3:9",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3319:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3319:19:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint40_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3290:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3290:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:74:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:74:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3360:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3367:3:9",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3356:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3406:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3417:3:9",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3402:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3402:19:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3373:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:74:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3349:74:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3432:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3442:3:9",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3436:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3465:5:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3472:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3461:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3511:9:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3522:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3507:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3507:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3477:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3536:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3546:3:9",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3540:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3569:5:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3576:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3565:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3565:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3615:9:9"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3626:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3611:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3611:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3581:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3640:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3650:3:9",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3644:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3673:5:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3680:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3719:9:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3730:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3715:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3715:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3685:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3685:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3662:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3744:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3754:3:9",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3748:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3777:5:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3784:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3773:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3823:9:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3834:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3819:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3819:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3789:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3789:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3766:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3766:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3848:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3858:3:9",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "3852:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3881:5:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "3888:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3877:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3927:9:9"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "3938:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3923:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3923:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3893:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3893:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3952:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3962:3:9",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "3956:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3985:5:9"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "3992:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3981:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4031:9:9"
																					},
																					{
																						"name": "_6",
																						"nodeType": "YulIdentifier",
																						"src": "4042:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4027:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4027:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3997:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3997:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3974:73:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4056:13:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4066:3:9",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nodeType": "YulTypedName",
																	"src": "4060:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4089:5:9"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "4096:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4085:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4085:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4135:9:9"
																					},
																					{
																						"name": "_7",
																						"nodeType": "YulIdentifier",
																						"src": "4146:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4131:18:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint128_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4101:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4101:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:73:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4078:73:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4160:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4170:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4160:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ReserveData_$881_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2611:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2622:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2634:6:9",
														"type": ""
													}
												],
												"src": "2536:1645:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4315:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4325:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4337:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4325:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4367:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4378:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4360:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4405:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4416:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4425:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4441:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4446:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4437:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4437:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4450:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4421:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4394:60:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4276:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4287:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4295:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4306:4:9",
														"type": ""
													}
												],
												"src": "4186:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4497:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4521:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4526:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4517:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4517:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4507:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4557:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4547:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4465:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4646:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4656:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4668:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4656:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4697:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4699:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4699:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4688:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4694:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:11:9"
															},
															"nodeType": "YulIf",
															"src": "4682:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4628:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4631:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4637:4:9",
														"type": ""
													}
												],
												"src": "4597:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4859:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4869:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4881:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4869:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4911:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4926:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4942:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4947:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4938:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4938:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4951:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4934:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4934:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4904:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4904:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4975:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4986:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4971:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4971:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4991:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4964:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4964:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4964:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4820:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4831:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4839:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4850:4:9",
														"type": ""
													}
												],
												"src": "4730:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5087:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5133:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5142:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5145:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5135:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5135:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5135:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5108:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5117:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5104:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5104:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5129:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5100:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5100:32:9"
															},
															"nodeType": "YulIf",
															"src": "5097:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5158:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5177:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5171:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5162:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5240:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5249:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5252:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5242:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5242:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5242:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5209:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5230:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5223:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5223:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5216:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5216:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5206:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:40:9"
															},
															"nodeType": "YulIf",
															"src": "5196:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5265:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5275:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5053:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5064:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5076:6:9",
														"type": ""
													}
												],
												"src": "5009:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5465:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5482:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5493:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5475:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5475:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5516:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5527:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5512:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5532:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5505:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5505:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5505:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5555:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5566:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5551:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5551:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5571:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5544:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5637:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5642:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5660:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5672:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5683:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5660:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5442:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5456:4:9",
														"type": ""
													}
												],
												"src": "5291:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5865:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5877:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5888:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5873:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5865:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5900:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5918:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5923:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5927:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5904:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5960:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5968:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5956:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5938:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5938:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6012:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6020:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6008:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6008:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5981:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6044:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5808:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5819:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5827:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5835:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5846:4:9",
														"type": ""
													}
												],
												"src": "5698:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6159:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6205:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6214:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6217:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6207:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6207:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6207:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6180:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6176:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6176:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6201:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6172:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:32:9"
															},
															"nodeType": "YulIf",
															"src": "6169:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6246:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6240:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6230:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6125:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6136:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6148:6:9",
														"type": ""
													}
												],
												"src": "6078:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6315:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6325:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6336:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6339:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6325:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6364:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6366:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6366:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6366:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6356:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6359:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6353:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:10:9"
															},
															"nodeType": "YulIf",
															"src": "6350:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6298:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6301:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6307:3:9",
														"type": ""
													}
												],
												"src": "6267:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6571:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6581:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6581:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6622:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6633:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6618:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6618:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6638:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6661:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6672:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6657:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6677:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6650:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6650:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6650:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6721:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6733:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6729:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6721:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6548:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6562:4:9",
														"type": ""
													}
												],
												"src": "6397:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6932:234:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6949:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6960:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6942:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6983:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6994:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6979:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6999:2:9",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6972:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6972:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6972:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7022:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7033:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7018:18:9"
																	},
																	{
																		"hexValue": "5573657220686173206e6f742070726f7669646564207468697320746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7038:34:9",
																		"type": "",
																		"value": "User has not provided this token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7011:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7093:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7104:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7089:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7089:18:9"
																	},
																	{
																		"hexValue": "20666f72206c656e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7109:14:9",
																		"type": "",
																		"value": " for lending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7082:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7082:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7133:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7145:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7156:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7133:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecf4a17f5db0088abc07cd49507b83388aed02a6cafb857599abb9d71405b158__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6909:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6923:4:9",
														"type": ""
													}
												],
												"src": "6758:408:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7223:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7233:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7248:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7251:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7244:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7244:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7233:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7311:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7313:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7313:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7313:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7282:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7275:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7275:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7289:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7296:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7305:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7292:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7292:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7286:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7286:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7272:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7272:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7265:45:9"
															},
															"nodeType": "YulIf",
															"src": "7262:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7202:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7205:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7211:7:9",
														"type": ""
													}
												],
												"src": "7171:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7501:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7511:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7523:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7519:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7511:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7546:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7564:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7569:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7573:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7550:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7591:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7606:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7614:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7584:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7584:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7638:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7649:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7634:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7654:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7627:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7692:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7677:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7677:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7701:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7709:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7697:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:43:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7454:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7465:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7473:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7481:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7492:4:9",
														"type": ""
													}
												],
												"src": "7344:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7898:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7915:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7926:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7908:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7908:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7908:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7949:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7960:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7945:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7965:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7938:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7938:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7999:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7984:18:9"
																	},
																	{
																		"hexValue": "5468697320636f6e747261637420686173206e6f7420656e6f75676820746f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8004:34:9",
																		"type": "",
																		"value": "This contract has not enough tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7977:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7977:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:9"
																	},
																	{
																		"hexValue": "656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8075:5:9",
																		"type": "",
																		"value": "ens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8048:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8090:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8090:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f009470db02257ff02c01bdb413b692757316aefb0675a644795add53648c46__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7875:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7889:4:9",
														"type": ""
													}
												],
												"src": "7724:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8320:275:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8330:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8342:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8353:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8330:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8366:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8384:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8389:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8380:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8376:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8370:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8411:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8426:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8434:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8422:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8422:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8404:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8458:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8469:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8454:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8454:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8474:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8447:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8447:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8501:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8512:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8497:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8497:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "8521:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8529:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8517:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8517:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8490:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8490:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8490:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8553:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8564:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8549:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8549:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8573:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8581:6:9",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8569:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8569:19:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8542:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8542:47:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8265:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8276:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8284:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8292:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8300:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8311:4:9",
														"type": ""
													}
												],
												"src": "8128:467:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8632:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8649:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8656:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8661:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8652:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8642:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8642:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8692:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8682:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8682:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8713:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8716:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8706:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8706:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8706:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8600:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8906:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8923:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8916:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8916:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8957:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8968:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8953:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8953:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8973:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8946:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8946:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8946:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8996:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9007:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8992:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8992:18:9"
																	},
																	{
																		"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9012:23:9",
																		"type": "",
																		"value": "Math: mulDiv overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8985:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8985:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9045:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9053:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9053:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9045:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8883:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8897:4:9",
														"type": ""
													}
												],
												"src": "8732:345:9"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 480)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_struct_ReserveConfigurationMap_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x20) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x20)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, mload(headStart))\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint40_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_struct$_ReserveData_$881_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        let value := allocate_memory()\n        mstore(value, abi_decode_struct_ReserveConfigurationMap_fromMemory(headStart, dataEnd))\n        mstore(add(value, 32), abi_decode_uint128_fromMemory(add(headStart, 32)))\n        mstore(add(value, 64), abi_decode_uint128_fromMemory(add(headStart, 64)))\n        mstore(add(value, 96), abi_decode_uint128_fromMemory(add(headStart, 96)))\n        mstore(add(value, 128), abi_decode_uint128_fromMemory(add(headStart, 128)))\n        mstore(add(value, 160), abi_decode_uint128_fromMemory(add(headStart, 160)))\n        mstore(add(value, 192), abi_decode_uint40_fromMemory(add(headStart, 192)))\n        mstore(add(value, 224), abi_decode_uint16_fromMemory(add(headStart, 224)))\n        let _1 := 256\n        mstore(add(value, _1), abi_decode_address_fromMemory(add(headStart, _1)))\n        let _2 := 288\n        mstore(add(value, _2), abi_decode_address_fromMemory(add(headStart, _2)))\n        let _3 := 320\n        mstore(add(value, _3), abi_decode_address_fromMemory(add(headStart, _3)))\n        let _4 := 352\n        mstore(add(value, _4), abi_decode_address_fromMemory(add(headStart, _4)))\n        let _5 := 384\n        mstore(add(value, _5), abi_decode_uint128_fromMemory(add(headStart, _5)))\n        let _6 := 416\n        mstore(add(value, _6), abi_decode_uint128_fromMemory(add(headStart, _6)))\n        let _7 := 448\n        mstore(add(value, _7), abi_decode_uint128_fromMemory(add(headStart, _7)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ecf4a17f5db0088abc07cd49507b83388aed02a6cafb857599abb9d71405b158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"User has not provided this token\")\n        mstore(add(headStart, 96), \" for lending\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_8f009470db02257ff02c01bdb413b692757316aefb0675a644795add53648c46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"This contract has not enough tok\")\n        mstore(add(headStart, 96), \"ens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_rational_0_by_1__to_t_address_t_uint256_t_address_t_uint16__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Math: mulDiv overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xC0C24DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xD414C820 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xFA2DF414 EQ PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C62FA10 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x82899756 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x8D92FDF3 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x653 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x0 PUSH2 0x6AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 CALLER DUP4 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3DF437B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA3DF437B SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x31E SWAP1 DUP5 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x374 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A5 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x442 DUP2 PUSH2 0x6AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21AE0895 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x86B82254 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x531 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP2 DUP4 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 SWAP5 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF75F6029 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xF75F6029 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP5 POP SWAP1 SWAP3 POP PUSH2 0x63F SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x64F SWAP1 POP CALLER DUP4 PUSH2 0x97C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F742070726F7669646564207468697320746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x20666F72206C656E64696E67 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD SWAP3 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP6 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP1 SWAP4 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FB SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86E SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x895 PUSH2 0x87F DUP8 DUP7 PUSH2 0x1018 JUMP JUMPDEST DUP4 PUSH1 0x3 SLOAD PUSH2 0x3E8 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x8A6 DUP6 DUP9 PUSH2 0x3E8 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x950 SWAP1 DUP5 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x969 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP2 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320636F6E747261637420686173206E6F7420656E6F75676820746F6B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656E73 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x617BA037 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x617BA037 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xB18 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAF4 SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x64F SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST PUSH2 0x100 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBDD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC01 SWAP2 SWAP1 PUSH2 0xFEC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC12 DUP5 PUSH1 0x3 SLOAD DUP5 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC3F SWAP1 DUP5 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC58 SWAP2 SWAP1 PUSH2 0x1005 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0xC9E JUMPI DUP4 DUP3 DUP2 PUSH2 0xC94 JUMPI PUSH2 0xC94 PUSH2 0x102F JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xD4D JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6174683A206D756C446976206F766572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x430 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP6 NOT PUSH1 0x1 SWAP1 DUP2 ADD DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 DUP3 DUP7 SUB DUP2 SWAP1 DIV SWAP6 SWAP1 SWAP3 GT SWAP1 SWAP4 SUB PUSH1 0x0 DUP3 SWAP1 SUB SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x3 DUP5 MUL PUSH1 0x2 SWAP1 DUP2 XOR DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL SWAP1 SWAP2 SUB MUL MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD4D DUP2 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 MLOAD DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xE47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xE47 DUP2 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE99 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0xEA3 DUP5 DUP5 PUSH2 0xDD7 JUMP JUMPDEST DUP2 MSTORE PUSH2 0xEB1 PUSH1 0x20 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEC2 PUSH1 0x40 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xED3 PUSH1 0x60 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0xEE4 PUSH1 0x80 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xEF5 PUSH1 0xA0 DUP5 ADD PUSH2 0xE27 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xF06 PUSH1 0xC0 DUP5 ADD PUSH2 0xE4C JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xF17 PUSH1 0xE0 DUP5 ADD PUSH2 0xE61 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xF2A DUP2 DUP6 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0xF3C DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x140 PUSH2 0xF4E DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x160 PUSH2 0xF60 DUP5 DUP3 ADD PUSH2 0xE73 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x180 PUSH2 0xF72 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1A0 PUSH2 0xF84 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 PUSH2 0xF96 DUP5 DUP3 ADD PUSH2 0xE27 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0xFA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xCB DUP4 PUSH26 0x8F3DBFBAF99042CCB0426C73D7389E25100B4166A474842B2208 BLOCKHASH 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "672:3630:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3729:104;;;;;;;;;;-1:-1:-1;3729:104:8;;;;;:::i;:::-;-1:-1:-1;;;;;3811:15:8;3785:7;3811:15;;;:6;:15;;;;;;;3729:104;;;;548:25:9;;;536:2;521:18;3729:104:8;;;;;;;;1824:101:3;;;;;;;;;;;;;:::i;:::-;;3959:126:8;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;748:32:9;;;730:51;;718:2;703:18;3959:126:8;584:203:9;1819:316:8;;;;;;;;;;-1:-1:-1;1819:316:8;;;;;:::i;:::-;;:::i;1201:85:3:-;;;;;;;;;;-1:-1:-1;1247:7:3;1273:6;-1:-1:-1;;;;;1273:6:3;1201:85;;4141:124:8;;;;;;;;;;-1:-1:-1;4141:124:8;;;;;:::i;:::-;;:::i;3839:114::-;;;;;;;;;;-1:-1:-1;3839:114:8;;;;;:::i;:::-;-1:-1:-1;;;;;3926:20:8;3900:7;3926:20;;;:11;:20;;;;;;;3839:114;2074:198:3;;;;;;;;;;-1:-1:-1;2074:198:3;;;;;:::i;:::-;;:::i;1354:459:8:-;;;;;;;;;;-1:-1:-1;1354:459:8;;;;;:::i;:::-;;:::i;1824:101:3:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3959:126:8:-;4034:8;;4058:5;;4034:30;;-1:-1:-1;;;4034:30:8;;-1:-1:-1;;;;;4058:5:8;;;4034:30;;;730:51:9;4008:7:8;;4034:8;;;;;:23;;703:18:9;;4034:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;4027:51;;3959:126;:::o;1819:316::-;1879:19;1901:43;1920:10;1932;1901:17;:43::i;:::-;1962:21;;;1954:72;;-1:-1:-1;;;1954:72:8;;;;;4360:25:9;;;2014:10:8;4401:18:9;;;4394:60;1879:65:8;;-1:-1:-1;;;;;;1962:21:8;;;;1954:45;;4333:18:9;;1954:72:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2043:10:8;2036:18;;;;:6;:18;;;;;:33;;2058:11;;-1:-1:-1;2036:18:8;;-1:-1:-1;2036:33:8;;2058:11;;2036:33;:::i;:::-;;;;-1:-1:-1;;2086:5:8;;2079:49;;-1:-1:-1;;;2079:49:8;;2103:10;2079:49;;;4904:51:9;4971:18;;;4964:34;;;-1:-1:-1;;;;;2086:5:8;;;;2079:22;;4877:18:9;;2079:49:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1869:266;1819:316;:::o;4141:124::-;1094:13:3;:11;:13::i;:::-;4224:21:8::1;:34:::0;;-1:-1:-1;;;;;;4224:34:8::1;-1:-1:-1::0;;;;;4224:34:8;;;::::1;::::0;;;::::1;::::0;;4141:124::o;2074:198:3:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:3;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:3;;5493:2:9;2154:73:3::1;::::0;::::1;5475:21:9::0;5532:2;5512:18;;;5505:30;5571:34;5551:18;;;5544:62;-1:-1:-1;;;5622:18:9;;;5615:36;5668:19;;2154:73:3::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1354:459:8:-;1416:5;;1409:62;;-1:-1:-1;;;1409:62:8;;1436:10;1409:62;;;5938:34:9;1456:4:8;5988:18:9;;;5981:43;6040:18;;;6033:34;;;-1:-1:-1;;;;;1416:5:8;;;;1409:26;;5873:18:9;;1409:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1508:21:8;;;1500:55;;-1:-1:-1;;;1500:55:8;;;;;548:25:9;;;1481:16:8;;-1:-1:-1;;;;;1508:21:8;;;;1500:45;;521:18:9;;1500:55:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1481:74;-1:-1:-1;1565:18:8;1481:74;1565:18;;:::i;:::-;1600:5;;1615:21;;;1593:54;;-1:-1:-1;;;1593:54:8;;-1:-1:-1;;;;;1615:21:8;;;1593:54;;;4904:51:9;;;;4971:18;;;4964:34;;;1565:18:8;;-1:-1:-1;1600:5:8;;;1593:21;;4877:18:9;;1593:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1665:21:8;;;1657:64;;-1:-1:-1;;;1657:64:8;;;;;4360:25:9;;;1709:10:8;4401:18:9;;;4394:60;-1:-1:-1;;;;;1665:21:8;;1657:42;;4333:18:9;;1657:64:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1738:10:8;1731:18;;;;:6;:18;;;;;:28;;1753:6;;-1:-1:-1;1731:18:8;;-1:-1:-1;1731:28:8;;1753:6;;1731:28;:::i;:::-;;;;-1:-1:-1;1769:37:8;;-1:-1:-1;1786:10:8;1798:6;1769:15;:37::i;:::-;1399:414;1354:459;:::o;1359:130:3:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:3;719:10:5;1422:23:3;1414:68;;;;-1:-1:-1;;;1414:68:3;;6599:2:9;1414:68:3;;;6581:21:9;;;6618:18;;;6611:30;6677:34;6657:18;;;6650:62;6729:18;;1414:68:3;6397:356:9;2426:187:3;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:3;;;-1:-1:-1;;;;;;2534:17:3;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2923:800:8:-;-1:-1:-1;;;;;3030:20:8;;3004:7;3030:20;;;:11;:20;;;;;;3022:81;;;;-1:-1:-1;;;3022:81:8;;6960:2:9;3022:81:8;;;6942:21:9;6999:2;6979:18;;;6972:30;7038:34;7018:18;;;7011:62;-1:-1:-1;;;7089:18:9;;;7082:42;7141:19;;3022:81:8;6758:408:9;3022:81:8;-1:-1:-1;;;;;3141:20:8;;;3114:24;3141:20;;;:11;:20;;;;;;;3196:8;;3220:5;;3196:30;;-1:-1:-1;;;3196:30:8;;3220:5;;;3196:30;;;730:51:9;3141:20:8;;3196:8;;:23;;703:18:9;;3196:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3195:46;;;3276;;-1:-1:-1;;;3276:46:8;;3316:4;3276:46;;;730:51:9;3195:46:8;;-1:-1:-1;3251:22:8;;-1:-1:-1;;;;;3276:31:8;;;;;703:18:9;;3276:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3251:71;-1:-1:-1;3333:19:8;3355:92;3368:29;3387:10;3368:16;:29;:::i;:::-;3399:14;3415:24;;3442:4;3415:31;;;;:::i;:::-;3355:11;:92::i;:::-;3333:114;;3457:20;3480:48;3493:16;3511:10;3523:4;3480:11;:48::i;:::-;3539:8;;3557:5;;3539:52;;-1:-1:-1;;;3539:52:8;;-1:-1:-1;;;;;3557:5:8;;;3539:52;;;7584:34:9;7634:18;;;7627:34;;;3585:4:8;7677:18:9;;;7670:43;3457:71:8;;-1:-1:-1;3539:8:8;;:17;;7519:18:9;;3539:52:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3601:20:8;;;;;;:11;:20;;;;;:36;;3625:12;;3601:20;:36;;3625:12;;3601:36;:::i;:::-;;;;;;;;3675:12;3647:24;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;3705:11:8;;-1:-1:-1;;;;;;2923:800:8;;;;;:::o;2141:776::-;2233:5;;;2248:11;2226:42;;-1:-1:-1;;;2226:42:8;;-1:-1:-1;;;;;2248:11:8;;;2226:42;;;4904:51:9;4971:18;;;4964:34;;;2233:5:8;;;2226:21;;4877:18:9;;2226:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2217:92;;;;-1:-1:-1;;;2217:92:8;;7926:2:9;2217:92:8;;;7908:21:9;7965:2;7945:18;;;7938:30;8004:34;7984:18;;;7977:62;-1:-1:-1;;;8055:18:9;;;8048:33;8098:19;;2217:92:8;7724:399:9;2217:92:8;2319:8;;2335:5;;2319:48;;-1:-1:-1;;;2319:48:8;;-1:-1:-1;;;;;2335:5:8;;;2319:48;;;8404:34:9;8454:18;;;8447:34;;;2358:4:8;8497:18:9;;;8490:43;2319:8:8;8549:18:9;;;8542:47;2319:8:8;;;:15;;8338:19:9;;2319:48:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2383:24;;2411:1;2383:29;2378:532;;-1:-1:-1;;;;;2429:20:8;;;;;;:11;:20;;;;;:30;;2453:6;;2429:20;:30;;2453:6;;2429:30;:::i;:::-;;;;;;;;2501:6;2473:24;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;2378:532:8;;-1:-1:-1;2378:532:8;;2563:8;;2587:5;;2563:30;;-1:-1:-1;;;2563:30:8;;-1:-1:-1;;;;;2587:5:8;;;2563:30;;;730:51:9;2538:21:8;;2563:8;;;;;:23;;703:18:9;;2563:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2562:46;;;2647:48;;-1:-1:-1;;;2647:48:8;;2688:4;2647:48;;;730:51:9;2562:46:8;;-1:-1:-1;2622:22:8;;-1:-1:-1;;;;;2647:31:8;;;;;703:18:9;;2647:48:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2622:73;;2709:20;2732:63;2745:6;2753:24;;2779:14;2732:11;:63::i;:::-;-1:-1:-1;;;;;2809:20:8;;;;;;:11;:20;;;;;:36;;2709:86;;-1:-1:-1;2709:86:8;;2809:20;;;:36;;2709:86;;2809:36;:::i;:::-;;;;;;;;2887:12;2859:24;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2141:776:8;;:::o;1667:4213:6:-;1749:14;;;-1:-1:-1;;2286:1:6;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:6;;8934:2:9;2952:53:6;;;8916:21:9;8973:2;8953:18;;;8946:30;-1:-1:-1;;;8992:18:9;;;8985:51;9053:18;;2952:53:6;8732:345:9;2952:53:6;3261:17;3396:11;3393:1;3390;3383:25;3929:12;;3944:1;3929:16;;;3914:32;;4049:22;;;;;3557:21;;;4147:16;;;3510:20;;;;3499:32;;;3899:12;4294;;;4290:23;;;;4286:31;;;4406:12;;;;4397:21;;;;4755:1;:15;;4774:1;4754:21;;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;5821:15;;-1:-1:-1;;1667:4213:6;;;;;;:::o;14:131:9:-;-1:-1:-1;;;;;89:31:9;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;792:180::-;851:6;904:2;892:9;883:7;879:23;875:32;872:52;;;920:1;917;910:12;872:52;-1:-1:-1;943:23:9;;792:180;-1:-1:-1;792:180:9:o;977:344::-;1044:2;1038:9;1086:3;1074:16;;1120:18;1105:34;;1141:22;;;1102:62;1099:185;;;1206:10;1201:3;1197:20;1194:1;1187:31;1241:4;1238:1;1231:15;1269:4;1266:1;1259:15;1099:185;1300:2;1293:22;977:344;:::o;1326:523::-;1407:5;1455:4;1443:9;1438:3;1434:19;1430:30;1427:50;;;1473:1;1470;1463:12;1427:50;1506:2;1500:9;1548:4;1540:6;1536:17;1619:6;1607:10;1604:22;1583:18;1571:10;1568:34;1565:62;1562:185;;;1669:10;1664:3;1660:20;1657:1;1650:31;1704:4;1701:1;1694:15;1732:4;1729:1;1722:15;1562:185;1763:2;1756:22;1826:16;;1811:32;;-1:-1:-1;1796:6:9;1326:523;-1:-1:-1;1326:523:9:o;1854:192::-;1933:13;;1986:34;1975:46;;1965:57;;1955:85;;2036:1;2033;2026:12;1955:85;1854:192;;;:::o;2051:169::-;2129:13;;2182:12;2171:24;;2161:35;;2151:63;;2210:1;2207;2200:12;2225:163;2303:13;;2356:6;2345:18;;2335:29;;2325:57;;2378:1;2375;2368:12;2393:138;2472:13;;2494:31;2472:13;2494:31;:::i;2536:1645::-;2634:6;2687:3;2675:9;2666:7;2662:23;2658:33;2655:53;;;2704:1;2701;2694:12;2655:53;2730:17;;:::i;:::-;2770:72;2834:7;2823:9;2770:72;:::i;:::-;2763:5;2756:87;2875:49;2920:2;2909:9;2905:18;2875:49;:::i;:::-;2870:2;2863:5;2859:14;2852:73;2957:49;3002:2;2991:9;2987:18;2957:49;:::i;:::-;2952:2;2945:5;2941:14;2934:73;3039:49;3084:2;3073:9;3069:18;3039:49;:::i;:::-;3034:2;3027:5;3023:14;3016:73;3122:50;3167:3;3156:9;3152:19;3122:50;:::i;:::-;3116:3;3109:5;3105:15;3098:75;3206:50;3251:3;3240:9;3236:19;3206:50;:::i;:::-;3200:3;3193:5;3189:15;3182:75;3290:49;3334:3;3323:9;3319:19;3290:49;:::i;:::-;3284:3;3277:5;3273:15;3266:74;3373:49;3417:3;3406:9;3402:19;3373:49;:::i;:::-;3367:3;3360:5;3356:15;3349:74;3442:3;3477:49;3522:2;3511:9;3507:18;3477:49;:::i;:::-;3461:14;;;3454:73;3546:3;3581:49;3611:18;;;3581:49;:::i;:::-;3565:14;;;3558:73;3650:3;3685:49;3715:18;;;3685:49;:::i;:::-;3669:14;;;3662:73;3754:3;3789:49;3819:18;;;3789:49;:::i;:::-;3773:14;;;3766:73;3858:3;3893:49;3923:18;;;3893:49;:::i;:::-;3877:14;;;3870:73;3962:3;3997:49;4027:18;;;3997:49;:::i;:::-;3981:14;;;3974:73;4066:3;4101:49;4131:18;;;4101:49;:::i;:::-;4085:14;;;4078:73;4089:5;2536:1645;-1:-1:-1;;;2536:1645:9:o;4465:127::-;4526:10;4521:3;4517:20;4514:1;4507:31;4557:4;4554:1;4547:15;4581:4;4578:1;4571:15;4597:128;4664:9;;;4685:11;;;4682:37;;;4699:18;;:::i;5009:277::-;5076:6;5129:2;5117:9;5108:7;5104:23;5100:32;5097:52;;;5145:1;5142;5135:12;5097:52;5177:9;5171:16;5230:5;5223:13;5216:21;5209:5;5206:32;5196:60;;5252:1;5249;5242:12;6078:184;6148:6;6201:2;6189:9;6180:7;6176:23;6172:32;6169:52;;;6217:1;6214;6207:12;6169:52;-1:-1:-1;6240:16:9;;6078:184;-1:-1:-1;6078:184:9:o;6267:125::-;6332:9;;;6353:10;;;6350:36;;;6366:18;;:::i;7171:168::-;7244:9;;;7275;;7292:15;;;7286:22;;7272:37;7262:71;;7313:18;;:::i;8600:127::-;8661:10;8656:3;8652:20;8649:1;8642:31;8692:4;8689:1;8682:15;8716:4;8713:1;8706:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "843800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"assetsOf(address)": "2521",
								"changeAddressClaimContract(address)": "26751",
								"depositAsset(uint256)": "infinite",
								"getATokenAddress()": "infinite",
								"owner()": "2331",
								"renounceOwnership()": "infinite",
								"sharesLoansOf(address)": "2564",
								"transferOwnership(address)": "infinite",
								"withdrawAsset(uint256)": "infinite"
							},
							"internal": {
								"supplyLendToken(address,uint256)": "infinite",
								"withdrawLendToken(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 886,
									"end": 887,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 887,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 851,
									"end": 887,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 929,
									"end": 987,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 929,
									"end": 987,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 929,
									"end": 987,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 929,
									"end": 987,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 945,
									"end": 987,
									"name": "PUSH",
									"source": 8,
									"value": "F14F9596430931E177469715C591513308244E8F"
								},
								{
									"begin": 929,
									"end": 987,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 929,
									"end": 987,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 929,
									"end": 987,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1206,
									"end": 1248,
									"name": "PUSH",
									"source": 8,
									"value": "EB7A892BB04A8F836BDEEBBF60897A7AF1BF5D7F"
								},
								{
									"begin": 1161,
									"end": 1249,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1161,
									"end": 1249,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1249,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1249,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26B1D5F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1300,
									"name": "PUSH",
									"source": 8,
									"value": "26B1D5F"
								},
								{
									"begin": 1273,
									"end": 1300,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1206,
									"end": 1248,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "STATICCALL",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1273,
									"end": 1302,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1273,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1270,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1302,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1320,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1341,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "2634"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 4302,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5cb83798f3dbfbaf99042ccb0426c73d7389e25100b4166a474842b220840b564736f6c63430008120033",
									".code": [
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "C0C24DDD"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "D414C820"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "FA2DF414"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "2C62FA10"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "82899756"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "8D92FDF3"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 4302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3729,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3817,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3833,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3959,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 748,
											"end": 780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 748,
											"end": 780,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 730,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 718,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 787,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1819,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1819,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4141,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4141,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3839,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3937,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3953,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1354,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1354,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35EA6A75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4015,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4057,
											"name": "PUSH",
											"source": 8,
											"value": "35EA6A75"
										},
										{
											"begin": 4034,
											"end": 4057,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4034,
											"end": 4064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4034,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4078,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4034,
											"end": 4078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4078,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4078,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 4085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 1930,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1932,
											"end": 1942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1901,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1901,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3DF437B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1999,
											"name": "PUSH",
											"source": 8,
											"value": "A3DF437B"
										},
										{
											"begin": 1954,
											"end": 1999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1954,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2053,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2054,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2036,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2103,
											"end": 2113,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2079,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2079,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 2135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4141,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4224,
											"end": 4258,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4258,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4141,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5495,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 5534,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5535,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5571,
											"end": 5605,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5687,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5668,
											"end": 5687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5938,
											"end": 5972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6067,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1435,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1409,
											"end": 1435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1409,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1409,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21AE0895"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 548,
											"end": 573,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1545,
											"name": "PUSH",
											"source": 8,
											"value": "86B82254"
										},
										{
											"begin": 1500,
											"end": 1545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1500,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1500,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1481,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1565,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1636,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 1593,
											"end": 1614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1593,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1686,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1686,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F75F6029"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1686,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1699,
											"name": "PUSH",
											"source": 8,
											"value": "F75F6029"
										},
										{
											"begin": 1657,
											"end": 1699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1657,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1748,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1731,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1769,
											"end": 1806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1796,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1769,
											"end": 1806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1769,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6581,
											"end": 6602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6611,
											"end": 6641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6650,
											"end": 6712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6729,
											"end": 6747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6397,
											"end": 6753,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3041,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7001,
											"name": "PUSH",
											"source": 9,
											"value": "2C"
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 7002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7072,
											"name": "PUSH",
											"source": 9,
											"value": "5573657220686173206E6F742070726F7669646564207468697320746F6B656E"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7073,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20666F72206C656E64696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7141,
											"end": 7160,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7141,
											"end": 7160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6758,
											"end": 7166,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3022,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3204,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3196,
											"end": 3204,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35EA6A75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3161,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3204,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3219,
											"name": "PUSH",
											"source": 8,
											"value": "35EA6A75"
										},
										{
											"begin": 3196,
											"end": 3219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3196,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3241,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3195,
											"end": 3241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3241,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3276,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3276,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3368,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3368,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3413,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 8,
											"value": "3E8"
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3415,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3415,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3355,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3447,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3355,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3333,
											"end": 3447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3333,
											"end": 3447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3521,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3527,
											"name": "PUSH",
											"source": 8,
											"value": "3E8"
										},
										{
											"begin": 3480,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3480,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3528,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3480,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A4CA37B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7634,
											"end": 7652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7661,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3589,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7677,
											"end": 7695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7670,
											"end": 7713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3457,
											"end": 3528,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3528,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3556,
											"name": "PUSH",
											"source": 8,
											"value": "69328DEC"
										},
										{
											"begin": 3539,
											"end": 3556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3539,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3539,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3625,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3601,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3601,
											"end": 3637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3647,
											"end": 3671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3647,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3687,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3716,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2923,
											"end": 3723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2917,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2141,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2248,
											"end": 2259,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2259,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4964,
											"end": 4998,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2226,
											"end": 2247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2226,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2226,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 7928,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 7929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7965,
											"end": 7967,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7938,
											"end": 7968,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "PUSH",
											"source": 9,
											"value": "5468697320636F6E747261637420686173206E6F7420656E6F75676820746F6B"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8081,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 7724,
											"end": 8123,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2217,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "617BA037"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2340,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8438,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8481,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8447,
											"end": 8481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2362,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8533,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "PUSH",
											"source": 8,
											"value": "617BA037"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8338,
											"end": 8357,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8338,
											"end": 8357,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2383,
											"end": 2407,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2412,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2429,
											"end": 2459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2429,
											"end": 2459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2473,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2473,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2473,
											"end": 2507,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2378,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35EA6A75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2559,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "PUSH",
											"source": 8,
											"value": "35EA6A75"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2563,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2608,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2562,
											"end": 2608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 730,
											"end": 781,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2678,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2678,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2647,
											"end": 2678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 721,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 703,
											"end": 721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2647,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2647,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2753,
											"end": 2777,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2732,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2732,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2809,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2883,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2859,
											"end": 2883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2859,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2899,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2141,
											"end": 2917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2284,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2390,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2375,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2391,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2348,
											"end": 2391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2496,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2482,
											"end": 2850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2816,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2835,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2850,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2482,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2971,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2979,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8973,
											"end": 8975,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8953,
											"end": 8971,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8953,
											"end": 8971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8953,
											"end": 8971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6174683A206D756C446976206F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8992,
											"end": 9010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8985,
											"end": 9036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8732,
											"end": 9077,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2952,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3407,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3941,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3941,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3929,
											"end": 3945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3946,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4163,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3530,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4306,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4313,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4313,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4317,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4286,
											"end": 4317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4418,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4755,
											"end": 4770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "XOR",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5028,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5028,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5028,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5097,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5097,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5097,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5072,
											"end": 5097,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5097,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5167,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5167,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5167,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5237,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5307,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5286,
											"end": 5307,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5307,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5378,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5378,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5378,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5821,
											"end": 5836,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5821,
											"end": 5836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 5880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 792,
											"end": 972,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 792,
											"end": 972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 851,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 906,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 883,
											"end": 890,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 879,
											"end": 902,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 875,
											"end": 907,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 872,
											"end": 924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 872,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 872,
											"end": 924,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 920,
											"end": 921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 910,
											"end": 922,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 872,
											"end": 924,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 872,
											"end": 924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 943,
											"end": 966,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 792,
											"end": 972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 792,
											"end": 972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1321,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 977,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1047,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1086,
											"end": 1089,
											"name": "PUSH",
											"source": 9,
											"value": "1E0"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1120,
											"end": 1138,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1139,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1164,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1099,
											"end": 1284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1099,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1099,
											"end": 1284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1231,
											"end": 1246,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1266,
											"end": 1267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1099,
											"end": 1284,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1099,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1849,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 1326,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1453,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1460,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1477,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1427,
											"end": 1477,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1477,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1427,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1607,
											"end": 1617,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1604,
											"end": 1626,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1568,
											"end": 1602,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1627,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1747,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1562,
											"end": 1747,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1679,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1664,
											"end": 1667,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1660,
											"end": 1680,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1708,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1694,
											"end": 1709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1737,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1747,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1562,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1765,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1842,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1811,
											"end": 1843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1811,
											"end": 1843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1326,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1854,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1946,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1933,
											"end": 1946,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2020,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2021,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1955,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2220,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2051,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2142,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2182,
											"end": 2194,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2196,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2151,
											"end": 2214,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2212,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2225,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2316,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2362,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2363,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2325,
											"end": 2382,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2393,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2485,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2485,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2472,
											"end": 2485,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2494,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 4181,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2536,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2690,
											"name": "PUSH",
											"source": 9,
											"value": "1E0"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2685,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2691,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2708,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2655,
											"end": 2708,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2708,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2655,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2730,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2730,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2747,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2730,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2834,
											"end": 2841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2770,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2842,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2770,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 2843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2920,
											"end": 2922,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2875,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2875,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2957,
											"end": 3006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 3006,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2957,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 3007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3039,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3088,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3039,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3027,
											"end": 3032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3167,
											"end": 3170,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3122,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3122,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3109,
											"end": 3114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3251,
											"end": 3254,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3206,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3206,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3189,
											"end": 3204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3334,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3290,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3287,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3277,
											"end": 3282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3373,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3422,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3373,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3360,
											"end": 3365,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3349,
											"end": 3423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3522,
											"end": 3524,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3520,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3477,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3477,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3461,
											"end": 3475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3581,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3581,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3630,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3581,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3558,
											"end": 3631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3685,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3715,
											"end": 3733,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3685,
											"end": 3734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3734,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3685,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3735,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3757,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3789,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3789,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3838,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3789,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3839,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3861,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3893,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3893,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3942,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3893,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3870,
											"end": 3943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 9,
											"value": "1A0"
										},
										{
											"begin": 3997,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3997,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4046,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3997,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4066,
											"end": 4069,
											"name": "PUSH",
											"source": 9,
											"value": "1C0"
										},
										{
											"begin": 4101,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4131,
											"end": 4149,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4149,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4101,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4150,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4101,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 4181,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 4181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4592,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4465,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4536,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4517,
											"end": 4537,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4561,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4547,
											"end": 4562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4578,
											"end": 4579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4586,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4725,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4597,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4685,
											"end": 4696,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4699,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4699,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5286,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5009,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5076,
											"end": 5082,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5115,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5127,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5132,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5149,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5097,
											"end": 5149,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5147,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5097,
											"end": 5149,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 5097,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5238,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 5196,
											"end": 5256,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5250,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6262,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6078,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6203,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6187,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6176,
											"end": 6199,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6204,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6240,
											"end": 6256,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6078,
											"end": 6262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6267,
											"end": 6392,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6267,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6341,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6363,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6386,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6350,
											"end": 6386,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6366,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7339,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7171,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7253,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7292,
											"end": 7307,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7308,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7272,
											"end": 7309,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7262,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 7262,
											"end": 7333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 7313,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 7313,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8727,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8600,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8661,
											"end": 8671,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8652,
											"end": 8672,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8682,
											"end": 8697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8720,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/insurance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assetsOf(address)": "2c62fa10",
							"changeAddressClaimContract(address)": "c0c24ddd",
							"depositAsset(uint256)": "fa2df414",
							"getATokenAddress()": "82899756",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sharesLoansOf(address)": "d414c820",
							"transferOwnership(address)": "f2fde38b",
							"withdrawAsset(uint256)": "8d92fdf3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"assetsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"changeAddressClaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getATokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"sharesLoansOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/insurance.sol\":\"insurance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6\",\"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/insurance.sol\":{\"keccak256\":\"0xc15431d51e0f9922adeebacb61af429664891f7802beef67d2bebc6acbae64d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73fa7ab8f7e429235a1ba152ea4ba7dcfc103c0f6b54ee7945c01b7b33fef722\",\"dweb:/ipfs/QmY939StbLjzdJRNDxqZi2CDCYfdHzdh933KPKb4HwGrAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1207,
								"contract": "contracts/insurance.sol:insurance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2628,
								"contract": "contracts/insurance.sol:insurance",
								"label": "aaveAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2631,
								"contract": "contracts/insurance.sol:insurance",
								"label": "poolAave",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IPool)638"
							},
							{
								"astId": 2637,
								"contract": "contracts/insurance.sol:insurance",
								"label": "totalSharesLoansPerAsset",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2639,
								"contract": "contracts/insurance.sol:insurance",
								"label": "_addressClaimContract",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2642,
								"contract": "contracts/insurance.sol:insurance",
								"label": "_USDC",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2646,
								"contract": "contracts/insurance.sol:insurance",
								"label": "assets",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2650,
								"contract": "contracts/insurance.sol:insurance",
								"label": "sharesLoans",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IPool)638": {
								"encoding": "inplace",
								"label": "contract IPool",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							1199
						],
						"IPool": [
							638
						],
						"IPoolAddressesProvider": [
							847
						]
					},
					"id": 639,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "./IPoolAddressesProvider.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 848,
							"src": "62:68:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 847,
										"src": "70:22:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 1200,
							"src": "131:68:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1199,
										"src": "139:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "201:96:0",
								"text": " @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."
							},
							"fullyImplemented": false,
							"id": 638,
							"linearizedBaseContracts": [
								638
							],
							"name": "IPool",
							"nameLocation": "308:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "318:349:0",
										"text": " @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"
									},
									"eventSelector": "f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0",
									"id": 19,
									"name": "MintUnbacked",
									"nameLocation": "676:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "694:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "723:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "757:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "741:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "781:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "773:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "808:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "793:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 16,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:136:0"
									},
									"src": "670:155:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "829:257:0",
										"text": " @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"
									},
									"eventSelector": "281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759",
									"id": 30,
									"name": "BackUnbacked",
									"nameLocation": "1095:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1124:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1108:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "backer",
												"nameLocation": "1149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1133:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1165:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1157:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1181:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1173:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:78:0"
									},
									"src": "1089:97:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1190:324:0",
										"text": " @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"
									},
									"eventSelector": "2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61",
									"id": 43,
									"name": "Supply",
									"nameLocation": "1523:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1535:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1598:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1582:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "1649:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1634:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 40,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:136:0"
									},
									"src": "1517:149:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1670:292:0",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 54,
									"name": "Withdraw",
									"nameLocation": "1971:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1980:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2021:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2005:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2043:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2027:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2055:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2047:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:83:0"
									},
									"src": "1965:98:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2067:628:0",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"
									},
									"eventSelector": "b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0",
									"id": 72,
									"name": "Borrow",
									"nameLocation": "2704:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2716:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2753:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2745:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "2779:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2763:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2795:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "2842:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2815:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 65,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 64,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"2815:9:0",
															"2825:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "2815:26:0"
													},
													"referencedDeclaration": 903,
													"src": "2815:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "2872:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2864:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "2903:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2888:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 69,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:209:0"
									},
									"src": "2698:222:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2924:425:0",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"
									},
									"eventSelector": "a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051",
									"id": 85,
									"name": "Repay",
									"nameLocation": "3358:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3369:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3398:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "3440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3424:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3461:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3453:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "useATokens",
												"nameLocation": "3478:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:129:0"
									},
									"src": "3352:141:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3497:306:0",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"eventSelector": "7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481",
									"id": 95,
									"name": "SwapBorrowRateMode",
									"nameLocation": "3812:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3836:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3881:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3865:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "3918:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3891:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 92,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 91,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"3891:9:0",
															"3901:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "3891:26:0"
													},
													"referencedDeclaration": 903,
													"src": "3891:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:108:0"
									},
									"src": "3806:133:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3943:234:0",
										"text": " @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"
									},
									"eventSelector": "aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5",
									"id": 102,
									"name": "IsolationModeTotalDebtUpdated",
									"nameLocation": "4186:29:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4216:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDebt",
												"nameLocation": "4247:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4239:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:42:0"
									},
									"src": "4180:78:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4262:164:0",
										"text": " @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"
									},
									"eventSelector": "d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84",
									"id": 109,
									"name": "UserEModeSet",
									"nameLocation": "4435:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4464:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4448:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": false,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "4476:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "4470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 106,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:40:0"
									},
									"src": "4429:59:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "4492:207:0",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 116,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "4708:30:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "4755:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4739:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "4764:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:47:0"
									},
									"src": "4702:84:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "4790:207:0",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 123,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "5006:31:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5038:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5063:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5037:47:0"
									},
									"src": "5000:85:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5089:212:0",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 130,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "5310:25:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5336:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "5361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:47:0"
									},
									"src": "5304:79:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "5387:482:0",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"
									},
									"eventSelector": "efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0",
									"id": 148,
									"name": "FlashLoan",
									"nameLocation": "5878:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5909:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5893:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"indexed": false,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "5929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5921:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "5960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5944:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5979:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "6018:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5991:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 140,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"5991:9:0",
															"6001:16:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 903,
														"src": "5991:26:0"
													},
													"referencedDeclaration": 903,
													"src": "5991:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$903",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "6048:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "6040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "6076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "6061:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 145,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:205:0"
									},
									"src": "5872:221:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "6097:749:0",
										"text": " @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 165,
									"name": "LiquidationCall",
									"nameLocation": "6855:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "6892:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6876:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "6929:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6913:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6960:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6944:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "6978:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6970:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "7003:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6995:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "7043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "7035:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "7064:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "7059:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7059:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:211:0"
									},
									"src": "6849:233:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "7086:421:0",
										"text": " @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 180,
									"name": "ReserveDataUpdated",
									"nameLocation": "7516:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7540:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "7577:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7569:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "7604:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7596:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "7634:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7626:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "7666:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7658:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "7694:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "7686:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7534:183:0"
									},
									"src": "7510:208:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "7722:211:0",
										"text": " @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"
									},
									"eventSelector": "bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de",
									"id": 187,
									"name": "MintedToTreasury",
									"nameLocation": "7942:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7959:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountMinted",
												"nameLocation": "7992:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "7984:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7958:47:0"
									},
									"src": "7936:70:0"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "8010:428:0",
										"text": " @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "69a933a5",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUnbacked",
									"nameLocation": "8450:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8476:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8468:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8487:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "8515:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "8538:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8531:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 195,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8462:92:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8563:0:0"
									},
									"scope": 638,
									"src": "8441:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "8568:259:0",
										"text": " @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"
									},
									"functionSelector": "d65dc7a1",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "backUnbacked",
									"nameLocation": "8839:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8860:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "8891:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8883:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8851:44:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "8914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8913:9:0"
									},
									"scope": 638,
									"src": "8830:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "8927:712:0",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "617ba037",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supply",
									"nameLocation": "9651:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9681:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9673:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9697:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9689:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9716:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "9709:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 219,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9657:72:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:0"
									},
									"scope": 638,
									"src": "9642:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "9743:962:0",
										"text": " @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"
									},
									"functionSelector": "02c205f0",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyWithPermit",
									"nameLocation": "10717:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10786:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10778:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "10809:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10802:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 231,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "10835:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10827:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "10855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10849:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 235,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "10876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "10897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "10889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10733:175:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10917:0:0"
									},
									"scope": 638,
									"src": "10708:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "10922:671:0",
										"text": " @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"
									},
									"functionSelector": "69328dec",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11605:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11637:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11629:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11653:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11645:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11613:43:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "11675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11674:9:0"
									},
									"scope": 638,
									"src": "11596:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "11688:1198:0",
										"text": " @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"
									},
									"functionSelector": "a415bcad",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "12898:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "12918:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "12957:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12949:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "12986:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "12979:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 263,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "13012:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "13004:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12904:122:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:0"
									},
									"scope": 638,
									"src": "12889:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "13040:873:0",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"
									},
									"functionSelector": "573ade81",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "13925:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "13944:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13936:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13963:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13955:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "13983:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "13975:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14013:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "14005:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13930:97:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "14046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14045:9:0"
									},
									"scope": 638,
									"src": "13916:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "14059:1085:0",
										"text": " @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"
									},
									"functionSelector": "ee3e210b",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithPermit",
									"nameLocation": "15156:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15185:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15177:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15204:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "15224:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15216:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "15254:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15246:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "15278:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15270:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "15298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 295,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15292:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "15319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 297,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "15340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15171:180:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "15370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15369:9:0"
									},
									"scope": 638,
									"src": "15147:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "15383:779:0",
										"text": " @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"
									},
									"functionSelector": "2dad97d4",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithATokens",
									"nameLocation": "16174:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16223:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16243:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16235:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16190:73:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16281:9:0"
									},
									"scope": 638,
									"src": "16165:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "16295:288:0",
										"text": " @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"functionSelector": "94ba89a2",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "16595:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "16614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16637:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "16629:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16613:41:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16663:0:0"
									},
									"scope": 638,
									"src": "16586:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "16668:553:0",
										"text": " @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"
									},
									"functionSelector": "cd112382",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "17233:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "17259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "17274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17258:29:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17296:0:0"
									},
									"scope": 638,
									"src": "17224:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "17301:260:0",
										"text": " @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"
									},
									"functionSelector": "5a3b74b9",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "17573:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17611:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "17603:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "17623:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "17618:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17602:37:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17648:0:0"
									},
									"scope": 638,
									"src": "17564:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "17653:860:0",
										"text": " @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"functionSelector": "00a718a9",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "18525:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "18554:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18546:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "18583:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18575:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "18606:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "18624:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18616:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "18646:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "18641:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18641:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18540:123:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18672:0:0"
									},
									"scope": 638,
									"src": "18516:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "18677:1407:0",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "ab9c4b5d",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "20096:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "20119:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20111:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "20159:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20140:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 359,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20140:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 360,
													"nodeType": "ArrayTypeName",
													"src": "20140:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "20190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20171:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 363,
													"nodeType": "ArrayTypeName",
													"src": "20171:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "interestRateModes",
												"nameLocation": "20222:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20203:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "20203:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "20253:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20245:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "20284:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20269:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20269:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "20303:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "20296:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 372,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20105:214:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20328:0:0"
									},
									"scope": 638,
									"src": "20087:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "20333:902:0",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "42b0b77c",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanSimple",
									"nameLocation": "21247:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "21276:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21268:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "21305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21324:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "21351:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21336:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "21370:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "21363:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 386,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21262:124:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21395:0:0"
									},
									"scope": 638,
									"src": "21238:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "21400:630:0",
										"text": " @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"
									},
									"functionSelector": "bf92857c",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "22042:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "22074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22066:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:22:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "totalCollateralBase",
												"nameLocation": "22133:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22125:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "totalDebtBase",
												"nameLocation": "22168:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22160:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "availableBorrowsBase",
												"nameLocation": "22197:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22189:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "22233:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22225:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "22276:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22268:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "22295:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "22287:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:196:0"
									},
									"scope": 638,
									"src": "22033:281:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "22318:645:0",
										"text": " @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "7a708e92",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "22975:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "22992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "23019:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23011:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "23046:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23038:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "23077:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23069:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "23110:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "23102:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22986:155:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23150:0:0"
									},
									"scope": 638,
									"src": "22966:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "23155:163:0",
										"text": " @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"
									},
									"functionSelector": "63c9b860",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropReserve",
									"nameLocation": "23330:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "23342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23341:15:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23365:0:0"
									},
									"scope": 638,
									"src": "23321:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "23370:290:0",
										"text": " @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "1d2118f9",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "23672:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23723:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "23715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "23742:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "23734:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23734:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23709:56:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23774:0:0"
									},
									"scope": 638,
									"src": "23663:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "23779:259:0",
										"text": " @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"
									},
									"functionSelector": "f51e435b",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "24050:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "24072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "24134:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "24091:56:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_calldata_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24091:9:0",
															"24101:23:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 884,
														"src": "24091:33:0"
													},
													"referencedDeclaration": 884,
													"src": "24091:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24066:85:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24160:0:0"
									},
									"scope": 638,
									"src": "24041:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "24165:178:0",
										"text": " @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"
									},
									"functionSelector": "c44b11f7",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "24355:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "24377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24371:23:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "24418:40:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24418:9:0",
															"24428:23:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 884,
														"src": "24418:33:0"
													},
													"referencedDeclaration": 884,
													"src": "24418:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24417:42:0"
									},
									"scope": 638,
									"src": "24346:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "24464:161:0",
										"text": " @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"
									},
									"functionSelector": "4417a583",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "24637:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24671:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "24663:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24657:22:0"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "24703:37:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 460,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 459,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"24703:9:0",
															"24713:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "24703:30:0"
													},
													"referencedDeclaration": 888,
													"src": "24703:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24702:39:0"
									},
									"scope": 638,
									"src": "24628:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "24746:181:0",
										"text": " @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "24939:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "24966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24965:15:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "25004:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25003:9:0"
									},
									"scope": 638,
									"src": "24930:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "25017:805:0",
										"text": " @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "25834:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "25875:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "25867:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25866:15:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "25905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25904:9:0"
									},
									"scope": 638,
									"src": "25825:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "25918:203:0",
										"text": " @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"
									},
									"functionSelector": "35ea6a75",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "26133:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "26148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26147:15:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "26186:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 484,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"26186:9:0",
															"26196:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "26186:21:0"
													},
													"referencedDeclaration": 881,
													"src": "26186:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$881_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26185:30:0"
									},
									"scope": 638,
									"src": "26124:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "26220:537:0",
										"text": " @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"
									},
									"functionSelector": "d5ed3933",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "26769:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "balanceFromBefore",
												"nameLocation": "26872:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26864:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "26903:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "26895:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26785:137:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26931:0:0"
									},
									"scope": 638,
									"src": "26760:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "26936:223:0",
										"text": " @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"
									},
									"functionSelector": "d1946dbc",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "27171:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27186:2:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "27212:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 507,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27212:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 508,
													"nodeType": "ArrayTypeName",
													"src": "27212:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27211:18:0"
									},
									"scope": 638,
									"src": "27162:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "27234:285:0",
										"text": " @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"
									},
									"functionSelector": "52751797",
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveAddressById",
									"nameLocation": "27531:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "27560:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "27553:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 513,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27553:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27552:11:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "27587:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27586:9:0"
									},
									"scope": 638,
									"src": "27522:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "27600:137:0",
										"text": " @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"
									},
									"functionSelector": "0542975c",
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "27749:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27767:2:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "27793:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 522,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"27793:22:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "27793:22:0"
													},
													"referencedDeclaration": 847,
													"src": "27793:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27792:24:0"
									},
									"scope": 638,
									"src": "27740:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "27821:147:0",
										"text": " @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"
									},
									"functionSelector": "3036b439",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBridgeProtocolFee",
									"nameLocation": "27980:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "bridgeProtocolFee",
												"nameLocation": "28012:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "28004:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28003:27:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28039:0:0"
									},
									"scope": 638,
									"src": "27971:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "28044:650:0",
										"text": " @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"
									},
									"functionSelector": "bcb6e522",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateFlashloanPremiums",
									"nameLocation": "28706:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "flashLoanPremiumTotal",
												"nameLocation": "28743:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "28735:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 534,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "flashLoanPremiumToProtocol",
												"nameLocation": "28778:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "28770:34:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 536,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28729:79:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28817:0:0"
									},
									"scope": 638,
									"src": "28697:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "28822:331:0",
										"text": " @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"
									},
									"functionSelector": "d579ea7d",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureEModeCategory",
									"nameLocation": "29165:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29194:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "29188:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 542,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29188:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "config",
												"nameLocation": "29229:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "29198:37:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$899_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29198:9:0",
															"29208:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 899,
														"src": "29198:23:0"
													},
													"referencedDeclaration": 899,
													"src": "29198:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$899_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29187:49:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29245:0:0"
									},
									"scope": 638,
									"src": "29156:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "29250:150:0",
										"text": " @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"
									},
									"functionSelector": "6c6f6ae1",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEModeCategoryData",
									"nameLocation": "29412:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29439:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "29433:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 551,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29433:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29432:10:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "29466:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$899_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 555,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 554,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29466:9:0",
															"29476:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 899,
														"src": "29466:23:0"
													},
													"referencedDeclaration": 899,
													"src": "29466:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$899_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:32:0"
									},
									"scope": 638,
									"src": "29403:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "29502:111:0",
										"text": " @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"
									},
									"functionSelector": "28530a47",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserEMode",
									"nameLocation": "29625:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "29644:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "29638:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 560,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29637:18:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29664:0:0"
									},
									"scope": 638,
									"src": "29616:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "29669:125:0",
										"text": " @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"
									},
									"functionSelector": "eddf1b79",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserEMode",
									"nameLocation": "29806:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "29819:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29818:14:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "29856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29855:9:0"
									},
									"scope": 638,
									"src": "29797:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "29869:236:0",
										"text": " @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"
									},
									"functionSelector": "e43e88a1",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resetIsolationModeTotalDebt",
									"nameLocation": "30117:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "30153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "30145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30144:15:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30168:0:0"
									},
									"scope": 638,
									"src": "30108:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "30173:191:0",
										"text": " @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"
									},
									"functionSelector": "e82fec2f",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
									"nameLocation": "30376:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30411:2:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "30437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30436:9:0"
									},
									"scope": 638,
									"src": "30367:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "30450:100:0",
										"text": " @notice Returns the total fee on flash loans\n @return The total fee on flashloans"
									},
									"functionSelector": "074b2e43",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TOTAL",
									"nameLocation": "30562:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30585:2:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "30611:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 587,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "30611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30610:9:0"
									},
									"scope": 638,
									"src": "30553:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "30624:133:0",
										"text": " @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"
									},
									"functionSelector": "272d9072",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BRIDGE_PROTOCOL_FEE",
									"nameLocation": "30769:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30788:2:0"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "30814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30813:9:0"
									},
									"scope": 638,
									"src": "30760:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "30827:139:0",
										"text": " @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"
									},
									"functionSelector": "6a99c036",
									"id": 602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
									"nameLocation": "30978:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31007:2:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "31033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 599,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:9:0"
									},
									"scope": 638,
									"src": "30969:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "31046:151:0",
										"text": " @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"
									},
									"functionSelector": "f8119d51",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_NUMBER_RESERVES",
									"nameLocation": "31209:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31228:2:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "31254:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 605,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31254:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31253:8:0"
									},
									"scope": 638,
									"src": "31200:62:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "31266:196:0",
										"text": " @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"
									},
									"functionSelector": "9cd19996",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "31474:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "31508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "31489:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 610,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31489:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 611,
													"nodeType": "ArrayTypeName",
													"src": "31489:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31488:27:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31524:0:0"
									},
									"scope": 638,
									"src": "31465:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "31529:211:0",
										"text": " @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"
									},
									"functionSelector": "cea9d26f",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rescueTokens",
									"nameLocation": "31752:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31788:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31780:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31800:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "31792:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31764:43:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31816:0:0"
									},
									"scope": 638,
									"src": "31743:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "31821:768:0",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "e8eda9df",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "32601:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "32617:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32609:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32632:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32624:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "32648:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32640:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "32667:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "32660:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 633,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "32660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32608:72:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32689:0:0"
									},
									"scope": 638,
									"src": "32592:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 639,
							"src": "298:32394:0",
							"usedErrors": []
						}
					],
					"src": "37:32656:0"
				},
				"id": 0
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
					"exportedSymbols": {
						"IPoolAddressesProvider": [
							847
						]
					},
					"id": 848,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 641,
								"nodeType": "StructuredDocumentation",
								"src": "62:126:1",
								"text": " @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."
							},
							"fullyImplemented": false,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "IPoolAddressesProvider",
							"nameLocation": "199:22:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "226:164:1",
										"text": " @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"
									},
									"eventSelector": "e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823",
									"id": 648,
									"name": "MarketIdSet",
									"nameLocation": "399:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldMarketId",
												"nameLocation": "426:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "411:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "454:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "439:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "439:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:56:1"
									},
									"src": "393:74:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "471:155:1",
										"text": " @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"
									},
									"eventSelector": "90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627",
									"id": 655,
									"name": "PoolUpdated",
									"nameLocation": "635:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "663:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "647:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "691:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "675:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:56:1"
									},
									"src": "629:74:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "707:192:1",
										"text": " @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"
									},
									"eventSelector": "8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465",
									"id": 662,
									"name": "PoolConfiguratorUpdated",
									"nameLocation": "908:23:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "948:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "932:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "976:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "960:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:56:1"
									},
									"src": "902:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "992:177:1",
										"text": " @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"
									},
									"eventSelector": "56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd",
									"id": 669,
									"name": "PriceOracleUpdated",
									"nameLocation": "1178:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1213:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1197:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1241:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "1225:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:56:1"
									},
									"src": "1172:81:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1257:174:1",
										"text": " @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"
									},
									"eventSelector": "b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507",
									"id": 676,
									"name": "ACLManagerUpdated",
									"nameLocation": "1440:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1474:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1458:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1502:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1486:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:56:1"
									},
									"src": "1434:80:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "1518:168:1",
										"text": " @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"
									},
									"eventSelector": "e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b",
									"id": 683,
									"name": "ACLAdminUpdated",
									"nameLocation": "1695:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1727:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1711:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1755:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1739:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:56:1"
									},
									"src": "1689:78:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1771:202:1",
										"text": " @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"
									},
									"eventSelector": "5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7",
									"id": 690,
									"name": "PriceOracleSentinelUpdated",
									"nameLocation": "1982:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2025:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2009:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2053:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2037:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:56:1"
									},
									"src": "1976:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2069:193:1",
										"text": " @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"
									},
									"eventSelector": "c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d",
									"id": 697,
									"name": "PoolDataProviderUpdated",
									"nameLocation": "2271:23:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2311:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2295:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2339:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "2323:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:56:1"
									},
									"src": "2265:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "2355:243:1",
										"text": " @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"
									},
									"eventSelector": "4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478",
									"id": 706,
									"name": "ProxyCreated",
									"nameLocation": "2607:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2641:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2625:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "2665:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2649:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementationAddress",
												"nameLocation": "2699:21:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2683:37:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:105:1"
									},
									"src": "2601:124:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "2729:238:1",
										"text": " @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"
									},
									"eventSelector": "9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7",
									"id": 715,
									"name": "AddressSet",
									"nameLocation": "2976:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3003:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2987:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 708,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "3023:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3007:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "3051:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "3035:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:76:1"
									},
									"src": "2970:93:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "3067:367:1",
										"text": " @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"
									},
									"eventSelector": "3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c",
									"id": 726,
									"name": "AddressSetAsProxy",
									"nameLocation": "3443:17:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3482:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3466:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "3506:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3490:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldImplementationAddress",
												"nameLocation": "3532:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3524:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "3578:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "3562:40:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:146:1"
									},
									"src": "3437:170:1"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "3611:117:1",
										"text": " @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"
									},
									"functionSelector": "568ef470",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "3740:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3751:2:1"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3777:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3777:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:15:1"
									},
									"scope": 847,
									"src": "3731:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3796:252:1",
										"text": " @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"
									},
									"functionSelector": "f67b1847",
									"id": 738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "4060:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "4088:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "4072:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4072:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:29:1"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4109:0:1"
									},
									"scope": 847,
									"src": "4051:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "4114:306:1",
										"text": " @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"
									},
									"functionSelector": "21f8a721",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "4432:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:12:1"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "4478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:1"
									},
									"scope": 847,
									"src": "4423:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "4491:485:1",
										"text": " @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"
									},
									"functionSelector": "5dcc528c",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "4988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5014:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "5006:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5006:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "5026:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "5018:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5005:46:1"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5060:0:1"
									},
									"scope": 847,
									"src": "4979:82:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "5065:244:1",
										"text": " @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"
									},
									"functionSelector": "ca446dd9",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "5321:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5340:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5332:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "5352:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5344:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5331:32:1"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5372:0:1"
									},
									"scope": 847,
									"src": "5312:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "5377:97:1",
										"text": " @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"
									},
									"functionSelector": "026b1d5f",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "5486:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:2:1"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5519:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5518:9:1"
									},
									"scope": 847,
									"src": "5477:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "5532:224:1",
										"text": " @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"
									},
									"functionSelector": "a1564406",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolImpl",
									"nameLocation": "5768:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "newPoolImpl",
												"nameLocation": "5788:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5780:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:21:1"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:1"
									},
									"scope": 847,
									"src": "5759:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "5814:121:1",
										"text": " @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"
									},
									"functionSelector": "631adfca",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolConfigurator",
									"nameLocation": "5947:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5966:2:1"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "5992:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:9:1"
									},
									"scope": 847,
									"src": "5938:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "6005:272:1",
										"text": " @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"
									},
									"functionSelector": "e4ca28b7",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolConfiguratorImpl",
									"nameLocation": "6289:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "newPoolConfiguratorImpl",
												"nameLocation": "6321:23:1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6313:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:33:1"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6354:0:1"
									},
									"scope": 847,
									"src": "6280:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6359:107:1",
										"text": " @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"
									},
									"functionSelector": "fca513a8",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "6478:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:2:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:9:1"
									},
									"scope": 847,
									"src": "6469:58:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "6531:125:1",
										"text": " @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"
									},
									"functionSelector": "530e784f",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "6668:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "newPriceOracle",
												"nameLocation": "6691:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "6683:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:24:1"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6715:0:1"
									},
									"scope": 847,
									"src": "6659:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "6720:105:1",
										"text": " @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"
									},
									"functionSelector": "707cd716",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLManager",
									"nameLocation": "6837:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:2:1"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6876:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:9:1"
									},
									"scope": 847,
									"src": "6828:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "6889:122:1",
										"text": " @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"
									},
									"functionSelector": "ed301ca9",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLManager",
									"nameLocation": "7023:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "newAclManager",
												"nameLocation": "7045:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "7037:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7036:23:1"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7068:0:1"
									},
									"scope": 847,
									"src": "7014:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "7073:102:1",
										"text": " @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"
									},
									"functionSelector": "0e67178c",
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLAdmin",
									"nameLocation": "7187:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7198:2:1"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "7224:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7224:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7223:9:1"
									},
									"scope": 847,
									"src": "7178:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "7237:117:1",
										"text": " @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"
									},
									"functionSelector": "76d84ffc",
									"id": 822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLAdmin",
									"nameLocation": "7366:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "newAclAdmin",
												"nameLocation": "7386:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "7378:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7377:21:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7407:0:1"
									},
									"scope": 847,
									"src": "7357:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "7412:124:1",
										"text": " @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"
									},
									"functionSelector": "5eb88d3d",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracleSentinel",
									"nameLocation": "7548:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7570:2:1"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "7596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7595:9:1"
									},
									"scope": 847,
									"src": "7539:66:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "7609:150:1",
										"text": " @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"
									},
									"functionSelector": "74944cec",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracleSentinel",
									"nameLocation": "7771:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "newPriceOracleSentinel",
												"nameLocation": "7802:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "7794:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:32:1"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7834:0:1"
									},
									"scope": 847,
									"src": "7762:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "7839:109:1",
										"text": " @notice Returns the address of the data provider.\n @return The address of the DataProvider"
									},
									"functionSelector": "e860accb",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDataProvider",
									"nameLocation": "7960:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:2:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8005:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8004:9:1"
									},
									"scope": 847,
									"src": "7951:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "8018:128:1",
										"text": " @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"
									},
									"functionSelector": "e44e9ed1",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolDataProvider",
									"nameLocation": "8158:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "newDataProvider",
												"nameLocation": "8186:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8178:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:25:1"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8211:0:1"
									},
									"scope": 847,
									"src": "8149:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 848,
							"src": "189:8025:1",
							"usedErrors": []
						}
					],
					"src": "37:8178:1"
				},
				"id": 1
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							1199
						]
					},
					"id": 1200,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1199,
							"linearizedBaseContracts": [
								1199
							],
							"name": "DataTypes",
							"nameLocation": "70:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 881,
									"members": [
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "172:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "148:37:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 851,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 850,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"148:23:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 884,
													"src": "148:23:2"
												},
												"referencedDeclaration": 884,
												"src": "148:23:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "243:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "235:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 853,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "235:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 856,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "319:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "311:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 855,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "399:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "391:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 857,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "489:25:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "481:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 859,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "481:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "583:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "575:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 861,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "650:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "643:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 863,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "643:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "770:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "763:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 865,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "763:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "807:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "799:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 867,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "799:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "864:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "856:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 869,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "932:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "924:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 871,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "924:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "1014:27:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1006:35:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 873,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1006:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 876,
											"mutability": "mutable",
											"name": "accruedToTreasury",
											"nameLocation": "1098:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1090:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 875,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 878,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "1204:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1196:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 877,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1196:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "isolationModeTotalDebt",
											"nameLocation": "1299:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "1291:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 879,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1291:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "91:11:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "84:1242:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 884,
									"members": [
										{
											"constant": false,
											"id": 883,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2212:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 884,
											"src": "2204:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 882,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2204:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1337:23:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "1330:891:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 888,
									"members": [
										{
											"constant": false,
											"id": 887,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2530:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 888,
											"src": "2522:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 886,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2522:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "2232:20:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2225:314:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.EModeCategory",
									"id": 899,
									"members": [
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "ltv",
											"nameLocation": "2647:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2640:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 889,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2640:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 892,
											"mutability": "mutable",
											"name": "liquidationThreshold",
											"nameLocation": "2663:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2656:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 891,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2656:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 894,
											"mutability": "mutable",
											"name": "liquidationBonus",
											"nameLocation": "2696:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2689:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 893,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2689:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 896,
											"mutability": "mutable",
											"name": "priceSource",
											"nameLocation": "2837:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2829:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 895,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2829:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 898,
											"mutability": "mutable",
											"name": "label",
											"nameLocation": "2861:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 899,
											"src": "2854:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 897,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2854:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EModeCategory",
									"nameLocation": "2550:13:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2543:328:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 903,
									"members": [
										{
											"id": 900,
											"name": "NONE",
											"nameLocation": "2898:4:2",
											"nodeType": "EnumValue",
											"src": "2898:4:2"
										},
										{
											"id": 901,
											"name": "STABLE",
											"nameLocation": "2904:6:2",
											"nodeType": "EnumValue",
											"src": "2904:6:2"
										},
										{
											"id": 902,
											"name": "VARIABLE",
											"nameLocation": "2912:8:2",
											"nodeType": "EnumValue",
											"src": "2912:8:2"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "2880:16:2",
									"nodeType": "EnumDefinition",
									"src": "2875:46:2"
								},
								{
									"canonicalName": "DataTypes.ReserveCache",
									"id": 945,
									"members": [
										{
											"constant": false,
											"id": 905,
											"mutability": "mutable",
											"name": "currScaledVariableDebt",
											"nameLocation": "2959:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "2951:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2951:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 907,
											"mutability": "mutable",
											"name": "nextScaledVariableDebt",
											"nameLocation": "2995:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "2987:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 906,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2987:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 909,
											"mutability": "mutable",
											"name": "currPrincipalStableDebt",
											"nameLocation": "3031:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3023:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 908,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3023:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 911,
											"mutability": "mutable",
											"name": "currAvgStableBorrowRate",
											"nameLocation": "3068:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3060:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 910,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3060:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 913,
											"mutability": "mutable",
											"name": "currTotalStableDebt",
											"nameLocation": "3105:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3097:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3097:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 915,
											"mutability": "mutable",
											"name": "nextAvgStableBorrowRate",
											"nameLocation": "3138:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3130:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 914,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3130:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 917,
											"mutability": "mutable",
											"name": "nextTotalStableDebt",
											"nameLocation": "3175:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3167:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 916,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3167:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 919,
											"mutability": "mutable",
											"name": "currLiquidityIndex",
											"nameLocation": "3208:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3200:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3200:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 921,
											"mutability": "mutable",
											"name": "nextLiquidityIndex",
											"nameLocation": "3240:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3232:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3232:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 923,
											"mutability": "mutable",
											"name": "currVariableBorrowIndex",
											"nameLocation": "3272:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3264:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 922,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3264:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 925,
											"mutability": "mutable",
											"name": "nextVariableBorrowIndex",
											"nameLocation": "3309:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3301:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 924,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3301:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 927,
											"mutability": "mutable",
											"name": "currLiquidityRate",
											"nameLocation": "3346:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3338:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 926,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3338:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 929,
											"mutability": "mutable",
											"name": "currVariableBorrowRate",
											"nameLocation": "3377:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3369:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3369:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 931,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "3413:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3405:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 930,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3405:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 934,
											"mutability": "mutable",
											"name": "reserveConfiguration",
											"nameLocation": "3456:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3432:44:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 933,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 932,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"3432:23:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 884,
													"src": "3432:23:2"
												},
												"referencedDeclaration": 884,
												"src": "3432:23:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$884_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 936,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "3490:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3482:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 935,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3482:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "3517:22:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3509:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 937,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3509:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "3553:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3545:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 939,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3545:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 942,
											"mutability": "mutable",
											"name": "reserveLastUpdateTimestamp",
											"nameLocation": "3590:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3583:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 941,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3583:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "stableDebtLastUpdateTimestamp",
											"nameLocation": "3629:29:2",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "3622:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 943,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3622:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveCache",
									"nameLocation": "2932:12:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "2925:738:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteLiquidationCallParams",
									"id": 964,
									"members": [
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "3717:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3709:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3709:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "debtToCover",
											"nameLocation": "3744:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3736:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3736:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "collateralAsset",
											"nameLocation": "3769:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3761:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 950,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3761:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 953,
											"mutability": "mutable",
											"name": "debtAsset",
											"nameLocation": "3798:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3790:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 952,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3790:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "3821:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3813:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 954,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3813:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "receiveAToken",
											"nameLocation": "3836:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3831:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 956,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3831:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 959,
											"mutability": "mutable",
											"name": "priceOracle",
											"nameLocation": "3863:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3855:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 958,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3855:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "3886:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3880:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 960,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3880:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "3917:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "3909:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 962,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3909:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteLiquidationCallParams",
									"nameLocation": "3674:28:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "3667:274:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSupplyParams",
									"id": 973,
									"members": [
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "3986:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "3978:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 965,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3978:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4005:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "3997:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3997:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4025:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4017:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 969,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4017:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 972,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4048:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 973,
											"src": "4041:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 971,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4041:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSupplyParams",
									"nameLocation": "3952:19:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "3945:120:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteBorrowParams",
									"id": 999,
									"members": [
										{
											"constant": false,
											"id": 975,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4110:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4102:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 974,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4102:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 977,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "4129:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4121:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 976,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4121:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 979,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4147:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4139:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 978,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4139:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 981,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4171:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4163:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4163:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 984,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4200:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4183:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 983,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 982,
													"name": "InterestRateMode",
													"nameLocations": [
														"4183:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "4183:16:2"
												},
												"referencedDeclaration": 903,
												"src": "4183:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4229:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4222:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 985,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4222:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "releaseUnderlying",
											"nameLocation": "4252:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4247:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 987,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4247:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "4283:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4275:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4275:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4327:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4319:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4319:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4354:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4346:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 993,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4346:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4372:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4366:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 995,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4366:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 998,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "4403:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 999,
											"src": "4395:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 997,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4395:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteBorrowParams",
									"nameLocation": "4076:19:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4069:358:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteRepayParams",
									"id": 1011,
									"members": [
										{
											"constant": false,
											"id": 1001,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4471:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4463:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1000,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4463:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1003,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4490:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4482:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1002,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4482:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4519:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4502:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 1005,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1004,
													"name": "InterestRateMode",
													"nameLocations": [
														"4502:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "4502:16:2"
												},
												"referencedDeclaration": 903,
												"src": "4502:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4549:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4541:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1007,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4541:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "useATokens",
											"nameLocation": "4570:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1011,
											"src": "4565:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1009,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4565:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteRepayParams",
									"nameLocation": "4438:18:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4431:154:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteWithdrawParams",
									"id": 1024,
									"members": [
										{
											"constant": false,
											"id": 1013,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4632:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4624:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1012,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4624:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1015,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4651:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4643:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1014,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4643:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1017,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4671:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4663:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1016,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4663:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1019,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4687:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4679:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1018,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4679:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1021,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4714:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4706:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1020,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4706:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1023,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4732:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1024,
											"src": "4726:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1022,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4726:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteWithdrawParams",
									"nameLocation": "4596:21:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4589:165:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSetUserEModeParams",
									"id": 1031,
									"members": [
										{
											"constant": false,
											"id": 1026,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4805:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4797:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1025,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4797:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4832:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4824:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1027,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4824:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "categoryId",
											"nameLocation": "4850:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1031,
											"src": "4844:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1029,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4844:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSetUserEModeParams",
									"nameLocation": "4765:25:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4758:107:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FinalizeTransferParams",
									"id": 1050,
									"members": [
										{
											"constant": false,
											"id": 1033,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4913:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4905:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1032,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4905:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1035,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "4932:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4924:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1034,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4924:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1037,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4950:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4942:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1036,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4942:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1039,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4966:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4958:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1038,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4958:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1041,
											"mutability": "mutable",
											"name": "balanceFromBefore",
											"nameLocation": "4986:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "4978:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1040,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4978:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1043,
											"mutability": "mutable",
											"name": "balanceToBefore",
											"nameLocation": "5017:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5009:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1042,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5009:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1045,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5046:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5038:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1044,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5038:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1047,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "5073:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5065:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1046,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5065:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "fromEModeCategory",
											"nameLocation": "5091:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "5085:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1048,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5085:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FinalizeTransferParams",
									"nameLocation": "4876:22:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "4869:244:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanParams",
									"id": 1082,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5154:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5146:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1051,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5146:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1055,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "5185:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5175:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1054,
												"nodeType": "ArrayTypeName",
												"src": "5175:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "5207:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5197:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5197:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ArrayTypeName",
												"src": "5197:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1061,
											"mutability": "mutable",
											"name": "interestRateModes",
											"nameLocation": "5230:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5220:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ArrayTypeName",
												"src": "5220:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1063,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "5261:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5253:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1062,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5253:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1065,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5283:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5277:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1064,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5277:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1067,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5302:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5295:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1066,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5295:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5328:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5320:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1068,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5320:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5368:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5360:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1070,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5360:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "5403:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5395:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1072,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5395:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1075,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5447:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5439:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1074,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5439:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1077,
											"mutability": "mutable",
											"name": "addressesProvider",
											"nameLocation": "5474:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5466:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1076,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5466:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1079,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "5503:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5497:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1078,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5497:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1081,
											"mutability": "mutable",
											"name": "isAuthorizedFlashBorrower",
											"nameLocation": "5531:25:2",
											"nodeType": "VariableDeclaration",
											"scope": 1082,
											"src": "5526:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1080,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5526:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanParams",
									"nameLocation": "5124:15:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5117:444:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanSimpleParams",
									"id": 1097,
									"members": [
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5608:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5600:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1083,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5600:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1086,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5637:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5629:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1085,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5629:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1088,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5656:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5648:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1087,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5648:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5674:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5668:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1089,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5668:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5693:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5686:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1091,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5686:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1094,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5719:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5711:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5711:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1096,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5759:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 1097,
											"src": "5751:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1095,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5751:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanSimpleParams",
									"nameLocation": "5572:21:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5565:220:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashLoanRepaymentParams",
									"id": 1110,
									"members": [
										{
											"constant": false,
											"id": 1099,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5835:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5827:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5827:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1101,
											"mutability": "mutable",
											"name": "totalPremium",
											"nameLocation": "5855:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5847:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1100,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5847:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5881:26:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5873:34:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5873:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5921:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5913:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5913:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5940:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5932:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5932:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1109,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5968:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1110,
											"src": "5961:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1108,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5961:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashLoanRepaymentParams",
									"nameLocation": "5796:24:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5789:196:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateUserAccountDataParams",
									"id": 1122,
									"members": [
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6054:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6033:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 1112,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1111,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6033:20:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 888,
													"src": "6033:20:2"
												},
												"referencedDeclaration": 888,
												"src": "6033:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6078:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6070:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6070:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "6105:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6097:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1116,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6097:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6123:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6115:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1118,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6115:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1121,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6141:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1122,
											"src": "6135:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1120,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6135:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateUserAccountDataParams",
									"nameLocation": "5996:30:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "5989:174:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateBorrowParams",
									"id": 1154,
									"members": [
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "reserveCache",
											"nameLocation": "6214:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6201:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 1124,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1123,
													"name": "ReserveCache",
													"nameLocations": [
														"6201:12:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 945,
													"src": "6201:12:2"
												},
												"referencedDeclaration": 945,
												"src": "6201:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1128,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6253:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6232:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 1127,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1126,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6232:20:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 888,
													"src": "6232:20:2"
												},
												"referencedDeclaration": 888,
												"src": "6232:20:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$888_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1130,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "6277:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6269:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1129,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6269:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1132,
											"mutability": "mutable",
											"name": "userAddress",
											"nameLocation": "6296:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6288:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6288:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1134,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6321:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6313:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6313:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1137,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "6350:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6333:33:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$903",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 1136,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1135,
													"name": "InterestRateMode",
													"nameLocations": [
														"6333:16:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 903,
													"src": "6333:16:2"
												},
												"referencedDeclaration": 903,
												"src": "6333:16:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$903",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1139,
											"mutability": "mutable",
											"name": "maxStableLoanPercent",
											"nameLocation": "6380:20:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6372:28:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6372:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1141,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6414:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6406:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6406:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1143,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6441:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6433:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1142,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6433:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1145,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6459:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6453:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1144,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6453:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6490:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6482:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6482:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "isolationModeActive",
											"nameLocation": "6520:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6515:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1148,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6515:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "isolationModeCollateralAddress",
											"nameLocation": "6553:30:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6545:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1150,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6545:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "isolationModeDebtCeiling",
											"nameLocation": "6597:24:2",
											"nodeType": "VariableDeclaration",
											"scope": 1154,
											"src": "6589:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6589:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateBorrowParams",
									"nameLocation": "6174:20:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6167:459:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateLiquidationCallParams",
									"id": 1164,
									"members": [
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "debtReserveCache",
											"nameLocation": "6686:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6673:29:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 1156,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1155,
													"name": "ReserveCache",
													"nameLocations": [
														"6673:12:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 945,
													"src": "6673:12:2"
												},
												"referencedDeclaration": 945,
												"src": "6673:12:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$945_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "totalDebt",
											"nameLocation": "6716:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6708:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6708:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "healthFactor",
											"nameLocation": "6739:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6731:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6731:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6765:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1164,
											"src": "6757:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1162,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6757:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateLiquidationCallParams",
									"nameLocation": "6637:29:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6630:159:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateInterestRatesParams",
									"id": 1183,
									"members": [
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "6843:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6835:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1165,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6835:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1168,
											"mutability": "mutable",
											"name": "liquidityAdded",
											"nameLocation": "6865:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6857:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1167,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6857:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1170,
											"mutability": "mutable",
											"name": "liquidityTaken",
											"nameLocation": "6893:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6885:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6885:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1172,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "6921:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6913:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6913:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "6950:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6942:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6942:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1176,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "6981:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "6973:31:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6973:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1178,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "7018:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7010:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7010:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "reserve",
											"nameLocation": "7045:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7037:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7037:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1182,
											"mutability": "mutable",
											"name": "aToken",
											"nameLocation": "7066:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1183,
											"src": "7058:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7058:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateInterestRatesParams",
									"nameLocation": "6800:28:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "6793:284:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InitReserveParams",
									"id": 1198,
									"members": [
										{
											"constant": false,
											"id": 1185,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "7120:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7112:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1184,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7112:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "7139:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7131:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7131:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1189,
											"mutability": "mutable",
											"name": "stableDebtAddress",
											"nameLocation": "7166:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7158:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1188,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7158:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1191,
											"mutability": "mutable",
											"name": "variableDebtAddress",
											"nameLocation": "7197:19:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7189:27:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1190,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7189:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "7230:27:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7222:35:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7222:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1195,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "7270:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7263:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1194,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7263:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "maxNumberReserves",
											"nameLocation": "7296:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 1198,
											"src": "7289:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1196,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7289:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitReserveParams",
									"nameLocation": "7088:17:2",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "7081:237:2",
									"visibility": "public"
								}
							],
							"scope": 1200,
							"src": "62:7258:2",
							"usedErrors": []
						}
					],
					"src": "37:7284:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1412
						],
						"Ownable": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1313,
							"sourceUnit": 1413,
							"src": "127:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "Context",
										"nameLocations": [
											"683:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1412,
										"src": "683:7:3"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1312,
							"linearizedBaseContracts": [
								1312,
								1412
							],
							"name": "Ownable",
							"nameLocation": "672:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1207,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1312,
									"src": "697:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1206,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1213,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "753:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "784:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:3"
									},
									"src": "726:84:3"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "926:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1218,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "955:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1217,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "936:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "936:32:3"
											}
										]
									},
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:3"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:3"
									},
									"scope": 1312,
									"src": "912:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1084:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1226,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "1094:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:3"
											},
											{
												"id": 1229,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:3"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1231,
									"name": "onlyOwner",
									"nameLocation": "1072:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:3"
									},
									"src": "1063:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "1256:30:3",
										"statements": [
											{
												"expression": {
													"id": 1237,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "1273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1238,
												"nodeType": "Return",
												"src": "1266:13:3"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:3"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1247:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:3"
									},
									"scope": 1312,
									"src": "1201:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1404:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1245,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "1422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1247,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1402,
																	"src": "1433:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:3"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:3"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:3"
									},
									"scope": 1312,
									"src": "1359:130:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "1878:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1260,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "1888:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:3"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "1868:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:3"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:3"
									},
									"scope": 1312,
									"src": "1824:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "2144:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1277,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "2162:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1287,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2256:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1286,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "2237:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:3"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1273,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "2134:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "2101:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:3"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:3"
									},
									"scope": 1312,
									"src": "2074:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "2489:124:3",
										"statements": [
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "2499:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"id": 1299,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "2518:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:3"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2534:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1302,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2543:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1306,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "2587:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "2597:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1305,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2566:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "2561:45:3"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2454:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:3"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:3"
									},
									"scope": 1312,
									"src": "2426:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1313,
							"src": "654:1961:3",
							"usedErrors": []
						}
					],
					"src": "102:2514:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1390
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1390,
							"linearizedBaseContracts": [
								1390
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1324,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1333,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1390,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1390,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 1390,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 1390,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 1390,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2668:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2682:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:4"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:4"
									},
									"scope": 1390,
									"src": "2646:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "202:2534:4",
							"usedErrors": []
						}
					],
					"src": "106:2631:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1412
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1393,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1412,
							"linearizedBaseContracts": [
								1412
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1398,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1400,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1412,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1407,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1406,
												"id": 1409,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1412,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1413,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2278
						]
					},
					"id": 2279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1415,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2278,
							"linearizedBaseContracts": [
								2278
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1419,
									"members": [
										{
											"id": 1416,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 1417,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 1418,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1429,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1430,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1433,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 1432,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1435,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 2278,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1447,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1448,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1451,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 1450,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1453,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 2278,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1465,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1466,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1468,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1469,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1470,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1472,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1464,
												"id": 1476,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 2278,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1488,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1492,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1496,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1501,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 2278,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "1765:4115:6",
										"statements": [
											{
												"id": 1624,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:6",
												"statements": [
													{
														"assignments": [
															1516
														],
														"declarations": [
															{
																"constant": false,
																"id": 1516,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1624,
																"src": "2096:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1515,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1517,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:6"
													},
													{
														"assignments": [
															1519
														],
														"declarations": [
															{
																"constant": false,
																"id": 1519,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1624,
																"src": "2168:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1518,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1520,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1519,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1508,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1508,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:6",
																"valueSize": 1
															}
														],
														"id": 1521,
														"nodeType": "InlineAssembly",
														"src": "2239:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1522,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "2486:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1530,
														"nodeType": "IfStatement",
														"src": "2482:368:6",
														"trueBody": {
															"id": 1529,
															"nodeType": "Block",
															"src": "2498:352:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1525,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "2816:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1526,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "2824:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1514,
																	"id": 1528,
																	"nodeType": "Return",
																	"src": "2809:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1532,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "2960:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1533,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "2974:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1531,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1537,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:6"
													},
													{
														"assignments": [
															1539
														],
														"declarations": [
															{
																"constant": false,
																"id": 1539,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1624,
																"src": "3261:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1538,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1540,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1519,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1519,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1539,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:6",
																"valueSize": 1
															},
															{
																"declaration": 1506,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:6",
																"valueSize": 1
															},
															{
																"declaration": 1508,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:6",
																"valueSize": 1
															}
														],
														"id": 1541,
														"nodeType": "InlineAssembly",
														"src": "3292:300:6"
													},
													{
														"assignments": [
															1543
														],
														"declarations": [
															{
																"constant": false,
																"id": 1543,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1624,
																"src": "3899:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1542,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1551,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1544,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "3914:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:6",
																			"subExpression": {
																				"id": 1545,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1510,
																				"src": "3930:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1549,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1510,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1516,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:6",
																"valueSize": 1
															},
															{
																"declaration": 1543,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1543,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1543,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1543,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:6",
																"valueSize": 1
															},
															{
																"declaration": 1543,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:6",
																"valueSize": 1
															}
														],
														"id": 1552,
														"nodeType": "InlineAssembly",
														"src": "3960:371:6"
													},
													{
														"expression": {
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1553,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "4397:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1554,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "4406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1555,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "4414:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1558,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:6"
													},
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1624,
																"src": "4736:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1562,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "4759:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1564,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:6"
													},
													{
														"expression": {
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1568,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "4992:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1570,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5007:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1571,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5021:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1575,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:6"
													},
													{
														"expression": {
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1576,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "5061:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1578,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5076:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1579,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5090:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1583,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:6"
													},
													{
														"expression": {
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "5131:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5146:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5160:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1591,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:6"
													},
													{
														"expression": {
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "5201:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5216:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5230:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1599,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:6"
													},
													{
														"expression": {
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1600,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "5271:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1602,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5286:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1603,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5300:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1607,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:6"
													},
													{
														"expression": {
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1608,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "5342:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1610,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "5357:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1611,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "5371:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1615,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:6"
													},
													{
														"expression": {
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1616,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5812:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1617,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "5821:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1618,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "5829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1621,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:6"
													},
													{
														"expression": {
															"id": 1622,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5857:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1514,
														"id": 1623,
														"nodeType": "Return",
														"src": "5850:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "1683:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "1694:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "1705:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:6"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "1749:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:6"
									},
									"scope": 2278,
									"src": "1667:4213:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "6122:189:6",
										"statements": [
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "6132:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"arguments": [
														{
															"id": 1644,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "6156:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1645,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "6159:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1646,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "6162:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1643,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1626,
															1670
														],
														"referencedDeclaration": 1626,
														"src": "6149:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1419",
															"typeString": "enum Math.Rounding"
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1649,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "6188:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1419",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1650,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "6200:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1419_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1417,
															"src": "6200:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1419",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1654,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "6222:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1655,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "6225:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1656,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "6228:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1653,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "6184:98:6",
												"trueBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "6246:36:6",
													"statements": [
														{
															"expression": {
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "6260:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1642,
													"src": "6298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1640,
												"id": 1668,
												"nodeType": "Return",
												"src": "6291:13:6"
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6028:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6039:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6050:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6071:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1419",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "6071:8:6"
													},
													"referencedDeclaration": 1419,
													"src": "6071:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1419",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:6"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6113:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:6"
									},
									"scope": 2278,
									"src": "6012:299:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "6587:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "6601:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1684,
												"nodeType": "IfStatement",
												"src": "6597:45:6",
												"trueBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "6609:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1677,
															"id": 1682,
															"nodeType": "Return",
															"src": "6623:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1686
												],
												"declarations": [
													{
														"constant": false,
														"id": 1686,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "7321:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1689,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "7349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1688,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1950,
																			1986
																		],
																		"referencedDeclaration": 1950,
																		"src": "7344:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:6"
											},
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:6",
												"statements": [
													{
														"expression": {
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7782:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "7792:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "7801:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "7805:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1706,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:6"
													},
													{
														"expression": {
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7831:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "7841:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "7850:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "7854:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1717,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:6"
													},
													{
														"expression": {
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7880:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "7890:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "7899:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "7903:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1728,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:6"
													},
													{
														"expression": {
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1729,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7929:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1730,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "7939:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1731,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "7948:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1732,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "7952:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1735,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1739,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:6"
													},
													{
														"expression": {
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7978:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1741,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "7988:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1742,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "7997:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1743,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "8001:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1746,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1750,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:6"
													},
													{
														"expression": {
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "8027:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1752,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "8037:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1753,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "8046:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1754,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "8050:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1757,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1761,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:6"
													},
													{
														"expression": {
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "8076:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1763,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1686,
																				"src": "8086:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1764,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1673,
																					"src": "8095:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1765,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1686,
																					"src": "8099:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1768,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1772,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1774,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1686,
																	"src": "8136:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1775,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "8144:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1776,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "8148:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1773,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "8132:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1779,
														"nodeType": "Return",
														"src": "8125:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "6544:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:6"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "6578:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:6"
									},
									"scope": 2278,
									"src": "6530:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "8348:161:6",
										"statements": [
											{
												"id": 1816,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:6",
												"statements": [
													{
														"assignments": [
															1794
														],
														"declarations": [
															{
																"constant": false,
																"id": 1794,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1816,
																"src": "8382:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1798,
														"initialValue": {
															"arguments": [
																{
																	"id": 1796,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "8404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1795,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1782,
																	1818
																],
																"referencedDeclaration": 1782,
																"src": "8399:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1799,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "8427:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1419",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1800,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1788,
																					"src": "8437:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1801,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1419,
																						"src": "8449:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1419_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1417,
																					"src": "8449:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1804,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1794,
																						"src": "8464:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1805,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1794,
																						"src": "8473:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1807,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1785,
																					"src": "8482:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1792,
														"id": 1815,
														"nodeType": "Return",
														"src": "8420:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "8286:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "8297:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1419",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1786,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "8297:8:6"
													},
													"referencedDeclaration": 1419,
													"src": "8297:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1419",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:6"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "8339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:6"
									},
									"scope": 2278,
									"src": "8272:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "8694:922:6",
										"statements": [
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "8704:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"hexValue": "30",
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:6"
											},
											{
												"id": 1946,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "8760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1844,
														"nodeType": "IfStatement",
														"src": "8756:99:6",
														"trueBody": {
															"id": 1843,
															"nodeType": "Block",
															"src": "8778:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1835,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "8796:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1838,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:6"
																},
																{
																	"expression": {
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1839,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "8827:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1842,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "8872:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "8868:96:6",
														"trueBody": {
															"id": 1858,
															"nodeType": "Block",
															"src": "8889:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1850,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "8907:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1853,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:6"
																},
																{
																	"expression": {
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1854,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "8937:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1857,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "8981:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1874,
														"nodeType": "IfStatement",
														"src": "8977:96:6",
														"trueBody": {
															"id": 1873,
															"nodeType": "Block",
															"src": "8998:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "9016:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1868,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:6"
																},
																{
																	"expression": {
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1869,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9046:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1872,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "9090:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1889,
														"nodeType": "IfStatement",
														"src": "9086:96:6",
														"trueBody": {
															"id": 1888,
															"nodeType": "Block",
															"src": "9107:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1880,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "9125:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1883,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:6"
																},
																{
																	"expression": {
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9155:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1887,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "9199:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1904,
														"nodeType": "IfStatement",
														"src": "9195:93:6",
														"trueBody": {
															"id": 1903,
															"nodeType": "Block",
															"src": "9215:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1895,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "9233:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1898,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:6"
																},
																{
																	"expression": {
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1899,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9262:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1902,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1905,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "9305:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1919,
														"nodeType": "IfStatement",
														"src": "9301:93:6",
														"trueBody": {
															"id": 1918,
															"nodeType": "Block",
															"src": "9321:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1910,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "9339:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1913,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:6"
																},
																{
																	"expression": {
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1914,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9368:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1917,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "9411:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1934,
														"nodeType": "IfStatement",
														"src": "9407:93:6",
														"trueBody": {
															"id": 1933,
															"nodeType": "Block",
															"src": "9427:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "9445:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1928,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:6"
																},
																{
																	"expression": {
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1929,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9474:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1932,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "9517:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1945,
														"nodeType": "IfStatement",
														"src": "9513:64:6",
														"trueBody": {
															"id": 1944,
															"nodeType": "Block",
															"src": "9533:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "9551:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1943,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1947,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1827,
													"src": "9603:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1948,
												"nodeType": "Return",
												"src": "9596:13:6"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "8647:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:6"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "8685:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:6"
									},
									"scope": 2278,
									"src": "8633:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "9849:165:6",
										"statements": [
											{
												"id": 1984,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:6",
												"statements": [
													{
														"assignments": [
															1962
														],
														"declarations": [
															{
																"constant": false,
																"id": 1962,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1984,
																"src": "9883:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1961,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1966,
														"initialValue": {
															"arguments": [
																{
																	"id": 1964,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "9905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1963,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1950,
																	1986
																],
																"referencedDeclaration": 1950,
																"src": "9900:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "9932:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1419",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1968,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1956,
																					"src": "9942:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1969,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1419,
																						"src": "9954:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1419_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1417,
																					"src": "9954:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1974,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1973,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1962,
																						"src": "9974:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1975,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1953,
																					"src": "9983:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1960,
														"id": 1983,
														"nodeType": "Return",
														"src": "9925:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "9783:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "9798:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1419",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1955,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1954,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "9798:8:6"
													},
													"referencedDeclaration": 1419,
													"src": "9798:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1419",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:6"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "9840:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:6"
									},
									"scope": 2278,
									"src": "9769:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "10201:854:6",
										"statements": [
											{
												"assignments": [
													1995
												],
												"declarations": [
													{
														"constant": false,
														"id": 1995,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2114,
														"src": "10211:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1997,
												"initialValue": {
													"hexValue": "30",
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:6"
											},
											{
												"id": 2111,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1998,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10267:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2014,
														"nodeType": "IfStatement",
														"src": "10263:103:6",
														"trueBody": {
															"id": 2013,
															"nodeType": "Block",
															"src": "10286:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2003,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10304:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2008,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:6"
																},
																{
																	"expression": {
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2009,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10339:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2012,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2015,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10383:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2031,
														"nodeType": "IfStatement",
														"src": "10379:103:6",
														"trueBody": {
															"id": 2030,
															"nodeType": "Block",
															"src": "10402:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2020,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10420:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2025,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:6"
																},
																{
																	"expression": {
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10455:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2032,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10499:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2048,
														"nodeType": "IfStatement",
														"src": "10495:103:6",
														"trueBody": {
															"id": 2047,
															"nodeType": "Block",
															"src": "10518:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2037,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10536:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2042,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:6"
																},
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2043,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10571:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10615:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2065,
														"nodeType": "IfStatement",
														"src": "10611:100:6",
														"trueBody": {
															"id": 2064,
															"nodeType": "Block",
															"src": "10633:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2054,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10651:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2059,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:6"
																},
																{
																	"expression": {
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2060,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10685:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2063,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2066,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10728:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "10724:100:6",
														"trueBody": {
															"id": 2081,
															"nodeType": "Block",
															"src": "10746:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2071,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10764:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:6"
																},
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10798:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2083,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10841:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2099,
														"nodeType": "IfStatement",
														"src": "10837:100:6",
														"trueBody": {
															"id": 2098,
															"nodeType": "Block",
															"src": "10859:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1989,
																			"src": "10877:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2093,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:6"
																},
																{
																	"expression": {
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2094,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10911:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2097,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2100,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10954:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2110,
														"nodeType": "IfStatement",
														"src": "10950:66:6",
														"trueBody": {
															"id": 2109,
															"nodeType": "Block",
															"src": "10972:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2105,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1995,
																			"src": "10990:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2108,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2112,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1995,
													"src": "11042:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1993,
												"id": 2113,
												"nodeType": "Return",
												"src": "11035:13:6"
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "10154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:6"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "10192:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:6"
									},
									"scope": 2278,
									"src": "10139:916:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "11290:167:6",
										"statements": [
											{
												"id": 2149,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:6",
												"statements": [
													{
														"assignments": [
															2127
														],
														"declarations": [
															{
																"constant": false,
																"id": 2127,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2149,
																"src": "11324:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2126,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2131,
														"initialValue": {
															"arguments": [
																{
																	"id": 2129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "11347:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2128,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2115,
																	2151
																],
																"referencedDeclaration": 2115,
																"src": "11341:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2132,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "11374:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1419",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2133,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2121,
																					"src": "11384:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2134,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1419,
																						"src": "11396:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1419_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1417,
																					"src": "11396:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2137,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2138,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2127,
																						"src": "11417:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2140,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2118,
																					"src": "11426:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2146,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2125,
														"id": 2148,
														"nodeType": "Return",
														"src": "11367:73:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "11224:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "11239:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1419",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2119,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "11239:8:6"
													},
													"referencedDeclaration": 1419,
													"src": "11239:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1419",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:6"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "11281:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:6"
									},
									"scope": 2278,
									"src": "11209:248:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "11771:600:6",
										"statements": [
											{
												"assignments": [
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2237,
														"src": "11781:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2162,
												"initialValue": {
													"hexValue": "30",
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:6"
											},
											{
												"id": 2234,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "11837:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "11833:98:6",
														"trueBody": {
															"id": 2176,
															"nodeType": "Block",
															"src": "11855:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "11873:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2171,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:6"
																},
																{
																	"expression": {
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "11904:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2175,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "11948:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2192,
														"nodeType": "IfStatement",
														"src": "11944:95:6",
														"trueBody": {
															"id": 2191,
															"nodeType": "Block",
															"src": "11965:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "11983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2186,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:6"
																},
																{
																	"expression": {
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2187,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "12013:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2190,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "12056:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2207,
														"nodeType": "IfStatement",
														"src": "12052:95:6",
														"trueBody": {
															"id": 2206,
															"nodeType": "Block",
															"src": "12073:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "12091:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2201,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:6"
																},
																{
																	"expression": {
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "12121:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2205,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "12164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2222,
														"nodeType": "IfStatement",
														"src": "12160:95:6",
														"trueBody": {
															"id": 2221,
															"nodeType": "Block",
															"src": "12181:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "12199:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2216,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:6"
																},
																{
																	"expression": {
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "12229:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2220,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "12272:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "12268:64:6",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "12288:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "12306:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2235,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2160,
													"src": "12358:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2158,
												"id": 2236,
												"nodeType": "Return",
												"src": "12351:13:6"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "11724:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:6"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "11762:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:6"
									},
									"scope": 2278,
									"src": "11708:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "12608:174:6",
										"statements": [
											{
												"id": 2275,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:6",
												"statements": [
													{
														"assignments": [
															2250
														],
														"declarations": [
															{
																"constant": false,
																"id": 2250,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 2275,
																"src": "12642:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2249,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2254,
														"initialValue": {
															"arguments": [
																{
																	"id": 2252,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "12666:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2251,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2238,
																	2277
																],
																"referencedDeclaration": 2238,
																"src": "12659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "12693:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1419",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2256,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "12703:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2257,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1419,
																						"src": "12715:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1419_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1417,
																					"src": "12715:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1419",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2265,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2263,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2261,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2250,
																									"src": "12736:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2262,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2264,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2266,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2241,
																					"src": "12751:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2248,
														"id": 2274,
														"nodeType": "Return",
														"src": "12686:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "12542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "12557:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1419",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2242,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "12557:8:6"
													},
													"referencedDeclaration": 1419,
													"src": "12557:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1419",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:6"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "12599:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:6"
									},
									"scope": 2278,
									"src": "12526:256:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2279,
							"src": "202:12582:6",
							"usedErrors": []
						}
					],
					"src": "103:12682:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2590
						]
					},
					"id": 2591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2590,
							"linearizedBaseContracts": [
								2590
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 2311,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															2294
														],
														"declarations": [
															{
																"constant": false,
																"id": 2294,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 2311,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2293,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2298,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2286,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2299,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2294,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2300,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2306,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2304,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2292,
															"id": 2305,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2308,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2292,
														"id": 2310,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 2590,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 2339,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2326,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2316,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2332,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2324,
															"id": 2331,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2334,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2316,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2335,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2318,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2337,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2324,
														"id": 2338,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 2590,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 2381,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2353,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2352,
															"id": 2359,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															2362
														],
														"declarations": [
															{
																"constant": false,
																"id": 2362,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 2381,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2368,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2370,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2376,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2352,
															"id": 2375,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2378,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2352,
														"id": 2380,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 2590,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 2409,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2394,
															"id": 2401,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2404,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2405,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2407,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2394,
														"id": 2408,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 2590,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 2437,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2430,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2428,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2422,
															"id": 2429,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2432,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2433,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2416,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2435,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2422,
														"id": 2436,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 2590,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2449,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2442,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2450,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2448,
												"id": 2452,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 2590,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2464,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2465,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2463,
												"id": 2467,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 2590,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2480,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2474,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2478,
												"id": 2482,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 2590,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2487,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2493,
												"id": 2497,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 2590,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2509,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2510,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2508,
												"id": 2512,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 2590,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2538,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 2537,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2527,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2519,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2528,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2530,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2526,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2532,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2533,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2534,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2525,
														"id": 2536,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 2590,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 2562,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2552,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2555,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2551,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2557,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2558,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2559,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2550,
														"id": 2561,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2540,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 2590,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 2587,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2577,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2580,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2571,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2576,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2582,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2583,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2567,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2584,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2575,
														"id": 2586,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 2590,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2591,
							"src": "482:6210:7",
							"usedErrors": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/insurance.sol": {
				"ast": {
					"absolutePath": "contracts/insurance.sol",
					"exportedSymbols": {
						"Context": [
							1412
						],
						"DataTypes": [
							1199
						],
						"IClaims": [
							2621
						],
						"IERC20": [
							1390
						],
						"IPool": [
							638
						],
						"IPoolAddressesProvider": [
							847
						],
						"Math": [
							2278
						],
						"Ownable": [
							1312
						],
						"SafeMath": [
							2590
						],
						"insurance": [
							3004
						]
					},
					"id": 3005,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2592,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"id": 2593,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:19:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2594,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 1391,
							"src": "77:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 1313,
							"src": "134:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"id": 2596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 639,
							"src": "187:54:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"id": 2597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 848,
							"src": "242:71:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 2591,
							"src": "314:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3005,
							"sourceUnit": 2279,
							"src": "372:53:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaims",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2621,
							"linearizedBaseContracts": [
								2621
							],
							"name": "IClaims",
							"nameLocation": "437:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "86b82254",
									"id": 2606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "computePremium",
									"nameLocation": "460:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "483:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "475:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:18:8"
									},
									"returnParameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "516:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:9:8"
									},
									"scope": 2621,
									"src": "451:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f75f6029",
									"id": 2613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCoverage",
									"nameLocation": "539:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "560:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "552:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "576:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "568:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:35:8"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:8"
									},
									"scope": 2621,
									"src": "530:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a3df437b",
									"id": 2620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reduceCoverage",
									"nameLocation": "609:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "633:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "625:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "649:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "641:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:35:8"
									},
									"returnParameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:8"
									},
									"scope": 2621,
									"src": "600:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3005,
							"src": "427:243:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2622,
										"name": "Ownable",
										"nameLocations": [
											"694:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "694:7:8"
									},
									"id": 2623,
									"nodeType": "InheritanceSpecifier",
									"src": "694:7:8"
								}
							],
							"canonicalName": "insurance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3004,
							"linearizedBaseContracts": [
								3004,
								1312,
								1412
							],
							"name": "insurance",
							"nameLocation": "681:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2626,
									"libraryName": {
										"id": 2624,
										"name": "SafeMath",
										"nameLocations": [
											"714:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2590,
										"src": "714:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "708:27:8",
									"typeName": {
										"id": 2625,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2628,
									"mutability": "mutable",
									"name": "aaveAddress",
									"nameLocation": "748:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "740:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2627,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2631,
									"mutability": "mutable",
									"name": "poolAave",
									"nameLocation": "771:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "765:14:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPool_$638",
										"typeString": "contract IPool"
									},
									"typeName": {
										"id": 2630,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2629,
											"name": "IPool",
											"nameLocations": [
												"765:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 638,
											"src": "765:5:8"
										},
										"referencedDeclaration": 638,
										"src": "765:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPool_$638",
											"typeString": "contract IPool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2634,
									"mutability": "immutable",
									"name": "poolAddressProvider",
									"nameLocation": "826:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "785:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
										"typeString": "contract IPoolAddressesProvider"
									},
									"typeName": {
										"id": 2633,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2632,
											"name": "IPoolAddressesProvider",
											"nameLocations": [
												"785:22:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 847,
											"src": "785:22:8"
										},
										"referencedDeclaration": 847,
										"src": "785:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
											"typeString": "contract IPoolAddressesProvider"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2637,
									"mutability": "mutable",
									"name": "totalSharesLoansPerAsset",
									"nameLocation": "859:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "851:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2636,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "886:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2639,
									"mutability": "mutable",
									"name": "_addressClaimContract",
									"nameLocation": "901:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "893:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2638,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "893:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2642,
									"mutability": "mutable",
									"name": "_USDC",
									"nameLocation": "937:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "929:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2640,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846313466393539363433303933314531373734363937313563353931353133333038323434653846",
										"id": 2641,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "945:42:8",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xF14f9596430931E177469715c591513308244e8F"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2646,
									"mutability": "mutable",
									"name": "assets",
									"nameLocation": "1071:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "1035:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2645,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2643,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1043:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1035:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2644,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1054:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2650,
									"mutability": "mutable",
									"name": "sharesLoans",
									"nameLocation": "1119:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 3004,
									"src": "1083:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2649,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2647,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1091:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1083:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2648,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1102:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "1151:197:8",
										"statements": [
											{
												"expression": {
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2653,
														"name": "poolAddressProvider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2634,
														"src": "1161:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
															"typeString": "contract IPoolAddressesProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307865623741383932424230344138663833366244456542626636303839374137416631426635643746",
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1206:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xeb7A892BB04A8f836bDEeBbf60897A7Af1Bf5d7F"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2654,
															"name": "IPoolAddressesProvider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "1183:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPoolAddressesProvider_$847_$",
																"typeString": "type(contract IPoolAddressesProvider)"
															}
														},
														"id": 2656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1183:66:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
															"typeString": "contract IPoolAddressesProvider"
														}
													},
													"src": "1161:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"id": 2658,
												"nodeType": "ExpressionStatement",
												"src": "1161:88:8"
											},
											{
												"expression": {
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2659,
														"name": "aaveAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "1259:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2660,
																"name": "poolAddressProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "1273:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPoolAddressesProvider_$847",
																	"typeString": "contract IPoolAddressesProvider"
																}
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1293:7:8",
															"memberName": "getPool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "1273:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1273:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1259:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "1259:43:8"
											},
											{
												"expression": {
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2665,
														"name": "poolAave",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "1312:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$638",
															"typeString": "contract IPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2667,
																"name": "aaveAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "1329:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2666,
															"name": "IPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1323:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPool_$638_$",
																"typeString": "type(contract IPool)"
															}
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1323:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$638",
															"typeString": "contract IPool"
														}
													},
													"src": "1312:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$638",
														"typeString": "contract IPool"
													}
												},
												"id": 2670,
												"nodeType": "ExpressionStatement",
												"src": "1312:29:8"
											}
										]
									},
									"id": 2672,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:8"
									},
									"returnParameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:8"
									},
									"scope": 3004,
									"src": "1137:211:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "1399:414:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2681,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1436:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1440:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1436:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1456:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																],
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1448:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1448:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1448:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2687,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "1463:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2678,
																	"name": "_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "1416:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2677,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1409:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1409:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1390",
																"typeString": "contract IERC20"
															}
														},
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1423:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1389,
														"src": "1409:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2689,
												"nodeType": "ExpressionStatement",
												"src": "1409:62:8"
											},
											{
												"assignments": [
													2691
												],
												"declarations": [
													{
														"constant": false,
														"id": 2691,
														"mutability": "mutable",
														"name": "discount",
														"nameLocation": "1489:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2733,
														"src": "1481:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1481:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2698,
												"initialValue": {
													"arguments": [
														{
															"id": 2696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "1547:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2693,
																	"name": "_addressClaimContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "1508:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2692,
																"name": "IClaims",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "1500:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IClaims_$2621_$",
																	"typeString": "type(contract IClaims)"
																}
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaims_$2621",
																"typeString": "contract IClaims"
															}
														},
														"id": 2695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1531:14:8",
														"memberName": "computePremium",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2606,
														"src": "1500:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 2697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1481:74:8"
											},
											{
												"expression": {
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2699,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2674,
														"src": "1565:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2700,
														"name": "discount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "1575:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1565:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "1565:18:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2707,
															"name": "_addressClaimContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "1615:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2708,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "1638:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2704,
																	"name": "_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "1600:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2703,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "1593:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1593:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1390",
																"typeString": "contract IERC20"
															}
														},
														"id": 2706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1607:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1377,
														"src": "1593:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2710,
												"nodeType": "ExpressionStatement",
												"src": "1593:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "1701:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2716,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1709:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1713:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1709:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2712,
																	"name": "_addressClaimContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "1665:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2711,
																"name": "IClaims",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "1657:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IClaims_$2621_$",
																	"typeString": "type(contract IClaims)"
																}
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1657:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaims_$2621",
																"typeString": "contract IClaims"
															}
														},
														"id": 2714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1688:11:8",
														"memberName": "addCoverage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "1657:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1657:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2719,
												"nodeType": "ExpressionStatement",
												"src": "1657:64:8"
											},
											{
												"expression": {
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2720,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "1731:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2723,
														"indexExpression": {
															"expression": {
																"id": 2721,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1738:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1742:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1738:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1731:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2724,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2674,
														"src": "1753:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1731:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "1731:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2728,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1786:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1790:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1786:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2730,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2674,
															"src": "1798:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2727,
														"name": "supplyLendToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2860,
														"src": "1769:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2732,
												"nodeType": "ExpressionStatement",
												"src": "1769:37:8"
											}
										]
									},
									"functionSelector": "fa2df414",
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAsset",
									"nameLocation": "1363:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1384:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "1376:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:16:8"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:0:8"
									},
									"scope": 3004,
									"src": "1354:459:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "1869:266:8",
										"statements": [
											{
												"assignments": [
													2740
												],
												"declarations": [
													{
														"constant": false,
														"id": 2740,
														"mutability": "mutable",
														"name": "finalAmount",
														"nameLocation": "1887:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2772,
														"src": "1879:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2739,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1879:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2742,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1920:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1924:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1920:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2744,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2736,
															"src": "1932:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2741,
														"name": "withdrawLendToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2951,
														"src": "1901:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1879:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2751,
															"name": "finalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "2001:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2752,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2014:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2018:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2014:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2748,
																	"name": "_addressClaimContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2639,
																	"src": "1962:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2747,
																"name": "IClaims",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "1954:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IClaims_$2621_$",
																	"typeString": "type(contract IClaims)"
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1954:30:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaims_$2621",
																"typeString": "contract IClaims"
															}
														},
														"id": 2750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1985:14:8",
														"memberName": "reduceCoverage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2620,
														"src": "1954:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address) external"
														}
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2755,
												"nodeType": "ExpressionStatement",
												"src": "1954:72:8"
											},
											{
												"expression": {
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2756,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "2036:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2759,
														"indexExpression": {
															"expression": {
																"id": 2757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2043:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2043:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2036:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2760,
														"name": "finalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "2058:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2036:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2762,
												"nodeType": "ExpressionStatement",
												"src": "2036:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2103:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2107:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2103:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2769,
															"name": "finalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "2115:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2764,
																	"name": "_USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "2086:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2763,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "2079:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2079:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1390",
																"typeString": "contract IERC20"
															}
														},
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2093:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1357,
														"src": "2079:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2771,
												"nodeType": "ExpressionStatement",
												"src": "2079:49:8"
											}
										]
									},
									"functionSelector": "8d92fdf3",
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAsset",
									"nameLocation": "1828:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "1850:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "1842:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:20:8"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:8"
									},
									"scope": 3004,
									"src": "1819:316:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "2207:710:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2785,
																	"name": "aaveAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "2248:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2786,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2777,
																	"src": "2261:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2782,
																			"name": "_USDC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2642,
																			"src": "2233:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2781,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "2226:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2226:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1390",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2240:7:8",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1377,
																"src": "2226:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320636f6e747261637420686173206e6f7420656e6f75676820746f6b656e73",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2270:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f009470db02257ff02c01bdb413b692757316aefb0675a644795add53648c46",
																"typeString": "literal_string \"This contract has not enough tokens\""
															},
															"value": "This contract has not enough tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f009470db02257ff02c01bdb413b692757316aefb0675a644795add53648c46",
																"typeString": "literal_string \"This contract has not enough tokens\""
															}
														],
														"id": 2780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2217:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2217:92:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "2217:92:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2794,
															"name": "_USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "2335:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "2342:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2798,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2358:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																],
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2350:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2796,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2350:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2350:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2365:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 2791,
															"name": "poolAave",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "2319:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$638",
																"typeString": "contract IPool"
															}
														},
														"id": 2793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2328:6:8",
														"memberName": "supply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2319:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint256,address,uint16) external"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "2319:48:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2803,
														"name": "totalSharesLoansPerAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "2383:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2411:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2383:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2857,
													"nodeType": "Block",
													"src": "2524:386:8",
													"statements": [
														{
															"assignments": [
																2818
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2818,
																	"mutability": "mutable",
																	"name": "aTokenAddress",
																	"nameLocation": "2546:13:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2857,
																	"src": "2538:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2817,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2538:7:8",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2825,
															"initialValue": {
																"expression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"id": 2821,
																					"name": "_USDC",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2642,
																					"src": "2587:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2819,
																					"name": "poolAave",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2631,
																					"src": "2563:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IPool_$638",
																						"typeString": "contract IPool"
																					}
																				},
																				"id": 2820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2572:14:8",
																				"memberName": "getReserveData",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 488,
																				"src": "2563:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$881_memory_ptr_$",
																					"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																				}
																			},
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2563:30:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
																				"typeString": "struct DataTypes.ReserveData memory"
																			}
																		}
																	],
																	"id": 2823,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2562:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
																		"typeString": "struct DataTypes.ReserveData memory"
																	}
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2595:13:8",
																"memberName": "aTokenAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 868,
																"src": "2562:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2538:70:8"
														},
														{
															"assignments": [
																2827
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2827,
																	"mutability": "mutable",
																	"name": "currentBalance",
																	"nameLocation": "2630:14:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2857,
																	"src": "2622:22:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2826,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2622:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2837,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2834,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2688:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_insurance_$3004",
																					"typeString": "contract insurance"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_insurance_$3004",
																					"typeString": "contract insurance"
																				}
																			],
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2680:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2680:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2680:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2829,
																				"name": "aTokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2818,
																				"src": "2654:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2828,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1390,
																			"src": "2647:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2647:21:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1390",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2669:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1347,
																	"src": "2647:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2647:48:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2622:73:8"
														},
														{
															"assignments": [
																2839
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2839,
																	"mutability": "mutable",
																	"name": "amountShares",
																	"nameLocation": "2717:12:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2857,
																	"src": "2709:20:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2838,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2709:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2846,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2842,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2777,
																		"src": "2745:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2843,
																		"name": "totalSharesLoansPerAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2637,
																		"src": "2753:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2844,
																		"name": "currentBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2827,
																		"src": "2779:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2840,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "2732:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2278_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2737:6:8",
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1626,
																	"src": "2732:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2732:63:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2709:86:8"
														},
														{
															"expression": {
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2847,
																		"name": "sharesLoans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2650,
																		"src": "2809:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2849,
																	"indexExpression": {
																		"id": 2848,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "2821:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2809:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2850,
																	"name": "amountShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "2833:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2809:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2852,
															"nodeType": "ExpressionStatement",
															"src": "2809:36:8"
														},
														{
															"expression": {
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2853,
																	"name": "totalSharesLoansPerAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2637,
																	"src": "2859:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2854,
																	"name": "amountShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "2887:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2859:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2856,
															"nodeType": "ExpressionStatement",
															"src": "2859:40:8"
														}
													]
												},
												"id": 2858,
												"nodeType": "IfStatement",
												"src": "2378:532:8",
												"trueBody": {
													"id": 2816,
													"nodeType": "Block",
													"src": "2415:103:8",
													"statements": [
														{
															"expression": {
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2806,
																		"name": "sharesLoans",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2650,
																		"src": "2429:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2808,
																	"indexExpression": {
																		"id": 2807,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "2441:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2429:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2809,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2777,
																	"src": "2453:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2429:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2811,
															"nodeType": "ExpressionStatement",
															"src": "2429:30:8"
														},
														{
															"expression": {
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2812,
																	"name": "totalSharesLoansPerAsset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2637,
																	"src": "2473:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2813,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2777,
																	"src": "2501:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2473:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2815,
															"nodeType": "ExpressionStatement",
															"src": "2473:34:8"
														}
													]
												}
											}
										]
									},
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supplyLendToken",
									"nameLocation": "2150:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2174:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2166:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2191:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "2183:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:33:8"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:0:8"
									},
									"scope": 3004,
									"src": "2141:776:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "3012:711:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2870,
																	"name": "sharesLoans",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "3030:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2872,
																"indexExpression": {
																	"id": 2871,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "3042:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3030:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3053:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3030:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220686173206e6f742070726f7669646564207468697320746f6b656e20666f72206c656e64696e67",
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3056:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecf4a17f5db0088abc07cd49507b83388aed02a6cafb857599abb9d71405b158",
																"typeString": "literal_string \"User has not provided this token for lending\""
															},
															"value": "User has not provided this token for lending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecf4a17f5db0088abc07cd49507b83388aed02a6cafb857599abb9d71405b158",
																"typeString": "literal_string \"User has not provided this token for lending\""
															}
														],
														"id": 2869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3022:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2877,
												"nodeType": "ExpressionStatement",
												"src": "3022:81:8"
											},
											{
												"assignments": [
													2879
												],
												"declarations": [
													{
														"constant": false,
														"id": 2879,
														"mutability": "mutable",
														"name": "amountSharesUser",
														"nameLocation": "3122:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "3114:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3114:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2883,
												"initialValue": {
													"baseExpression": {
														"id": 2880,
														"name": "sharesLoans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "3141:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2882,
													"indexExpression": {
														"id": 2881,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2862,
														"src": "3153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3141:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3114:47:8"
											},
											{
												"assignments": [
													2885
												],
												"declarations": [
													{
														"constant": false,
														"id": 2885,
														"mutability": "mutable",
														"name": "aTokenAddress",
														"nameLocation": "3179:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "3171:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2884,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3171:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2892,
												"initialValue": {
													"expression": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 2888,
																		"name": "_USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "3220:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2886,
																		"name": "poolAave",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2631,
																		"src": "3196:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPool_$638",
																			"typeString": "contract IPool"
																		}
																	},
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3205:14:8",
																	"memberName": "getReserveData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 488,
																	"src": "3196:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$881_memory_ptr_$",
																		"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
																	}
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3196:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
																	"typeString": "struct DataTypes.ReserveData memory"
																}
															}
														],
														"id": 2890,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3195:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
															"typeString": "struct DataTypes.ReserveData memory"
														}
													},
													"id": 2891,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3228:13:8",
													"memberName": "aTokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 868,
													"src": "3195:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3171:70:8"
											},
											{
												"assignments": [
													2894
												],
												"declarations": [
													{
														"constant": false,
														"id": 2894,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "3259:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "3251:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3251:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2904,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2901,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3316:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																],
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3308:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2899,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3308:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3308:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2896,
																	"name": "aTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "3283:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2895,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "3276:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1390_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3276:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1390",
																"typeString": "contract IERC20"
															}
														},
														"id": 2898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3298:9:8",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1347,
														"src": "3276:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3276:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3251:71:8"
											},
											{
												"assignments": [
													2906
												],
												"declarations": [
													{
														"constant": false,
														"id": 2906,
														"mutability": "mutable",
														"name": "amountAsset",
														"nameLocation": "3341:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "3333:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3333:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2917,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2909,
																"name": "amountSharesUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "3368:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2910,
																"name": "percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2864,
																"src": "3387:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3368:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2912,
															"name": "currentBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "3399:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2913,
																"name": "totalSharesLoansPerAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "3415:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3442:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "3415:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2907,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "3355:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$2278_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3360:6:8",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1626,
														"src": "3355:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3355:92:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3333:114:8"
											},
											{
												"assignments": [
													2919
												],
												"declarations": [
													{
														"constant": false,
														"id": 2919,
														"mutability": "mutable",
														"name": "amountShares",
														"nameLocation": "3465:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "3457:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2918,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3457:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2926,
												"initialValue": {
													"arguments": [
														{
															"id": 2922,
															"name": "amountSharesUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "3493:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2923,
															"name": "percentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "3511:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31303030",
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3523:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"id": 2920,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "3480:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$2278_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3485:6:8",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1626,
														"src": "3480:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3480:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3457:71:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2930,
															"name": "_USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "3557:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2931,
															"name": "amountAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "3564:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2934,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3585:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_insurance_$3004",
																		"typeString": "contract insurance"
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3577:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2932,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3577:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3577:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2927,
															"name": "poolAave",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "3539:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$638",
																"typeString": "contract IPool"
															}
														},
														"id": 2929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3548:8:8",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "3539:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address) external returns (uint256)"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3539:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2937,
												"nodeType": "ExpressionStatement",
												"src": "3539:52:8"
											},
											{
												"expression": {
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2938,
															"name": "sharesLoans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2650,
															"src": "3601:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2940,
														"indexExpression": {
															"id": 2939,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "3613:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3601:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2941,
														"name": "amountShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "3625:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3601:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2943,
												"nodeType": "ExpressionStatement",
												"src": "3601:36:8"
											},
											{
												"expression": {
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2944,
														"name": "totalSharesLoansPerAsset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "3647:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2945,
														"name": "amountShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "3675:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3647:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2947,
												"nodeType": "ExpressionStatement",
												"src": "3647:40:8"
											},
											{
												"expression": {
													"id": 2948,
													"name": "amountAsset",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2906,
													"src": "3705:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2868,
												"id": 2949,
												"nodeType": "Return",
												"src": "3698:18:8"
											}
										]
									},
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLendToken",
									"nameLocation": "2932:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2958:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "2950:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2950:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "2975:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "2967:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2949:37:8"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "3004:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:9:8"
									},
									"scope": 3004,
									"src": "2923:800:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2962,
										"nodeType": "Block",
										"src": "3794:39:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2958,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2646,
														"src": "3811:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2960,
													"indexExpression": {
														"id": 2959,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "3818:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3811:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2957,
												"id": 2961,
												"nodeType": "Return",
												"src": "3804:22:8"
											}
										]
									},
									"functionSelector": "2c62fa10",
									"id": 2963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "assetsOf",
									"nameLocation": "3738:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3755:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "3747:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:17:8"
									},
									"returnParameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "3785:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3784:9:8"
									},
									"scope": 3004,
									"src": "3729:104:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "3909:44:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2970,
														"name": "sharesLoans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "3926:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2972,
													"indexExpression": {
														"id": 2971,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2965,
														"src": "3938:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3926:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2969,
												"id": 2973,
												"nodeType": "Return",
												"src": "3919:27:8"
											}
										]
									},
									"functionSelector": "d414c820",
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesLoansOf",
									"nameLocation": "3848:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3870:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "3862:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3861:17:8"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "3900:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:9:8"
									},
									"scope": 3004,
									"src": "3839:114:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "4017:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2982,
																"name": "_USDC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "4058:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2980,
																"name": "poolAave",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "4034:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IPool_$638",
																	"typeString": "contract IPool"
																}
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4043:14:8",
															"memberName": "getReserveData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 488,
															"src": "4034:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$881_memory_ptr_$",
																"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
															}
														},
														"id": 2983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4034:30:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveData_$881_memory_ptr",
															"typeString": "struct DataTypes.ReserveData memory"
														}
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4065:13:8",
													"memberName": "aTokenAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 868,
													"src": "4034:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2979,
												"id": 2985,
												"nodeType": "Return",
												"src": "4027:51:8"
											}
										]
									},
									"functionSelector": "82899756",
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getATokenAddress",
									"nameLocation": "3968:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3984:2:8"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "4008:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:9:8"
									},
									"scope": 3004,
									"src": "3959:126:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "4214:51:8",
										"statements": [
											{
												"expression": {
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2994,
														"name": "_addressClaimContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "4224:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2995,
														"name": "newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "4248:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4224:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2997,
												"nodeType": "ExpressionStatement",
												"src": "4224:34:8"
											}
										]
									},
									"functionSelector": "c0c24ddd",
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2991,
												"name": "onlyOwner",
												"nameLocations": [
													"4204:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "4204:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4204:9:8"
										}
									],
									"name": "changeAddressClaimContract",
									"nameLocation": "4150:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "4185:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "4177:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4176:20:8"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4214:0:8"
									},
									"scope": 3004,
									"src": "4141:124:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "4298:2:8",
										"statements": []
									},
									"id": 3003,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:2:8"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4298:0:8"
									},
									"scope": 3004,
									"src": "4271:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3005,
							"src": "672:3630:8",
							"usedErrors": []
						}
					],
					"src": "32:4271:8"
				},
				"id": 8
			}
		}
	}
}